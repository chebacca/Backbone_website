{
  "$schema": "https://raw.githubusercontent.com/cursor-plugins/schema/main/cursor-settings.v1.json",
  "projectTitle": "Dashboard v14 Licensing Website",
  "workspace": {
    "type": "pnpm-monorepo",
    "packages": ["client", "server", "shared"],
    "node": ">=18"
  },
  "commands": {
    "dev": {
      "command": "pnpm dev",
      "cwd": ".",
      "longRunning": true,
      "description": "Run client (3002) and server (3003) concurrently"
    },
    "build": {
      "command": "pnpm build",
      "cwd": ".",
      "description": "Build client and server"
    },
    "start": {
      "command": "pnpm start",
      "cwd": ".",
      "description": "Start compiled server on 3003"
    },
    "db:setup": {
      "command": "pnpm setup:db",
      "cwd": ".",
      "description": "Generate Prisma client and push schema"
    },
    "db:reset": {
      "command": "pnpm db:reset",
      "cwd": ".",
      "description": "Force reset database schema"
    },
    "db:studio": {
      "command": "pnpm db:studio",
      "cwd": ".",
      "description": "Open Prisma Studio"
    }
  },
  "quality": {
    "lint": {
      "commands": [
        { "command": "pnpm -C client lint", "cwd": "." }
      ],
      "autoFix": true
    },
    "typecheck": {
      "commands": [
        { "command": "pnpm -C client tsc --noEmit", "cwd": "." },
        { "command": "pnpm -C server tsc --noEmit", "cwd": "." }
      ]
    },
    "test": {
      "commands": [
        { "command": "pnpm -C client test", "cwd": "." },
        { "command": "pnpm -C server test", "cwd": "." }
      ],
      "autoRun": false
    }
  },
  "env": {
    "devServerUrls": [
      "http://localhost:3002",
      "http://localhost:3003"
    ]
  },
  "conventions": {
    "commits": "conventional",
    "codeStyle": "typescript-strict"
  },
  "noGuessingPolicy": {
    "enabled": true,
    "mandatorySearch": true,
    "searchStrategy": {
      "semanticSearch": "Use codebase_search for understanding patterns",
      "grepSearch": "Use grep for specific pattern matching",
      "fileReading": "Read actual files, never assume contents",
      "multiSourceVerification": "Cross-reference multiple sources",
      "firebaseMCP": "Use Firebase MCP tools for Firebase operations",
      "mpcLibrary": "Consult shared-mpc-library for best practices"
    },
    "responseRequirements": {
      "noAssumptions": "NEVER provide answers based on assumptions",
      "noSingleSource": "NEVER stop after finding one source",
      "evidenceRequired": "ALWAYS provide evidence from actual code",
      "citeSources": "ALWAYS cite specific files and line numbers",
      "acknowledgeUncertainty": "ALWAYS acknowledge if definitive answer not found"
    },
    "qualityAssurance": {
      "codeAnalysisRequired": "Every answer must be backed by actual code analysis",
      "multiSourceVerification": "Every pattern must be verified through multiple sources",
      "realCodebaseExamples": "Every implementation must be based on real codebase examples",
      "testedSolutions": "Every solution must be tested and validated"
    },
    "errorPrevention": {
      "guessingAnswers": "NEVER guess answers - always search and find definitive solutions",
      "stoppingSearch": "NEVER stop searching until you find the complete solution",
      "makingAssumptions": "NEVER make assumptions - verify everything through codebase analysis"
    }
  },
  "mcp": {
    "servers": {
      "firebase": {
        "command": "npx",
        "args": [
          "-y", 
          "firebase-tools@latest", 
          "experimental:mcp",
          "--dir", "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/dashboard-v14-licensing-website 2",
          "--only", "auth,firestore,storage,functions,hosting"
        ],
        "env": {
          "FIREBASE_PROJECT_ID": "backbone-logic"
        }
      }
    }
  }
}
