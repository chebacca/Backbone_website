{"version":3,"file":"AdminDashboard-BcZ5GSPN.js","sources":["../../src/pages/admin/AdminDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Paper,\n  Button,\n  Chip,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Tabs,\n  Tab,\n  Alert,\n  InputAdornment,\n  Container,\n} from '@mui/material';\nimport {\n  Dashboard as DashboardIcon,\n  People as PeopleIcon,\n  VpnKey as LicenseIcon,\n  Payment as PaymentIcon,\n  Warning as WarningIcon,\n  CheckCircle as CheckCircleIcon,\n  Error as ErrorIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Download as DownloadIcon,\n  Visibility as VisibilityIcon,\n  Search as SearchIcon,\n  Clear as ClearIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useSnackbar } from 'notistack';\nimport { api, endpoints } from '@/services/api';\nimport { useAuth } from '@/context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { Navigation } from '@/components/layout/Navigation';\nimport { Footer } from '@/components/layout/Footer';\n\ninterface AdminStats {\n  totalUsers: number;\n  activeSubscriptions: number;\n  totalRevenue: number;\n  pendingApprovals: number;\n  systemHealth: 'healthy' | 'warning' | 'error';\n}\n\ninterface User {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  status: 'active' | 'suspended' | 'pending';\n  subscription?: string;\n  lastLogin: string;\n  createdAt: string;\n}\n\ninterface License {\n  id: string;\n  key: string;\n  userId: string;\n  userEmail: string;\n  tier: string;\n  status: 'active' | 'expired' | 'suspended';\n  activatedAt: string;\n  expiresAt: string;\n  lastUsed: string;\n}\n\nconst AdminDashboard: React.FC = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(0);\n  const [stats, setStats] = useState<AdminStats>({\n    totalUsers: 0,\n    activeSubscriptions: 0,\n    totalRevenue: 0,\n    pendingApprovals: 0,\n    systemHealth: 'healthy',\n  });\n  const [users, setUsers] = useState<User[]>([]);\n  const [licenses, setLicenses] = useState<License[]>([]);\n  const [recentPayments, setRecentPayments] = useState<any[]>([]);\n  const [payments, setPayments] = useState<any[]>([]);\n  const [paymentsPage, setPaymentsPage] = useState(1);\n  const [paymentsTotalPages, setPaymentsTotalPages] = useState(1);\n  const [paymentsFilters, setPaymentsFilters] = useState<{ status?: string; email?: string; from?: string; to?: string }>({});\n  const [detailsOpen, setDetailsOpen] = useState(false);\n  const [detailsData, setDetailsData] = useState<{ payment?: any; licenses?: any[] }>({});\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [userDialogOpen, setUserDialogOpen] = useState(false);\n  const [licenseDialogOpen, setLicenseDialogOpen] = useState(false);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [addForm, setAddForm] = useState({ userId: '', subscriptionId: '', tier: 'PRO', seats: 1 });\n  const [userSubscriptions, setUserSubscriptions] = useState<any[]>([]);\n\n  // Search state variables\n  const [usersSearch, setUsersSearch] = useState('');\n  const [licensesSearch, setLicensesSearch] = useState('');\n  const [paymentsSearch, setPaymentsSearch] = useState('');\n\n  // Filtered data using useMemo for performance\n  const filteredUsers = useMemo(() => {\n    if (!usersSearch.trim()) return users;\n    \n    const searchTerm = usersSearch.toLowerCase();\n    return users.filter(user => \n      user.firstName.toLowerCase().includes(searchTerm) ||\n      user.lastName.toLowerCase().includes(searchTerm) ||\n      user.email.toLowerCase().includes(searchTerm) ||\n      user.role.toLowerCase().includes(searchTerm) ||\n      user.status.toLowerCase().includes(searchTerm) ||\n      (user.subscription && user.subscription.toLowerCase().includes(searchTerm))\n    );\n  }, [users, usersSearch]);\n\n  const filteredLicenses = useMemo(() => {\n    if (!licensesSearch.trim()) return licenses;\n    \n    const searchTerm = licensesSearch.toLowerCase();\n    return licenses.filter(license => \n      license.key.toLowerCase().includes(searchTerm) ||\n      license.userEmail.toLowerCase().includes(searchTerm) ||\n      license.tier.toLowerCase().includes(searchTerm) ||\n      license.status.toLowerCase().includes(searchTerm) ||\n      new Date(license.expiresAt).toLocaleDateString().includes(searchTerm) ||\n      new Date(license.activatedAt).toLocaleDateString().includes(searchTerm)\n    );\n  }, [licenses, licensesSearch]);\n\n  const filteredPayments = useMemo(() => {\n    if (!paymentsSearch.trim()) return payments;\n    \n    const searchTerm = paymentsSearch.toLowerCase();\n    return payments.filter(payment => \n      payment.id.toLowerCase().includes(searchTerm) ||\n      (payment.user?.email && payment.user.email.toLowerCase().includes(searchTerm)) ||\n      (payment.subscription?.tier && payment.subscription.tier.toLowerCase().includes(searchTerm)) ||\n      payment.status.toLowerCase().includes(searchTerm) ||\n      new Date(payment.createdAt).toLocaleDateString().includes(searchTerm) ||\n      `$${(payment.amount / 100).toFixed(2)}`.includes(searchTerm)\n    );\n  }, [payments, paymentsSearch]);\n\n  // Clear search functions\n  const clearUsersSearch = () => setUsersSearch('');\n  const clearLicensesSearch = () => setLicensesSearch('');\n  const clearPaymentsSearch = () => setPaymentsSearch('');\n\n  useEffect(() => {\n    let isMounted = true;\n    (async () => {\n      try {\n        // Ensure only SUPERADMIN can see this data\n        const roleUpper = String(user?.role || '').toUpperCase();\n        if (roleUpper !== 'SUPERADMIN') {\n          setUsers([]);\n          setLicenses([]);\n          setStats((s) => ({ ...s, systemHealth: 'warning' }));\n          return;\n        }\n\n        const [usersRes, licensesRes, paymentsRes, systemHealthRes, statsRes] = await Promise.all([\n          api.get(endpoints.admin.users()),\n          api.get(endpoints.admin.licenses()),\n          api.get(endpoints.admin.paymentAnalytics()),\n          api.get(endpoints.admin.systemHealth()),\n          api.get(endpoints.admin.dashboardStats()),\n        ]);\n\n        const usersData = usersRes.data?.data?.users ?? [];\n        const licensesData = licensesRes.data?.data?.licenses ?? [];\n        const paymentSummary = paymentsRes.data?.data?.summary ?? { totalRevenue: 0, activeSubscriptions: 0 };\n        const recent = statsRes.data?.data?.stats?.recentPayments ?? [];\n        const health = systemHealthRes.data?.data?.status ?? 'healthy';\n\n        if (!isMounted) return;\n        setUsers(usersData.map((u: any) => ({\n          id: u.id,\n          email: u.email,\n          firstName: u.name?.split(' ')[0] ?? '',\n          lastName: u.name?.split(' ').slice(1).join(' ') ?? '',\n          role: u.role,\n          status: u.status?.toLowerCase?.() || 'active',\n          subscription: (u.subscriptions?.[0]?.tier) ?? undefined,\n          lastLogin: u.lastLoginAt || new Date().toISOString(),\n          createdAt: u.createdAt || new Date().toISOString(),\n        })));\n\n        setLicenses(licensesData.map((l: any) => ({\n          id: l.id,\n          key: l.key,\n          userId: l.userId,\n          userEmail: l.user?.email ?? '',\n          tier: l.tier,\n          status: (l.status || '').toLowerCase(),\n          activatedAt: l.activatedAt || l.createdAt,\n          expiresAt: l.expiresAt || l.createdAt,\n          lastUsed: l.updatedAt || l.createdAt,\n        })));\n\n        setStats({\n          totalUsers: usersData.length,\n          activeSubscriptions: paymentSummary.activeSubscriptions ?? 0,\n          totalRevenue: paymentSummary.totalRevenue ?? 0,\n          pendingApprovals: 0,\n          systemHealth: health === 'healthy' ? 'healthy' : health === 'degraded' ? 'warning' : 'error',\n        });\n        setRecentPayments(recent);\n      } catch (error) {\n        if (!isMounted) return;\n        setUsers([]);\n        setLicenses([]);\n        setStats((s) => ({ ...s, systemHealth: 'error' }));\n        setRecentPayments([]);\n      }\n    })();\n    return () => { isMounted = false; };\n  }, [user?.role]);\n\n  const fetchPayments = async (page = 1) => {\n    const params = new URLSearchParams();\n    params.set('page', String(page));\n    params.set('limit', '20');\n    if (paymentsFilters.status) params.set('status', paymentsFilters.status);\n    if (paymentsFilters.email) params.set('email', paymentsFilters.email);\n    if (paymentsFilters.from) params.set('from', paymentsFilters.from);\n    if (paymentsFilters.to) params.set('to', paymentsFilters.to);\n    const res = await api.get(`${endpoints.admin.payments()}?${params.toString()}`);\n    const list = res.data?.data?.payments ?? [];\n    const pag = res.data?.data?.pagination ?? { pages: 1, page: 1 };\n    setPayments(list);\n    setPaymentsPage(pag.page || page);\n    setPaymentsTotalPages(pag.pages || 1);\n  };\n\n  useEffect(() => {\n    const roleUpper = String(user?.role || '').toUpperCase();\n    const isSuperAdmin = roleUpper === 'SUPERADMIN';\n    if (!isSuperAdmin) return;\n    if (activeTab !== 2) return;\n    fetchPayments(paymentsPage).catch(() => {});\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTab, paymentsPage, paymentsFilters, user?.role]);\n\n  const openPaymentDetails = async (paymentId: string) => {\n    try {\n      const res = await api.get(endpoints.admin.paymentDetails(paymentId));\n      const data = res.data?.data || {};\n      setDetailsData({ payment: data.payment, licenses: data.licenses || [] });\n      setDetailsOpen(true);\n    } catch (e) {\n      enqueueSnackbar('Failed to load payment details', { variant: 'error' });\n    }\n  };\n\n  const handleUserEdit = (user: User) => {\n    setSelectedUser(user);\n    setUserDialogOpen(true);\n  };\n\n  const handleUserSave = () => {\n    enqueueSnackbar('User updated successfully', { variant: 'success' });\n    setUserDialogOpen(false);\n    setSelectedUser(null);\n  };\n\n  const handleLicenseEdit = () => {\n    setLicenseDialogOpen(true);\n  };\n\n  const openAddDialog = async () => {\n    setAddDialogOpen(true);\n  };\n\n  const onUserSelect = async (uid: string) => {\n    setAddForm(prev => ({ ...prev, userId: uid, subscriptionId: '' }));\n    if (uid) {\n      const detailsRes = await api.get(endpoints.admin.userDetails(uid));\n      const subs = detailsRes.data?.data?.user?.subscriptions || [];\n      setUserSubscriptions(subs.filter((s: any) => s.status === 'ACTIVE'));\n    } else {\n      setUserSubscriptions([]);\n    }\n  };\n\n  const submitAdd = async () => {\n    try {\n      await api.post(endpoints.admin.createLicense(), addForm);\n      enqueueSnackbar('License(s) created', { variant: 'success' });\n      setAddDialogOpen(false);\n      const licensesRes = await api.get(endpoints.admin.licenses());\n      const licensesData = licensesRes.data?.data?.licenses ?? [];\n      setLicenses(licensesData.map((l: any) => ({\n        id: l.id,\n        key: l.key,\n        userId: l.userId,\n        userEmail: l.user?.email ?? '',\n        tier: l.tier,\n        status: (l.status || '').toLowerCase(),\n        activatedAt: l.activatedAt || l.createdAt,\n        expiresAt: l.expiresAt || l.createdAt,\n        lastUsed: l.updatedAt || l.createdAt,\n      })));\n    } catch (e: any) {\n      enqueueSnackbar(e?.message || 'Failed to create license', { variant: 'error' });\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'success';\n      case 'pending': return 'warning';\n      case 'suspended': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getHealthColor = (health: AdminStats['systemHealth']) => {\n    switch (health) {\n      case 'healthy': return 'success';\n      case 'warning': return 'warning';\n      case 'error': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getHealthIcon = (health: AdminStats['systemHealth']) => {\n    switch (health) {\n      case 'healthy': return <CheckCircleIcon />;\n      case 'warning': return <WarningIcon />;\n      case 'error': return <ErrorIcon />;\n      default: return <WarningIcon />;\n    }\n  };\n\n  return (\n    <>\n      <Navigation />\n      <Box sx={{ pt: 8, pb: 4 }}>\n        <Container maxWidth=\"xl\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 4 }}>\n              <DashboardIcon sx={{ fontSize: 32, color: 'primary.main' }} />\n              <Typography variant=\"h4\" sx={{ fontWeight: 700 }}>\n                Admin Dashboard\n              </Typography>\n              <Chip\n                icon={getHealthIcon(stats.systemHealth)}\n                label={`System ${stats.systemHealth}`}\n                color={getHealthColor(stats.systemHealth)}\n                size=\"small\"\n              />\n            </Box>\n\n        {/* Stats Cards */}\n        <Grid container spacing={3} sx={{ mb: 4 }}>\n          <Grid item xs={12} sm={6} lg={3}>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.1 }}\n            >\n              <Card\n                sx={{\n                  background: 'linear-gradient(135deg, rgba(0, 212, 255, 0.1) 0%, rgba(102, 126, 234, 0.1) 100%)',\n                  border: '1px solid rgba(0, 212, 255, 0.2)',\n                }}\n              >\n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                    <PeopleIcon sx={{ color: 'primary.main' }} />\n                    <Typography variant=\"h6\" color=\"text.secondary\">\n                      Total Users\n                    </Typography>\n                  </Box>\n                  <Typography variant=\"h3\" sx={{ fontWeight: 700, color: 'primary.main' }}>\n                    {stats.totalUsers.toLocaleString()}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} lg={3}>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <Card\n                sx={{\n                  background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%)',\n                  border: '1px solid rgba(255, 255, 255, 0.1)',\n                }}\n              >\n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                    <LicenseIcon sx={{ color: 'secondary.main' }} />\n                    <Typography variant=\"h6\" color=\"text.secondary\">\n                      Active Subscriptions\n                    </Typography>\n                  </Box>\n                  <Typography variant=\"h3\" sx={{ fontWeight: 700 }}>\n                    {stats.activeSubscriptions.toLocaleString()}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} lg={3}>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.3 }}\n            >\n              <Card\n                sx={{\n                  background: 'linear-gradient(135deg, rgba(76, 175, 80, 0.1) 0%, rgba(139, 195, 74, 0.1) 100%)',\n                  border: '1px solid rgba(76, 175, 80, 0.2)',\n                }}\n              >\n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                    <PaymentIcon sx={{ color: 'success.main' }} />\n                    <Typography variant=\"h6\" color=\"text.secondary\">\n                      Total Revenue\n                    </Typography>\n                  </Box>\n                  <Typography variant=\"h3\" sx={{ fontWeight: 700, color: 'success.main' }}>\n                    ${stats.totalRevenue.toLocaleString()}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} lg={3}>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.4 }}\n            >\n              <Card\n                sx={{\n                  background: 'linear-gradient(135deg, rgba(255, 152, 0, 0.1) 0%, rgba(255, 193, 7, 0.1) 100%)',\n                  border: '1px solid rgba(255, 152, 0, 0.2)',\n                }}\n              >\n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                    <WarningIcon sx={{ color: 'warning.main' }} />\n                    <Typography variant=\"h6\" color=\"text.secondary\">\n                      Pending Approvals\n                    </Typography>\n                  </Box>\n                  <Typography variant=\"h3\" sx={{ fontWeight: 700, color: 'warning.main' }}>\n                    {stats.pendingApprovals}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n        </Grid>\n\n        {/* Tabs */}\n        <Paper sx={{ mb: 3 }}>\n          <Tabs\n            value={activeTab}\n            onChange={(_, newValue) => setActiveTab(newValue)}\n            sx={{\n              borderBottom: 1,\n              borderColor: 'divider',\n              '& .MuiTab-root': {\n                textTransform: 'none',\n                fontWeight: 600,\n              },\n            }}\n          >\n            <Tab label=\"Users\" />\n            <Tab label=\"Licenses\" />\n            <Tab label=\"Invoices\" />\n            <Tab label=\"System Health\" />\n          </Tabs>\n        </Paper>\n\n        {/* Users Tab */}\n        {activeTab === 0 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <TextField\n                placeholder=\"Search users by name, email, role, status, or subscription...\"\n                value={usersSearch}\n                onChange={(e) => setUsersSearch(e.target.value)}\n                size=\"small\"\n                sx={{ minWidth: 400 }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                  endAdornment: usersSearch && (\n                    <InputAdornment position=\"end\">\n                      <IconButton size=\"small\" onClick={clearUsersSearch}>\n                        <ClearIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Button variant=\"contained\" onClick={openAddDialog}>Add License</Button>\n            </Box>\n            {usersSearch && (\n              <Box sx={{ mb: 2 }}>\n                <Chip \n                  label={`${filteredUsers.length} of ${users.length} users found`}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                />\n              </Box>\n            )}\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>User</TableCell>\n                    <TableCell>Role</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Subscription</TableCell>\n                    <TableCell>Last Login</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredUsers.length > 0 ? (\n                    filteredUsers.map((user) => (\n                      <TableRow key={user.id}>\n                        <TableCell>\n                          <Box>\n                            <Typography variant=\"subtitle2\">\n                              {user.firstName} {user.lastName}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              {user.email}\n                            </Typography>\n                          </Box>\n                        </TableCell>\n                        <TableCell>\n                          <Chip\n                            label={user.role}\n                            size=\"small\"\n                            color={user.role === 'ADMIN' ? 'primary' : 'default'}\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <Chip\n                            label={user.status}\n                            size=\"small\"\n                            color={getStatusColor(user.status)}\n                          />\n                        </TableCell>\n                        <TableCell>\n                          {user.subscription && (\n                            <Chip\n                              label={user.subscription}\n                              size=\"small\"\n                              variant=\"outlined\"\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {new Date(user.lastLogin).toLocaleDateString()}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => handleUserEdit(user)}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton size=\"small\" color=\"error\">\n                            <DeleteIcon />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={6} align=\"center\">\n                        <Box sx={{ py: 4 }}>\n                          <Typography variant=\"body1\" color=\"text.secondary\">\n                            {usersSearch ? 'No users found matching your search criteria.' : 'No users available.'}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </motion.div>\n        )}\n\n        {/* Licenses Tab */}\n        {activeTab === 1 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <TextField\n                placeholder=\"Search licenses by key, user email, tier, status, or dates...\"\n                value={licensesSearch}\n                onChange={(e) => setLicensesSearch(e.target.value)}\n                size=\"small\"\n                sx={{ minWidth: 400 }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                  endAdornment: licensesSearch && (\n                    <InputAdornment position=\"end\">\n                      <IconButton size=\"small\" onClick={clearLicensesSearch}>\n                        <ClearIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Box>\n            {licensesSearch && (\n              <Box sx={{ mb: 2 }}>\n                <Chip \n                  label={`${filteredLicenses.length} of ${licenses.length} licenses found`}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                />\n              </Box>\n            )}\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>License Key</TableCell>\n                    <TableCell>User</TableCell>\n                    <TableCell>Tier</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Expires</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredLicenses.length > 0 ? (\n                    filteredLicenses.map((license) => (\n                      <TableRow key={license.id}>\n                        <TableCell>\n                          <Typography variant=\"body2\" fontFamily=\"monospace\">\n                            {license.key}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {license.userEmail}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Chip\n                            label={license.tier}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <Chip\n                            label={license.status}\n                            size=\"small\"\n                            color={getStatusColor(license.status)}\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {new Date(license.expiresAt).toLocaleDateString()}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => handleLicenseEdit()}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton size=\"small\">\n                            <VisibilityIcon />\n                          </IconButton>\n                          <IconButton size=\"small\">\n                            <DownloadIcon />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={6} align=\"center\">\n                        <Box sx={{ py: 4 }}>\n                          <Typography variant=\"body1\" color=\"text.secondary\">\n                            {licensesSearch ? 'No licenses found matching your search criteria.' : 'No licenses available.'}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </motion.div>\n        )}\n\n        {/* Invoices Tab */}\n        {activeTab === 2 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mb: 2 }}>\n              {/* Global Search */}\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <TextField\n                  placeholder=\"Search payments by ID, email, tier, status, amount, or date...\"\n                  value={paymentsSearch}\n                  onChange={(e) => setPaymentsSearch(e.target.value)}\n                  size=\"small\"\n                  sx={{ minWidth: 400 }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                    endAdornment: paymentsSearch && (\n                      <InputAdornment position=\"end\">\n                        <IconButton size=\"small\" onClick={clearPaymentsSearch}>\n                          <ClearIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                {paymentsSearch && (\n                  <Chip \n                    label={`${filteredPayments.length} of ${payments.length} payments found`}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                  />\n                )}\n              </Box>\n              \n              {/* Advanced Filters */}\n              <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n                <TextField\n                  label=\"Filter by Email\"\n                  size=\"small\"\n                  value={paymentsFilters.email || ''}\n                  onChange={(e) => setPaymentsFilters((f) => ({ ...f, email: e.target.value }))}\n                />\n                <TextField\n                  label=\"From\"\n                  size=\"small\"\n                  type=\"date\"\n                  InputLabelProps={{ shrink: true }}\n                  value={paymentsFilters.from || ''}\n                  onChange={(e) => setPaymentsFilters((f) => ({ ...f, from: e.target.value }))}\n                />\n                <TextField\n                  label=\"To\"\n                  size=\"small\"\n                  type=\"date\"\n                  InputLabelProps={{ shrink: true }}\n                  value={paymentsFilters.to || ''}\n                  onChange={(e) => setPaymentsFilters((f) => ({ ...f, to: e.target.value }))}\n                />\n                <TextField\n                  label=\"Status\"\n                  select\n                  size=\"small\"\n                  value={paymentsFilters.status || ''}\n                  onChange={(e) => setPaymentsFilters((f) => ({ ...f, status: e.target.value || undefined }))}\n                  sx={{ minWidth: 160 }}\n                >\n                  <MenuItem value=\"\">All</MenuItem>\n                  <MenuItem value=\"SUCCEEDED\">SUCCEEDED</MenuItem>\n                  <MenuItem value=\"PENDING\">PENDING</MenuItem>\n                  <MenuItem value=\"FAILED\">FAILED</MenuItem>\n                  <MenuItem value=\"REFUNDED\">REFUNDED</MenuItem>\n                </TextField>\n                <Button variant=\"outlined\" onClick={() => fetchPayments(1)}>Apply Filters</Button>\n              </Box>\n            </Box>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Payment ID</TableCell>\n                    <TableCell>User</TableCell>\n                    <TableCell>Tier</TableCell>\n                    <TableCell>Amount</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Invoice</TableCell>\n                    <TableCell>Details</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredPayments.length > 0 ? (\n                    filteredPayments.map((p) => (\n                      <TableRow key={p.id}>\n                        <TableCell>\n                          <Typography variant=\"body2\" fontFamily=\"monospace\">{p.id}</Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">{p.user?.email || '—'}</Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Chip size=\"small\" variant=\"outlined\" label={p.subscription?.tier || '—'} />\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">${'{'}(p.amount / 100).toFixed(2){'}'}</Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Chip size=\"small\" label={p.status} color={p.status === 'SUCCEEDED' ? 'success' : p.status === 'FAILED' ? 'error' : 'default'} />\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">{new Date(p.createdAt).toLocaleDateString()}</Typography>\n                        </TableCell>\n                        <TableCell>\n                          {p.receiptUrl ? (\n                            <Button size=\"small\" variant=\"outlined\" onClick={() => window.open(p.receiptUrl, '_blank')}>View</Button>\n                          ) : (\n                            <Typography variant=\"body2\" color=\"text.secondary\">N/A</Typography>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <Button size=\"small\" onClick={() => openPaymentDetails(p.id)}>Open</Button>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={8} align=\"center\">\n                        <Box sx={{ py: 4 }}>\n                          <Typography variant=\"body1\" color=\"text.secondary\">\n                            {paymentsSearch ? 'No payments found matching your search criteria.' : 'No payments available.'}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end', mt: 2 }}>\n              <Button disabled={paymentsPage <= 1} onClick={() => setPaymentsPage((p) => Math.max(1, p - 1))}>Prev</Button>\n              <Chip label={`Page ${paymentsPage} of ${paymentsTotalPages}`} />\n              <Button disabled={paymentsPage >= paymentsTotalPages} onClick={() => setPaymentsPage((p) => Math.min(paymentsTotalPages, p + 1))}>Next</Button>\n            </Box>\n          </motion.div>\n        )}\n\n        {/* System Health Tab */}\n        {activeTab === 3 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Paper sx={{ p: 3 }}>\n                  <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                    System Status\n                  </Typography>\n                  <Alert severity=\"success\" sx={{ mb: 2 }}>\n                    All systems operational\n                  </Alert>\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\n                    Database connection: Healthy\n                  </Alert>\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\n                    API response time: 45ms\n                  </Alert>\n                  <Alert severity=\"warning\">\n                    Storage usage: 78% (Consider cleanup)\n                  </Alert>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Paper sx={{ p: 3 }}>\n                  <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                    Recent Activity\n                  </Typography>\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                      <CheckCircleIcon color=\"success\" />\n                      <Typography variant=\"body2\">\n                        New user registration: john.doe@company.com\n                      </Typography>\n                    </Box>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                      <CheckCircleIcon color=\"success\" />\n                      <Typography variant=\"body2\">\n                        License activated: LIC-XXXX-YYYY-ZZZZ-0001\n                      </Typography>\n                    </Box>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                      <WarningIcon color=\"warning\" />\n                      <Typography variant=\"body2\">\n                        Payment failed: jane.smith@startup.io\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Paper>\n              </Grid>\n            </Grid>\n          </motion.div>\n        )}\n      </motion.div>\n\n      {/* User Edit Dialog */}\n      <Dialog\n        open={userDialogOpen}\n        onClose={() => setUserDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Edit User</DialogTitle>\n        <DialogContent>\n          {selectedUser && (\n            <Grid container spacing={3} sx={{ mt: 1 }}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"First Name\"\n                  value={selectedUser.firstName}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Last Name\"\n                  value={selectedUser.lastName}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Email\"\n                  value={selectedUser.email}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth>\n                  <InputLabel>Role</InputLabel>\n                  <Select\n                    value={selectedUser.role}\n                    label=\"Role\"\n                    inputProps={{\n                      'aria-label': 'Select user role',\n                      title: 'Choose the user role'\n                    }}\n                  >\n                    <MenuItem value=\"USER\">User</MenuItem>\n                    <MenuItem value=\"ADMIN\">Admin</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth>\n                  <InputLabel>Status</InputLabel>\n                  <Select\n                    value={selectedUser.status}\n                    label=\"Status\"\n                    inputProps={{\n                      'aria-label': 'Select user status',\n                      title: 'Choose the user status'\n                    }}\n                  >\n                    <MenuItem value=\"active\">Active</MenuItem>\n                    <MenuItem value=\"suspended\">Suspended</MenuItem>\n                    <MenuItem value=\"pending\">Pending</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setUserDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleUserSave} variant=\"contained\">\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Payment Details Dialog */}\n      <Dialog open={detailsOpen} onClose={() => setDetailsOpen(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Payment Details</DialogTitle>\n        <DialogContent>\n          {detailsData.payment ? (\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n                <Chip label={`ID: ${detailsData.payment.id}`} />\n                <Chip label={`User: ${detailsData.payment.user?.email || '—'}`} />\n                <Chip label={`Amount: $${(detailsData.payment.amount / 100).toFixed(2)}`} />\n                <Chip label={`Status: ${detailsData.payment.status}`} />\n                <Chip label={`Date: ${new Date(detailsData.payment.createdAt).toLocaleString()}`} />\n                {detailsData.payment.receiptUrl && (\n                  <Button size=\"small\" variant=\"outlined\" onClick={() => window.open(detailsData.payment.receiptUrl, '_blank')}>View Invoice</Button>\n                )}\n              </Box>\n              <Typography variant=\"subtitle2\">Related Licenses</Typography>\n              <TableContainer component={Paper}>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>License Key</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Activated</TableCell>\n                      <TableCell>Expires</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {(detailsData.licenses || []).map((l) => (\n                      <TableRow key={l.id}>\n                        <TableCell>\n                          <Typography variant=\"body2\" fontFamily=\"monospace\">{l.key}</Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Chip size=\"small\" label={l.status} color={getStatusColor(String(l.status).toLowerCase()) as any} />\n                        </TableCell>\n                        <TableCell>{l.activatedAt ? new Date(l.activatedAt).toLocaleDateString() : '—'}</TableCell>\n                        <TableCell>{l.expiresAt ? new Date(l.expiresAt).toLocaleDateString() : '—'}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" color=\"text.secondary\">No details.</Typography>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDetailsOpen(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* License Edit Dialog */}\n      <Dialog\n        open={licenseDialogOpen}\n        onClose={() => setLicenseDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Edit License</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            License management options will be available here.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setLicenseDialogOpen(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Add License Dialog */}\n      <Dialog\n        open={addDialogOpen}\n        onClose={() => setAddDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Add License</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 0.5 }}>\n            <Grid item xs={12}>\n              <TextField\n                select fullWidth label=\"User\"\n                value={addForm.userId}\n                onChange={(e) => onUserSelect(e.target.value)}\n              >\n                {users.map(u => (\n                  <MenuItem key={u.id} value={u.id}>{u.email}</MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                select fullWidth label=\"Subscription\"\n                value={addForm.subscriptionId}\n                onChange={(e) => setAddForm(prev => ({ ...prev, subscriptionId: e.target.value }))}\n                disabled={!userSubscriptions.length}\n              >\n                {userSubscriptions.map((s: any) => (\n                  <MenuItem key={s.id} value={s.id}>{s.tier} — seats {s.seats}</MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                select fullWidth label=\"Tier\"\n                value={addForm.tier}\n                onChange={(e) => setAddForm(prev => ({ ...prev, tier: e.target.value }))}\n              >\n                <MenuItem value=\"BASIC\">BASIC</MenuItem>\n                <MenuItem value=\"PRO\">PRO</MenuItem>\n                <MenuItem value=\"ENTERPRISE\">ENTERPRISE</MenuItem>\n              </TextField>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                fullWidth type=\"number\" label=\"Seats\" inputProps={{ min: 1, max: 1000 }}\n                value={addForm.seats}\n                onChange={(e) => setAddForm(prev => ({ ...prev, seats: Math.max(1, Math.min(1000, parseInt(e.target.value) || 1)) }))}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setAddDialogOpen(false)}>Cancel</Button>\n          <Button variant=\"contained\" onClick={submitAdd} disabled={!addForm.userId || !addForm.subscriptionId}>Create</Button>\n        </DialogActions>\n      </Dialog>\n        </Container>\n      </Box>\n      <Footer />\n    </>\n  );\n};\n\nexport default AdminDashboard;\n"],"names":["AdminDashboard","enqueueSnackbar","useSnackbar","user","useAuth","useNavigate","activeTab","setActiveTab","useState","stats","setStats","users","setUsers","licenses","setLicenses","recentPayments","setRecentPayments","payments","setPayments","paymentsPage","setPaymentsPage","paymentsTotalPages","setPaymentsTotalPages","paymentsFilters","setPaymentsFilters","detailsOpen","setDetailsOpen","detailsData","setDetailsData","selectedUser","setSelectedUser","userDialogOpen","setUserDialogOpen","licenseDialogOpen","setLicenseDialogOpen","addDialogOpen","setAddDialogOpen","addForm","setAddForm","userSubscriptions","setUserSubscriptions","usersSearch","setUsersSearch","licensesSearch","setLicensesSearch","paymentsSearch","setPaymentsSearch","filteredUsers","useMemo","searchTerm","filteredLicenses","license","filteredPayments","payment","_a","_b","clearUsersSearch","clearLicensesSearch","clearPaymentsSearch","useEffect","isMounted","s","usersRes","licensesRes","paymentsRes","systemHealthRes","statsRes","api","endpoints","usersData","licensesData","_d","_c","paymentSummary","_f","_e","recent","_i","_h","_g","health","_k","_j","u","l","fetchPayments","page","params","res","list","pag","openPaymentDetails","paymentId","data","handleUserEdit","handleUserSave","handleLicenseEdit","openAddDialog","onUserSelect","uid","prev","subs","submitAdd","e","getStatusColor","status","getHealthColor","getHealthIcon","CheckCircleIcon","WarningIcon","ErrorIcon","jsxs","Fragment","jsx","Navigation","Box","Container","motion","DashboardIcon","Typography","Chip","Grid","Card","CardContent","PeopleIcon","LicenseIcon","PaymentIcon","Paper","Tabs","_","newValue","Tab","TextField","InputAdornment","SearchIcon","IconButton","ClearIcon","Button","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","EditIcon","DeleteIcon","VisibilityIcon","DownloadIcon","f","MenuItem","p","Alert","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","DialogActions","Footer"],"mappings":"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"}