{"version":3,"file":"AnalyticsPage-BPIvY1sV.js","sources":["../../src/pages/dashboard/AnalyticsPage.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Paper,\n  Button,\n  ButtonGroup,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Chip,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Avatar,\n  Divider,\n} from '@mui/material';\nimport {\n  TrendingUp,\n  TrendingDown,\n  Analytics,\n  Speed,\n  Storage,\n  Devices,\n  LocationOn,\n  Code,\n  Security,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { api, endpoints } from '@/services/api';\nimport { useAuth } from '@/context/AuthContext';\n\ninterface ChartData {\n  label: string;\n  value: number;\n  change?: number;\n}\n\ninterface UsageMetric {\n  name: string;\n  value: number;\n  limit: number;\n  unit: string;\n  icon: React.ReactNode;\n  color: string;\n}\n\nconst emptyUsageData: ChartData[] = [\n  { label: 'Mon', value: 0 },\n  { label: 'Tue', value: 0 },\n  { label: 'Wed', value: 0 },\n  { label: 'Thu', value: 0 },\n  { label: 'Fri', value: 0 },\n  { label: 'Sat', value: 0 },\n  { label: 'Sun', value: 0 },\n];\n\nconst makeUsageMetrics = (totals: { apiCalls: number; dataTransferGB: number; activeDevices: number; uptimePct: number; }) : UsageMetric[] => [\n  { name: 'API Calls', value: totals.apiCalls, limit: 100000, unit: 'calls', icon: <Code />, color: '#00d4ff' },\n  { name: 'Data Transfer', value: totals.dataTransferGB, limit: 100, unit: 'GB', icon: <Storage />, color: '#667eea' },\n  { name: 'Active Devices', value: totals.activeDevices, limit: 50, unit: 'devices', icon: <Devices />, color: '#f093fb' },\n  { name: 'Uptime', value: totals.uptimePct, limit: 100, unit: '%', icon: <Security />, color: '#4facfe' },\n];\n\nconst topEndpoints = [\n  { name: '/api/v1/licenses/validate', calls: 23567, percentage: 45.2 },\n  { name: '/api/v1/users/profile', calls: 12890, percentage: 24.7 },\n  { name: '/api/v1/analytics/usage', calls: 8234, percentage: 15.8 },\n  { name: '/api/v1/downloads/sdk', calls: 4567, percentage: 8.8 },\n  { name: '/api/v1/auth/refresh', calls: 2890, percentage: 5.5 },\n];\n\nconst activeRegions = [\n  { region: 'United States', users: 145, percentage: 42.3 },\n  { region: 'United Kingdom', users: 89, percentage: 26.0 },\n  { region: 'Germany', users: 67, percentage: 19.5 },\n  { region: 'Canada', users: 23, percentage: 6.7 },\n  { region: 'Australia', users: 19, percentage: 5.5 },\n];\n\nconst SimpleChart: React.FC<{ data: ChartData[] }> = ({ data }) => {\n  const maxValue = Math.max(...data.map(d => d.value));\n  \n  return (\n    <Box sx={{ height: 200, display: 'flex', alignItems: 'end', gap: 1, px: 2 }}>\n      {data.map((item) => (\n        <Box key={item.label} sx={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <motion.div\n            initial={{ height: 0 }}\n            animate={{ height: `${(item.value / maxValue) * 160}px` }}\n            transition={{ duration: 0.8, delay: data.indexOf(item) * 0.1 }}\n            style={{\n              width: '100%',\n              background: 'linear-gradient(180deg, #00d4ff 0%, #667eea 100%)',\n              borderRadius: '4px 4px 0 0',\n              marginBottom: '8px',\n            }}\n          />\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            {item.label}\n          </Typography>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nconst MetricCard: React.FC<{ metric: UsageMetric }> = ({ metric }) => {\n  const percentage = (metric.value / metric.limit) * 100;\n  \n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.6 }}\n    >\n      <Card\n        sx={{\n          background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n          backdropFilter: 'blur(20px)',\n          border: '1px solid rgba(255,255,255,0.1)',\n          '&:hover': {\n            transform: 'translateY(-2px)',\n            boxShadow: '0 8px 32px rgba(0,0,0,0.3)',\n          },\n          transition: 'all 0.3s ease',\n        }}\n      >\n        <CardContent>\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>\n            <Avatar sx={{ bgcolor: metric.color, width: 40, height: 40 }}>\n              {metric.icon}\n            </Avatar>\n            <Typography variant=\"h6\" sx={{ fontWeight: 700 }}>\n              {metric.value.toLocaleString()}\n              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" sx={{ ml: 0.5 }}>\n                {metric.unit}\n              </Typography>\n            </Typography>\n          </Box>\n          \n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n            {metric.name}\n          </Typography>\n          \n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <LinearProgress\n              variant=\"determinate\"\n              value={percentage}\n              sx={{\n                flex: 1,\n                height: 6,\n                borderRadius: 3,\n                backgroundColor: 'rgba(255,255,255,0.1)',\n                '& .MuiLinearProgress-bar': {\n                  borderRadius: 3,\n                  backgroundColor: metric.color,\n                },\n              }}\n            />\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ minWidth: 40 }}>\n              {percentage.toFixed(1)}%\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n};\n\nconst AnalyticsPage: React.FC = () => {\n  const { user } = useAuth();\n  const [timeRange, setTimeRange] = useState<'7d' | '30d' | '90d'>('7d');\n  const [selectedMetric, setSelectedMetric] = useState<'api_calls' | 'data_transfer' | 'devices'>('api_calls');\n  const [chartData, setChartData] = useState<ChartData[]>(emptyUsageData);\n  const [metrics, setMetrics] = useState(makeUsageMetrics({ apiCalls: 0, dataTransferGB: 0, activeDevices: 0, uptimePct: 99.8 }));\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    let isMounted = true;\n    (async () => {\n      try {\n        setLoading(true);\n        const isAdmin = ['admin', 'enterprise']\n          .includes(String(user?.role || '').toLowerCase());\n\n        if (isAdmin) {\n          // Use admin license analytics as a proxy for system usage\n          const lic = await api.get(`${endpoints.admin.licenseAnalytics()}?period=${timeRange}`);\n          const la = lic.data?.data?.analytics || {};\n          setChartData((la.dailyCounts || []).map((d: any) => ({ label: d.date, value: d.count })) || emptyUsageData);\n          setMetrics(makeUsageMetrics({\n            apiCalls: la.activeLicenses ?? 0, // placeholder mapping; replace with real if added\n            dataTransferGB: (la.totalLicenses || 0) / 10,\n            activeDevices: la.newLicenses || 0,\n            uptimePct: 99.8,\n          }));\n        } else {\n          // Non-admin: pull per-user license analytics summary\n          const usr = await api.get(endpoints.licenses.analytics());\n          const summary = usr.data?.data?.summary || {};\n          setChartData(Object.entries(summary.eventTypes || {}).map(([k, v]: any) => ({ label: k, value: v })) || emptyUsageData);\n          setMetrics(makeUsageMetrics({\n            apiCalls: summary.totalEvents || 0,\n            dataTransferGB: (summary.totalEvents || 0) / 100,\n            activeDevices: Object.keys(summary.eventTypes || {}).length,\n            uptimePct: 99.8,\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to fetch analytics data:', error);\n        if (isMounted) {\n          setChartData(emptyUsageData);\n          setMetrics(makeUsageMetrics({ apiCalls: 0, dataTransferGB: 0, activeDevices: 0, uptimePct: 99.8 }));\n        }\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    })();\n    return () => { isMounted = false; };\n  }, [user?.role, timeRange]);\n\n  const totalApiCalls = useMemo(() => chartData.reduce((sum, d) => sum + d.value, 0), [chartData]);\n  const avgGrowth = useMemo(() => chartData.length ? chartData.reduce((s, d) => s + (d.change || 0), 0) / chartData.length : 0, [chartData]);\n\n  return (\n    <Box>\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n          <Box>\n            <Typography variant=\"h4\" sx={{ fontWeight: 700, mb: 1 }}>\n              Usage Analytics\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"text.secondary\"\n              sx={{ mb: 4 }}\n            >\n              Monitor your BackboneLogic, Inc. usage patterns and performance\n            </Typography>\n          </Box>\n          \n          <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\n            <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n              <InputLabel>Time Range</InputLabel>\n              <Select\n                value={timeRange}\n                label=\"Time Range\"\n                onChange={(e) => setTimeRange(e.target.value as '7d' | '30d' | '90d')}\n                inputProps={{\n                  'aria-label': 'Select time range for analytics',\n                  title: 'Choose the time period for analytics data'\n                }}\n              >\n                <MenuItem value=\"1d\">Last 24h</MenuItem>\n                <MenuItem value=\"7d\">Last 7 days</MenuItem>\n                <MenuItem value=\"30d\">Last 30 days</MenuItem>\n                <MenuItem value=\"90d\">Last 90 days</MenuItem>\n              </Select>\n            </FormControl>\n            \n            <ButtonGroup variant=\"outlined\" size=\"small\">\n              <Button\n                variant={selectedMetric === 'api_calls' ? 'contained' : 'outlined'}\n                onClick={() => setSelectedMetric('api_calls')}\n              >\n                API Calls\n              </Button>\n              <Button\n                variant={selectedMetric === 'data_transfer' ? 'contained' : 'outlined'}\n                onClick={() => setSelectedMetric('data_transfer')}\n              >\n                Data Transfer\n              </Button>\n              <Button\n                variant={selectedMetric === 'devices' ? 'contained' : 'outlined'}\n                onClick={() => setSelectedMetric('devices')}\n              >\n                Devices\n              </Button>\n            </ButtonGroup>\n          </Box>\n        </Box>\n      </motion.div>\n\n      {/* Summary Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} sm={6} lg={3}>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.1 }}\n          >\n            <Card\n              sx={{\n                background: 'linear-gradient(135deg, rgba(0, 212, 255, 0.1) 0%, rgba(102, 126, 234, 0.1) 100%)',\n                border: '1px solid rgba(0, 212, 255, 0.2)',\n              }}\n            >\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                  <Analytics sx={{ color: 'primary.main' }} />\n                  <Chip\n                    icon={<TrendingUp />}\n                    label={`+${avgGrowth.toFixed(1)}%`}\n                    color=\"success\"\n                    size=\"small\"\n                  />\n                </Box>\n                <Typography variant=\"h4\" sx={{ fontWeight: 700, color: 'primary.main' }}>\n                  {totalApiCalls.toLocaleString()}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Total API Calls\n                </Typography>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </Grid>\n\n        <Grid item xs={12} sm={6} lg={3}>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <Card\n              sx={{\n                background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%)',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n              }}\n            >\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                  <Speed sx={{ color: 'secondary.main' }} />\n                  <Chip\n                    icon={<TrendingUp />}\n                    label=\"+2.3%\"\n                    color=\"success\"\n                    size=\"small\"\n                  />\n                </Box>\n                <Typography variant=\"h4\" sx={{ fontWeight: 700 }}>\n                  98.7%\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Average Response Time\n                </Typography>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </Grid>\n\n        <Grid item xs={12} sm={6} lg={3}>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.3 }}\n          >\n            <Card\n              sx={{\n                background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%)',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n              }}\n            >\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                  <Devices sx={{ color: 'warning.main' }} />\n                  <Chip\n                    icon={<TrendingUp />}\n                    label=\"+12\"\n                    color=\"success\"\n                    size=\"small\"\n                  />\n                </Box>\n                <Typography variant=\"h4\" sx={{ fontWeight: 700 }}>\n                  342\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Active Devices\n                </Typography>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </Grid>\n\n        <Grid item xs={12} sm={6} lg={3}>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            <Card\n              sx={{\n                background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%)',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n              }}\n            >\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                  <Storage sx={{ color: 'info.main' }} />\n                  <Chip\n                    icon={<TrendingDown />}\n                    label=\"-0.2%\"\n                    color=\"error\"\n                    size=\"small\"\n                  />\n                </Box>\n                <Typography variant=\"h4\" sx={{ fontWeight: 700 }}>\n                  2.4 TB\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Data Transfer\n                </Typography>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        {/* Usage Trends Chart */}\n        <Grid item xs={12} lg={8}>\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.5 }}\n          >\n            <Paper\n              sx={{\n                p: 3,\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                backdropFilter: 'blur(20px)',\n                border: '1px solid rgba(255,255,255,0.1)',\n                mb: 3,\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n                Usage Trends\n              </Typography>\n              <SimpleChart data={chartData} />\n            </Paper>\n          </motion.div>\n        </Grid>\n\n        {/* Real-time Metrics */}\n        <Grid item xs={12} lg={4}>\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.6 }}\n          >\n            <Paper\n              sx={{\n                p: 3,\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                backdropFilter: 'blur(20px)',\n                border: '1px solid rgba(255,255,255,0.1)',\n                mb: 3,\n                height: 'fit-content',\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n                Real-time Status\n              </Typography>\n\n              <Grid container spacing={2}>\n                {metrics.map((metric) => (\n                  <Grid item xs={12} key={metric.name}>\n                    <MetricCard metric={metric} />\n                  </Grid>\n                ))}\n              </Grid>\n            </Paper>\n          </motion.div>\n        </Grid>\n\n        {/* Top Endpoints */}\n        <Grid item xs={12} md={6}>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.7 }}\n          >\n            <Paper\n              sx={{\n                p: 3,\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                backdropFilter: 'blur(20px)',\n                border: '1px solid rgba(255,255,255,0.1)',\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n                Top API Endpoints\n              </Typography>\n\n              <List dense>\n                {topEndpoints.map((endpoint, index) => (\n                  <React.Fragment key={endpoint.name}>\n                    <ListItem sx={{ px: 0 }}>\n                      <ListItemIcon sx={{ minWidth: 40 }}>\n                        <Avatar\n                          sx={{\n                            width: 32,\n                            height: 32,\n                            bgcolor: 'primary.main',\n                            fontSize: '0.875rem',\n                            fontWeight: 600,\n                          }}\n                        >\n                          {index + 1}\n                        </Avatar>\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={endpoint.name}\n                        secondary={\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 0.5 }}>\n                            <LinearProgress\n                              variant=\"determinate\"\n                              value={endpoint.percentage}\n                              sx={{\n                                flex: 1,\n                                height: 4,\n                                borderRadius: 2,\n                                backgroundColor: 'rgba(255,255,255,0.1)',\n                                '& .MuiLinearProgress-bar': {\n                                  borderRadius: 2,\n                                  background: 'linear-gradient(90deg, #00d4ff 0%, #667eea 100%)',\n                                },\n                              }}\n                            />\n                            <Typography variant=\"caption\" sx={{ minWidth: 60 }}>\n                              {endpoint.calls.toLocaleString()} calls\n                            </Typography>\n                          </Box>\n                        }\n                        primaryTypographyProps={{\n                          variant: 'body2',\n                          fontWeight: 500,\n                          sx: { fontFamily: 'monospace' },\n                        }}\n                      />\n                    </ListItem>\n                    {index < topEndpoints.length - 1 && (\n                      <Divider sx={{ borderColor: 'rgba(255,255,255,0.1)' }} />\n                    )}\n                  </React.Fragment>\n                ))}\n              </List>\n            </Paper>\n          </motion.div>\n        </Grid>\n\n        {/* Geographic Distribution */}\n        <Grid item xs={12} md={6}>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.8 }}\n          >\n            <Paper\n              sx={{\n                p: 3,\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                backdropFilter: 'blur(20px)',\n                border: '1px solid rgba(255,255,255,0.1)',\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n                Geographic Distribution\n              </Typography>\n\n              <List dense>\n                {activeRegions.map((region, index) => (\n                  <React.Fragment key={region.region}>\n                    <ListItem sx={{ px: 0 }}>\n                      <ListItemIcon sx={{ minWidth: 40 }}>\n                        <LocationOn sx={{ color: 'primary.main' }} />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={region.region}\n                        secondary={\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 0.5 }}>\n                            <LinearProgress\n                              variant=\"determinate\"\n                              value={region.percentage}\n                              sx={{\n                                flex: 1,\n                                height: 4,\n                                borderRadius: 2,\n                                backgroundColor: 'rgba(255,255,255,0.1)',\n                                '& .MuiLinearProgress-bar': {\n                                  borderRadius: 2,\n                                  background: 'linear-gradient(90deg, #f093fb 0%, #f5576c 100%)',\n                                },\n                              }}\n                            />\n                            <Typography variant=\"caption\" sx={{ minWidth: 60 }}>\n                              {region.users} users\n                            </Typography>\n                          </Box>\n                        }\n                        primaryTypographyProps={{\n                          variant: 'body2',\n                          fontWeight: 500,\n                        }}\n                      />\n                    </ListItem>\n                    {index < activeRegions.length - 1 && (\n                      <Divider sx={{ borderColor: 'rgba(255,255,255,0.1)' }} />\n                    )}\n                  </React.Fragment>\n                ))}\n              </List>\n            </Paper>\n          </motion.div>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default AnalyticsPage;\n"],"names":["emptyUsageData","makeUsageMetrics","totals","jsx","Code","Storage","Devices","Security","topEndpoints","activeRegions","SimpleChart","data","maxValue","Box","item","jsxs","motion","Typography","MetricCard","metric","percentage","Card","CardContent","Avatar","LinearProgress","AnalyticsPage","user","useAuth","timeRange","setTimeRange","useState","selectedMetric","setSelectedMetric","chartData","setChartData","metrics","setMetrics","loading","setLoading","useEffect","isMounted","la","_b","_a","api","endpoints","d","summary","_d","_c","k","v","error","totalApiCalls","useMemo","sum","avgGrowth","s","FormControl","InputLabel","Select","e","MenuItem","ButtonGroup","Button","Grid","Analytics","Chip","TrendingUp","Speed","TrendingDown","Paper","List","endpoint","index","React","ListItem","ListItemIcon","ListItemText","Divider","region","LocationOn"],"mappings":"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"}