{"version":3,"file":"CheckoutPage-BK4G_y0u.js","sources":["../../src/components/checkout/PlanSelectionStep.tsx","../../src/components/checkout/BillingDetailsStep.tsx","../../src/components/checkout/PaymentMethodStep.tsx","../../src/components/checkout/OrderSummary.tsx","../../src/pages/checkout/CheckoutPage.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  TextField,\n  Switch,\n  FormControlLabel,\n  Paper,\n  Chip,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport {\n  Check,\n  Star,\n  Person,\n  Group,\n  Business,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { PricingTier } from '@/services/paymentService';\n\ninterface PlanSelectionStepProps {\n  pricingTiers: PricingTier[];\n  selectedTier: string;\n  seats: number;\n  isYearly: boolean;\n  onUpdate: (updates: any) => void;\n}\n\nexport const PlanSelectionStep: React.FC<PlanSelectionStepProps> = ({\n  pricingTiers,\n  selectedTier,\n  seats,\n  isYearly,\n  onUpdate,\n}) => {\n  const handleTierSelect = (tierId: string) => {\n    const tier = pricingTiers.find(t => t.id === tierId);\n    if (!tier) return;\n\n    let newSeats = seats;\n    \n    // Adjust seats based on tier constraints\n    if (tier.id === 'BASIC' && seats > 1) {\n      newSeats = 1;\n    } else if (tier.id === 'ENTERPRISE' && seats < 10) {\n      newSeats = 10;\n    }\n\n    onUpdate({ tier: tierId, seats: newSeats });\n  };\n\n  const handleSeatsChange = (newSeats: number) => {\n    const tier = pricingTiers.find(t => t.id === selectedTier);\n    if (!tier) return;\n\n    // Validate seat constraints\n    if (tier.id === 'BASIC' && newSeats > 1) return;\n    if (tier.id === 'PRO' && newSeats > 50) return;\n    if (tier.id === 'ENTERPRISE' && newSeats < 10) return;\n    if (newSeats < 1) return;\n\n    onUpdate({ seats: newSeats });\n  };\n\n  const getIcon = (tierId: string) => {\n    switch (tierId) {\n      case 'BASIC':\n        return <Person />;\n      case 'PRO':\n        return <Group />;\n      case 'ENTERPRISE':\n        return <Business />;\n      default:\n        return <Person />;\n    }\n  };\n\n  const formatPrice = (tier: PricingTier) => {\n    if (!tier.price) return 'Custom';\n    \n    const price = isYearly ? tier.price * 10 : tier.price; // 2 months free for yearly\n    return `$${price}`;\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h5\" sx={{ mb: 1, fontWeight: 600 }}>\n        Choose Your Plan\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\n        Select the plan that best fits your needs. You can change or cancel anytime.\n      </Typography>\n\n      {/* Billing Toggle */}\n      <Box sx={{ display: 'flex', justifyContent: 'center', mb: 4 }}>\n        <Paper\n          elevation={2}\n          sx={{\n            display: 'inline-flex',\n            p: 0.5,\n            backgroundColor: 'background.paper',\n            borderRadius: 4,\n          }}\n        >\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isYearly}\n                onChange={(e) => onUpdate({ isYearly: e.target.checked })}\n                color=\"primary\"\n              />\n            }\n            label={\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <Typography variant=\"body2\">\n                  Annual billing\n                </Typography>\n                <Chip\n                  label=\"Save 17%\"\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                />\n              </Box>\n            }\n            sx={{ m: 1 }}\n          />\n        </Paper>\n      </Box>\n\n      {/* Plan Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        {pricingTiers.map((tier) => (\n          <Grid item xs={12} md={4} key={tier.id}>\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              transition={{ duration: 0.2 }}\n            >\n              <Card\n                sx={{\n                  height: '100%',\n                  position: 'relative',\n                  backgroundColor: tier.id === selectedTier \n                    ? 'primary.dark' \n                    : 'background.paper',\n                  border: tier.id === selectedTier \n                    ? '2px solid' \n                    : '1px solid rgba(255, 255, 255, 0.1)',\n                  borderColor: tier.id === selectedTier ? 'primary.main' : undefined,\n                  cursor: 'pointer',\n                  transition: 'all 0.3s ease',\n                }}\n                onClick={() => handleTierSelect(tier.id)}\n              >\n                {tier.popular && (\n                  <Box\n                    sx={{\n                      position: 'absolute',\n                      top: -12,\n                      left: '50%',\n                      transform: 'translateX(-50%)',\n                    }}\n                  >\n                    <Chip\n                      icon={<Star />}\n                      label=\"Most Popular\"\n                      color=\"primary\"\n                      sx={{ fontWeight: 600, color: '#000' }}\n                    />\n                  </Box>\n                )}\n\n                <CardContent sx={{ p: 3, height: '100%', display: 'flex', flexDirection: 'column' }}>\n                  <Box sx={{ textAlign: 'center', mb: 3 }}>\n                    <Box\n                      sx={{\n                        width: 48,\n                        height: 48,\n                        borderRadius: 2,\n                        backgroundColor: tier.id === selectedTier\n                          ? 'rgba(0, 212, 255, 0.2)' \n                          : 'rgba(0, 212, 255, 0.1)',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        mx: 'auto',\n                        mb: 2,\n                        color: 'primary.main',\n                      }}\n                    >\n                      {getIcon(tier.id)}\n                    </Box>\n\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 1 }}>\n                      {tier.name}\n                    </Typography>\n                    \n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                      {tier.description}\n                    </Typography>\n\n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"h4\" sx={{ fontWeight: 700 }}>\n                        {formatPrice(tier)}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {tier.price ? (isYearly ? '/year' : '/month') : 'Contact Sales'}\n                      </Typography>\n                    </Box>\n\n                    {tier.maxSeats && (\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Up to {tier.maxSeats} {tier.maxSeats === 1 ? 'user' : 'users'}\n                      </Typography>\n                    )}\n                  </Box>\n\n                  <List dense sx={{ p: 0, flexGrow: 1 }}>\n                    {tier.features.slice(0, 6).map((feature, index) => (\n                      <ListItem key={index} sx={{ px: 0, py: 0.25 }}>\n                        <ListItemIcon sx={{ minWidth: 20 }}>\n                          <Check sx={{ fontSize: 14, color: 'success.main' }} />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={feature}\n                          primaryTypographyProps={{\n                            variant: 'body2',\n                            sx: { fontSize: '0.8rem' },\n                          }}\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n\n                  {tier.id === selectedTier && (\n                    <Button\n                      variant=\"contained\"\n                      fullWidth\n                      sx={{\n                        mt: 2,\n                        background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                        color: '#000',\n                      }}\n                    >\n                      Selected\n                    </Button>\n                  )}\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Seats Selection */}\n      {selectedTier && (\n        <Box>\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\n            Number of Seats\n          </Typography>\n          \n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField\n                fullWidth\n                label=\"Number of seats\"\n                type=\"number\"\n                value={seats}\n                onChange={(e) => handleSeatsChange(parseInt(e.target.value) || 1)}\n                inputProps={{\n                  min: selectedTier === 'ENTERPRISE' ? 10 : 1,\n                  max: selectedTier === 'BASIC' ? 1 : selectedTier === 'PRO' ? 50 : 1000,\n                }}\n                helperText={\n                  selectedTier === 'BASIC' \n                    ? 'Basic plan includes 1 seat only'\n                    : selectedTier === 'PRO'\n                    ? 'Pro plan supports up to 50 seats'\n                    : 'Enterprise plan minimum 10 seats'\n                }\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6} md={8}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Each seat allows one user to access BackboneLogic, Inc.\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </Box>\n  );\n};\n","import React from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Divider,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  MenuItem,\n  Link,\n} from '@mui/material';\nimport {\n  ExpandMore,\n  Business,\n  Person,\n  Check,\n} from '@mui/icons-material';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface BillingDetailsStepProps {\n  billingAddress: any;\n  taxInformation: any;\n  businessProfile: any;\n  acceptTerms: boolean;\n  acceptPrivacy: boolean;\n  onUpdate: (updates: any) => void;\n}\n\nconst countries = [\n  { code: 'US', name: 'United States' },\n  { code: 'CA', name: 'Canada' },\n  { code: 'GB', name: 'United Kingdom' },\n  { code: 'DE', name: 'Germany' },\n  { code: 'FR', name: 'France' },\n  { code: 'AU', name: 'Australia' },\n  { code: 'JP', name: 'Japan' },\n  // Add more countries as needed\n];\n\nconst usStates = [\n  { code: 'AL', name: 'Alabama' },\n  { code: 'CA', name: 'California' },\n  { code: 'FL', name: 'Florida' },\n  { code: 'NY', name: 'New York' },\n  { code: 'TX', name: 'Texas' },\n  // Add more states as needed\n];\n\nexport const BillingDetailsStep: React.FC<BillingDetailsStepProps> = ({\n  billingAddress,\n  taxInformation,\n  businessProfile,\n  acceptTerms,\n  acceptPrivacy,\n  onUpdate,\n}) => {\n  const {\n    control,\n    watch,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      billingAddress,\n      taxInformation,\n      businessProfile,\n      acceptTerms,\n      acceptPrivacy,\n    },\n  });\n\n  const watchedValues = watch();\n  const selectedCountry = watchedValues.billingAddress?.country;\n  // Use a typed view of react-hook-form errors to avoid TS index errors\n  const fieldErrors: any = errors as any;\n\n  React.useEffect(() => {\n    onUpdate(watchedValues);\n  }, [watchedValues, onUpdate]);\n\n  return (\n    <Box>\n      <Typography variant=\"h5\" sx={{ mb: 1, fontWeight: 600 }}>\n        Billing Information\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\n        Please provide your billing details for invoicing and compliance.\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Personal Information */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600, display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Person /> Contact Information\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Controller\n            name=\"billingAddress.firstName\"\n            control={control}\n            rules={{ required: 'First name is required' }}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                fullWidth\n                label=\"First Name\"\n                error={!!fieldErrors.billingAddress?.firstName}\n                helperText={fieldErrors.billingAddress?.firstName?.message}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Controller\n            name=\"billingAddress.lastName\"\n            control={control}\n            rules={{ required: 'Last name is required' }}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                fullWidth\n                label=\"Last Name\"\n                error={!!fieldErrors.billingAddress?.lastName}\n                helperText={fieldErrors.billingAddress?.lastName?.message}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Controller\n            name=\"billingAddress.company\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                fullWidth\n                label=\"Company (Optional)\"\n                helperText=\"If purchasing for a business\"\n              />\n            )}\n          />\n        </Grid>\n\n        {/* Address Information */}\n        <Grid item xs={12}>\n          <Divider sx={{ my: 2 }} />\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\n            Billing Address\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Controller\n            name=\"billingAddress.addressLine1\"\n            control={control}\n            rules={{ required: 'Address is required' }}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                fullWidth\n                label=\"Address Line 1\"\n                error={!!fieldErrors.billingAddress?.addressLine1}\n                helperText={fieldErrors.billingAddress?.addressLine1?.message}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Controller\n            name=\"billingAddress.addressLine2\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                fullWidth\n                label=\"Address Line 2 (Optional)\"\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Controller\n            name=\"billingAddress.city\"\n            control={control}\n            rules={{ required: 'City is required' }}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                fullWidth\n                label=\"City\"\n                error={!!fieldErrors.billingAddress?.city}\n                helperText={fieldErrors.billingAddress?.city?.message}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Controller\n            name=\"billingAddress.postalCode\"\n            control={control}\n            rules={{ required: 'Postal code is required' }}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                fullWidth\n                label=\"Postal Code\"\n                error={!!fieldErrors.billingAddress?.postalCode}\n                helperText={fieldErrors.billingAddress?.postalCode?.message}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Controller\n            name=\"billingAddress.country\"\n            control={control}\n            rules={{ required: 'Country is required' }}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                fullWidth\n                select\n                label=\"Country\"\n                error={!!fieldErrors.billingAddress?.country}\n                helperText={fieldErrors.billingAddress?.country?.message}\n              >\n                {countries.map((country) => (\n                  <MenuItem key={country.code} value={country.code}>\n                    {country.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            )}\n          />\n        </Grid>\n\n        {(selectedCountry === 'US' || selectedCountry === 'CA') && (\n          <Grid item xs={12} sm={6}>\n            <Controller\n              name=\"billingAddress.state\"\n              control={control}\n              rules={{ required: 'State/Province is required' }}\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  fullWidth\n                  select\n                  label={selectedCountry === 'US' ? 'State' : 'Province'}\n                  error={!!fieldErrors.billingAddress?.state}\n                  helperText={fieldErrors.billingAddress?.state?.message}\n                >\n                  {usStates.map((state) => (\n                    <MenuItem key={state.code} value={state.code}>\n                      {state.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              )}\n            />\n          </Grid>\n        )}\n\n        {/* Business Information */}\n        <Grid item xs={12}>\n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <Business />\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                  Business Information (Optional)\n                </Typography>\n              </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Controller\n                    name=\"businessProfile.companyName\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        fullWidth\n                        label=\"Company Name\"\n                        helperText=\"Required for business purchases and volume discounts\"\n                      />\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"businessProfile.companyType\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        fullWidth\n                        select\n                        label=\"Company Type\"\n                      >\n                        <MenuItem value=\"SOLE_PROPRIETORSHIP\">Sole Proprietorship</MenuItem>\n                        <MenuItem value=\"PARTNERSHIP\">Partnership</MenuItem>\n                        <MenuItem value=\"LLC\">LLC</MenuItem>\n                        <MenuItem value=\"CORPORATION\">Corporation</MenuItem>\n                        <MenuItem value=\"NON_PROFIT\">Non-Profit</MenuItem>\n                        <MenuItem value=\"GOVERNMENT\">Government</MenuItem>\n                        <MenuItem value=\"OTHER\">Other</MenuItem>\n                      </TextField>\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"taxInformation.taxId\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        fullWidth\n                        label=\"Tax ID / VAT Number\"\n                        helperText=\"For tax exemption and business verification\"\n                      />\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Controller\n                    name=\"businessProfile.businessDescription\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        fullWidth\n                        multiline\n                        rows={3}\n                        label=\"Business Description\"\n                        helperText=\"Brief description of your business (optional)\"\n                      />\n                    )}\n                  />\n                </Grid>\n              </Grid>\n            </AccordionDetails>\n          </Accordion>\n        </Grid>\n\n        {/* Terms and Conditions */}\n        <Grid item xs={12}>\n          <Divider sx={{ my: 2 }} />\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\n            Legal Agreements\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Controller\n            name=\"acceptTerms\"\n            control={control}\n            rules={{ required: 'You must accept the Terms of Service' }}\n            render={({ field: { value, onChange } }) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={value}\n                    onChange={onChange}\n                    color=\"primary\"\n                    icon={\n                      <Box \n                        sx={{ \n                          width: 20, \n                          height: 20, \n                          border: '2px solid', \n                          borderColor: 'rgba(255,255,255,0.3)', \n                          borderRadius: 0.5 \n                        }} \n                      />\n                    }\n                    checkedIcon={\n                      <Box \n                        sx={{ \n                          width: 20, \n                          height: 20, \n                          backgroundColor: 'primary.main', \n                          color: '#000', \n                          borderRadius: 0.5, \n                          display: 'flex', \n                          alignItems: 'center', \n                          justifyContent: 'center' \n                        }}\n                      >\n                        <Check sx={{ fontSize: 14 }} />\n                      </Box>\n                    }\n                  />\n                }\n                label={\n                  <Typography variant=\"body2\">\n                    I agree to the{' '}\n                    <Link\n                      component={RouterLink}\n                      to=\"/terms\"\n                      target=\"_blank\"\n                      sx={{ color: 'primary.main' }}\n                    >\n                      Terms of Service\n                    </Link>\n                    {' '}and{' '}\n                    <Link\n                      component={RouterLink}\n                      to=\"/sla\"\n                      target=\"_blank\"\n                      sx={{ color: 'primary.main' }}\n                    >\n                      Service Level Agreement\n                    </Link>\n                  </Typography>\n                }\n                sx={{\n                  alignItems: 'flex-start',\n                  ...(errors.acceptTerms && {\n                    color: 'error.main',\n                  }),\n                }}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Controller\n            name=\"acceptPrivacy\"\n            control={control}\n            rules={{ required: 'You must accept the Privacy Policy' }}\n            render={({ field: { value, onChange } }) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={value}\n                    onChange={onChange}\n                    color=\"primary\"\n                    icon={\n                      <Box \n                        sx={{ \n                          width: 20, \n                          height: 20, \n                          border: '2px solid', \n                          borderColor: 'rgba(255,255,255,0.3)', \n                          borderRadius: 0.5 \n                        }} \n                      />\n                    }\n                    checkedIcon={\n                      <Box \n                        sx={{ \n                          width: 20, \n                          height: 20, \n                          backgroundColor: 'primary.main', \n                          color: '#000', \n                          borderRadius: 0.5, \n                          display: 'flex', \n                          alignItems: 'center', \n                          justifyContent: 'center' \n                        }}\n                      >\n                        <Check sx={{ fontSize: 14 }} />\n                      </Box>\n                    }\n                  />\n                }\n                label={\n                  <Typography variant=\"body2\">\n                    I agree to the{' '}\n                    <Link\n                      component={RouterLink}\n                      to=\"/privacy\"\n                      target=\"_blank\"\n                      sx={{ color: 'primary.main' }}\n                    >\n                      Privacy Policy\n                    </Link>\n                    {' '}and consent to data processing for billing and service delivery\n                  </Typography>\n                }\n                sx={{\n                  alignItems: 'flex-start',\n                  ...(errors.acceptPrivacy && {\n                    color: 'error.main',\n                  }),\n                }}\n              />\n            )}\n          />\n        </Grid>\n\n        {(errors.acceptTerms || errors.acceptPrivacy) && (\n          <Grid item xs={12}>\n            <Typography variant=\"caption\" color=\"error.main\">\n              {errors.acceptTerms?.message || errors.acceptPrivacy?.message}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n\n      {/* Compliance Notice */}\n      <Box\n        sx={{\n          mt: 4,\n          p: 3,\n          backgroundColor: 'rgba(255, 255, 255, 0.02)',\n          borderRadius: 2,\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n        }}\n      >\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n          <strong>Privacy & Compliance Notice</strong>\n        </Typography>\n        <Typography variant=\"caption\" color=\"text.secondary\">\n          Your information is collected in accordance with GDPR, CCPA, and other applicable privacy laws.\n          We use industry-standard encryption and security measures to protect your data.\n          Tax information is used solely for compliance and billing purposes.\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Grid,\n  Paper,\n  Alert,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport {\n  CreditCard,\n  Security,\n  Check,\n} from '@mui/icons-material';\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { motion } from 'framer-motion';\n// import { paymentService } from '@/services/paymentService';\n\ninterface PaymentMethodStepProps {\n  checkoutData: any;\n  taxCalculation: any;\n  onComplete: (paymentMethodId: string) => void;\n}\n\nexport const PaymentMethodStep: React.FC<PaymentMethodStepProps> = ({\n  checkoutData,\n  taxCalculation,\n  onComplete,\n}) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  \n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [cardComplete, setCardComplete] = useState({\n    cardNumber: false,\n    cardExpiry: false,\n    cardCvc: false,\n  });\n\n  const selectedTier = React.useMemo(() => {\n    // This would normally come from props or a service\n    const tiers = {\n      BASIC: { name: 'Basic', price: 2900 },\n      PRO: { name: 'Pro', price: 9900 },\n      ENTERPRISE: { name: 'Enterprise', price: null },\n    };\n    return tiers[checkoutData.tier as keyof typeof tiers];\n  }, [checkoutData.tier]);\n\n  const calculateTotal = () => {\n    if (!selectedTier?.price) return 0;\n    \n    const subtotal = selectedTier.price * checkoutData.seats;\n    const taxAmount = taxCalculation?.taxAmount || 0;\n    return subtotal + taxAmount;\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount / 100);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      setError('Stripe has not loaded yet. Please try again.');\n      return;\n    }\n\n    const cardElement = elements.getElement(CardNumberElement);\n    if (!cardElement) {\n      setError('Card element not found. Please refresh and try again.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError(null);\n\n    try {\n      // Create payment method\n      const { error: stripeError, paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: {\n          name: `${checkoutData.billingAddress.firstName} ${checkoutData.billingAddress.lastName}`,\n          email: 'user@example.com', // This would come from user context\n          address: {\n            line1: checkoutData.billingAddress.addressLine1,\n            line2: checkoutData.billingAddress.addressLine2,\n            city: checkoutData.billingAddress.city,\n            state: checkoutData.billingAddress.state,\n            postal_code: checkoutData.billingAddress.postalCode,\n            country: checkoutData.billingAddress.country,\n          },\n        },\n      });\n\n      if (stripeError) {\n        setError(stripeError.message || 'Payment method creation failed');\n        return;\n      }\n\n      if (!paymentMethod) {\n        setError('Failed to create payment method');\n        return;\n      }\n\n      // Complete the checkout process\n      await onComplete(paymentMethod.id);\n    } catch (err: any) {\n      setError(err.message || 'Payment processing failed');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const isFormValid = Object.values(cardComplete).every(Boolean) && \n                     checkoutData.acceptTerms && \n                     checkoutData.acceptPrivacy;\n\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#ffffff',\n        backgroundColor: 'rgba(255, 255, 255, 0.05)',\n        '::placeholder': {\n          color: 'rgba(255, 255, 255, 0.5)',\n        },\n      },\n      invalid: {\n        color: '#f44336',\n        iconColor: '#f44336',\n      },\n    },\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h5\" sx={{ mb: 1, fontWeight: 600 }}>\n        Payment Method\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\n        Complete your purchase with secure payment processing by Stripe.\n      </Typography>\n\n      <Grid container spacing={4}>\n        {/* Payment Form */}\n        <Grid item xs={12} lg={8}>\n          <Paper\n            elevation={2}\n            sx={{\n              p: 4,\n              backgroundColor: 'background.paper',\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>\n              <CreditCard sx={{ color: 'primary.main' }} />\n              <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                Credit Card Information\n              </Typography>\n            </Box>\n\n            {error && (\n              <Alert severity=\"error\" sx={{ mb: 3 }}>\n                {error}\n              </Alert>\n            )}\n\n            <Box component=\"form\" onSubmit={handleSubmit}>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Typography variant=\"body2\" sx={{ mb: 1, fontWeight: 500 }}>\n                    Card Number\n                  </Typography>\n                  <Box\n                    sx={{\n                      p: 2,\n                      border: '1px solid rgba(255, 255, 255, 0.2)',\n                      borderRadius: 1,\n                      backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                      '&:focus-within': {\n                        borderColor: 'primary.main',\n                        boxShadow: '0 0 0 2px rgba(0, 212, 255, 0.2)',\n                      },\n                    }}\n                  >\n                    <CardNumberElement\n                      options={cardElementOptions}\n                      onChange={(event) => {\n                        setCardComplete(prev => ({ ...prev, cardNumber: event.complete }));\n                        if (event.error) {\n                          setError(event.error.message);\n                        } else {\n                          setError(null);\n                        }\n                      }}\n                    />\n                  </Box>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"body2\" sx={{ mb: 1, fontWeight: 500 }}>\n                    Expiry Date\n                  </Typography>\n                  <Box\n                    sx={{\n                      p: 2,\n                      border: '1px solid rgba(255, 255, 255, 0.2)',\n                      borderRadius: 1,\n                      backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                      '&:focus-within': {\n                        borderColor: 'primary.main',\n                        boxShadow: '0 0 0 2px rgba(0, 212, 255, 0.2)',\n                      },\n                    }}\n                  >\n                    <CardExpiryElement\n                      options={cardElementOptions}\n                      onChange={(event) => {\n                        setCardComplete(prev => ({ ...prev, cardExpiry: event.complete }));\n                        if (event.error) {\n                          setError(event.error.message);\n                        } else if (error && event.complete) {\n                          setError(null);\n                        }\n                      }}\n                    />\n                  </Box>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"body2\" sx={{ mb: 1, fontWeight: 500 }}>\n                    CVC\n                  </Typography>\n                  <Box\n                    sx={{\n                      p: 2,\n                      border: '1px solid rgba(255, 255, 255, 0.2)',\n                      borderRadius: 1,\n                      backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                      '&:focus-within': {\n                        borderColor: 'primary.main',\n                        boxShadow: '0 0 0 2px rgba(0, 212, 255, 0.2)',\n                      },\n                    }}\n                  >\n                    <CardCvcElement\n                      options={cardElementOptions}\n                      onChange={(event) => {\n                        setCardComplete(prev => ({ ...prev, cardCvc: event.complete }));\n                        if (event.error) {\n                          setError(event.error.message);\n                        } else if (error && event.complete) {\n                          setError(null);\n                        }\n                      }}\n                    />\n                  </Box>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Divider sx={{ my: 2 }} />\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    fullWidth\n                    disabled={!isFormValid || isProcessing || !stripe}\n                    sx={{\n                      py: 1.5,\n                      fontSize: '1.1rem',\n                      fontWeight: 600,\n                      background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                      color: '#000',\n                      '&:disabled': {\n                        background: 'rgba(255, 255, 255, 0.1)',\n                        color: 'rgba(255, 255, 255, 0.5)',\n                      },\n                    }}\n                  >\n                    {isProcessing \n                      ? 'Processing Payment...' \n                      : `Complete Purchase - ${formatCurrency(calculateTotal())}`\n                    }\n                  </Button>\n                </Grid>\n              </Grid>\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Security & Trust Indicators */}\n        <Grid item xs={12} lg={4}>\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Paper\n              elevation={2}\n              sx={{\n                p: 3,\n                backgroundColor: 'background.paper',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n              }}\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>\n                <Security sx={{ color: 'success.main' }} />\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                  Secure Payment\n                </Typography>\n              </Box>\n\n              <List dense>\n                <ListItem sx={{ px: 0 }}>\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    <Check sx={{ fontSize: 18, color: 'success.main' }} />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"256-bit SSL Encryption\"\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n\n                <ListItem sx={{ px: 0 }}>\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    <Check sx={{ fontSize: 18, color: 'success.main' }} />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"PCI DSS Compliant\"\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n\n                <ListItem sx={{ px: 0 }}>\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    <Check sx={{ fontSize: 18, color: 'success.main' }} />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"SOC 2 Type II Certified\"\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n\n                <ListItem sx={{ px: 0 }}>\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    <Check sx={{ fontSize: 18, color: 'success.main' }} />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"14-Day Money Back Guarantee\"\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n              </List>\n\n              <Divider sx={{ my: 2 }} />\n\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                  Powered by Stripe\n                </Typography>\n                \n                <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1, mb: 2 }}>\n                  {['Visa', 'Mastercard', 'American Express', 'Discover'].map((card) => (\n                    <Box\n                      key={card}\n                      sx={{\n                        px: 1,\n                        py: 0.5,\n                        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                        borderRadius: 1,\n                        fontSize: '0.75rem',\n                      }}\n                    >\n                      {card}\n                    </Box>\n                  ))}\n                </Box>\n\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  Your payment information is never stored on our servers\n                </Typography>\n              </Box>\n            </Paper>\n\n            {/* What Happens Next */}\n            <Paper\n              elevation={2}\n              sx={{\n                p: 3,\n                mt: 3,\n                backgroundColor: 'background.paper',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\n                What Happens Next?\n              </Typography>\n\n              <List dense>\n                <ListItem sx={{ px: 0, alignItems: 'flex-start' }}>\n                  <ListItemIcon sx={{ minWidth: 32, mt: 0.5 }}>\n                    <Box\n                      sx={{\n                        width: 20,\n                        height: 20,\n                        borderRadius: '50%',\n                        backgroundColor: 'primary.main',\n                        color: '#000',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontSize: '0.75rem',\n                        fontWeight: 600,\n                      }}\n                    >\n                      1\n                    </Box>\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"Instant License Generation\"\n                    secondary=\"Your license keys are generated immediately upon payment\"\n                    primaryTypographyProps={{ variant: 'body2', fontWeight: 500 }}\n                    secondaryTypographyProps={{ variant: 'caption' }}\n                  />\n                </ListItem>\n\n                <ListItem sx={{ px: 0, alignItems: 'flex-start' }}>\n                  <ListItemIcon sx={{ minWidth: 32, mt: 0.5 }}>\n                    <Box\n                      sx={{\n                        width: 20,\n                        height: 20,\n                        borderRadius: '50%',\n                        backgroundColor: 'primary.main',\n                        color: '#000',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontSize: '0.75rem',\n                        fontWeight: 600,\n                      }}\n                    >\n                      2\n                    </Box>\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"Email Confirmation\"\n                    secondary=\"Receipt and license details sent to your email\"\n                    primaryTypographyProps={{ variant: 'body2', fontWeight: 500 }}\n                    secondaryTypographyProps={{ variant: 'caption' }}\n                  />\n                </ListItem>\n\n                <ListItem sx={{ px: 0, alignItems: 'flex-start' }}>\n                  <ListItemIcon sx={{ minWidth: 32, mt: 0.5 }}>\n                    <Box\n                      sx={{\n                        width: 20,\n                        height: 20,\n                        borderRadius: '50%',\n                        backgroundColor: 'primary.main',\n                        color: '#000',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontSize: '0.75rem',\n                        fontWeight: 600,\n                      }}\n                    >\n                      3\n                    </Box>\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"Dashboard Access\"\n                    secondary=\"Manage your licenses and team from your dashboard\"\n                    primaryTypographyProps={{ variant: 'body2', fontWeight: 500 }}\n                    secondaryTypographyProps={{ variant: 'caption' }}\n                  />\n                </ListItem>\n              </List>\n            </Paper>\n          </motion.div>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Divider,\n  Stack,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from '@mui/material';\nimport {\n  Check,\n  Star,\n  Business,\n  Person,\n  Group,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { PricingTier } from '@/services/paymentService';\n\ninterface OrderSummaryProps {\n  selectedTier?: PricingTier;\n  seats: number;\n  isYearly?: boolean;\n  taxCalculation?: any;\n}\n\nexport const OrderSummary: React.FC<OrderSummaryProps> = ({\n  selectedTier,\n  seats,\n  isYearly = false,\n  taxCalculation,\n}) => {\n  if (!selectedTier) {\n    return (\n      <Paper\n        elevation={3}\n        sx={{\n          p: 4,\n          backgroundColor: 'background.paper',\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n          position: 'sticky',\n          top: 100,\n        }}\n      >\n        <Typography variant=\"h6\" sx={{ mb: 3 }}>\n          Order Summary\n        </Typography>\n        \n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Please select a plan to see pricing details.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  const getIcon = () => {\n    switch (selectedTier.id) {\n      case 'BASIC':\n        return <Person />;\n      case 'PRO':\n        return <Group />;\n      case 'ENTERPRISE':\n        return <Business />;\n      default:\n        return <Person />;\n    }\n  };\n\n  const calculatePricing = () => {\n    if (!selectedTier.price) {\n      return { subtotal: 0, discount: 0, total: 0 };\n    }\n\n    const monthlyPrice = selectedTier.price * seats;\n    let subtotal = monthlyPrice;\n    let discount = 0;\n\n    if (isYearly) {\n      subtotal = monthlyPrice * 12;\n      discount = monthlyPrice * 2; // 2 months free\n    }\n\n    const discountedSubtotal = subtotal - discount;\n    const taxAmount = taxCalculation?.taxAmount || 0;\n    const total = discountedSubtotal + taxAmount;\n\n    return {\n      subtotal,\n      discount,\n      discountedSubtotal,\n      taxAmount,\n      total,\n    };\n  };\n\n  const pricing = calculatePricing();\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount / 100);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, x: 20 }}\n      animate={{ opacity: 1, x: 0 }}\n      transition={{ duration: 0.6 }}\n    >\n      <Paper\n        elevation={3}\n        sx={{\n          backgroundColor: 'background.paper',\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n          position: 'sticky',\n          top: 100,\n        }}\n      >\n        {/* Header */}\n        <Box\n          sx={{\n            p: 3,\n            background: selectedTier.popular \n              ? 'linear-gradient(135deg, rgba(0, 212, 255, 0.1) 0%, rgba(102, 126, 234, 0.1) 100%)'\n              : 'rgba(255, 255, 255, 0.05)',\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n          }}\n        >\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n            <Box\n              sx={{\n                width: 48,\n                height: 48,\n                borderRadius: 2,\n                backgroundColor: selectedTier.popular \n                  ? 'rgba(0, 212, 255, 0.2)' \n                  : 'rgba(0, 212, 255, 0.1)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: 'primary.main',\n              }}\n            >\n              {getIcon()}\n            </Box>\n            \n            <Box sx={{ flexGrow: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                  {selectedTier.name}\n                </Typography>\n                {selectedTier.popular && (\n                  <Chip\n                    size=\"small\"\n                    icon={<Star />}\n                    label=\"Popular\"\n                    color=\"primary\"\n                    sx={{ color: '#000' }}\n                  />\n                )}\n              </Box>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {selectedTier.description}\n              </Typography>\n            </Box>\n          </Box>\n\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {seats} {seats === 1 ? 'seat' : 'seats'}\n            </Typography>\n            {isYearly && (\n              <Chip\n                size=\"small\"\n                label=\"Annual Billing\"\n                variant=\"outlined\"\n                color=\"success\"\n              />\n            )}\n          </Box>\n        </Box>\n\n        {/* Pricing Breakdown */}\n        <Box sx={{ p: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 3 }}>\n            Order Summary\n          </Typography>\n\n          <Stack spacing={2} sx={{ mb: 3 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Typography variant=\"body2\">\n                {selectedTier.name} × {seats} seat{seats !== 1 ? 's' : ''}\n                {isYearly && ' (12 months)'}\n              </Typography>\n              <Typography variant=\"body2\">\n                {formatCurrency(pricing.subtotal)}\n              </Typography>\n            </Box>\n\n            {pricing.discount > 0 && (\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Typography variant=\"body2\" color=\"success.main\">\n                  Annual discount (2 months free)\n                </Typography>\n                <Typography variant=\"body2\" color=\"success.main\">\n                  -{formatCurrency(pricing.discount)}\n                </Typography>\n              </Box>\n            )}\n\n            {taxCalculation && (\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Typography variant=\"body2\">\n                  Tax ({taxCalculation.taxJurisdiction})\n                </Typography>\n                <Typography variant=\"body2\">\n                  {formatCurrency(taxCalculation.taxAmount)}\n                </Typography>\n              </Box>\n            )}\n          </Stack>\n\n          <Divider sx={{ mb: 2, borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n            <Typography variant=\"h6\">\n              Total {isYearly ? '(Annual)' : '(Monthly)'}\n            </Typography>\n            <Typography variant=\"h6\" color=\"primary.main\">\n              {formatCurrency(pricing.total)}\n            </Typography>\n          </Box>\n\n          {isYearly && (\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n              Billed annually. Cancel anytime.\n            </Typography>\n          )}\n\n          {/* Features Preview */}\n          <Typography variant=\"subtitle2\" sx={{ mb: 2, fontWeight: 600 }}>\n            What's included:\n          </Typography>\n          \n          <List dense sx={{ p: 0 }}>\n            {selectedTier.features.slice(0, 5).map((feature, index) => (\n              <ListItem key={index} sx={{ px: 0, py: 0.5 }}>\n                <ListItemIcon sx={{ minWidth: 24 }}>\n                  <Check sx={{ fontSize: 16, color: 'success.main' }} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={feature}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    sx: { fontSize: '0.875rem' },\n                  }}\n                />\n              </ListItem>\n            ))}\n            {selectedTier.features.length > 5 && (\n              <ListItem sx={{ px: 0, py: 0.5 }}>\n                <ListItemText\n                  primary={`+ ${selectedTier.features.length - 5} more features`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'primary.main',\n                    sx: { fontSize: '0.875rem', fontWeight: 500 },\n                  }}\n                />\n              </ListItem>\n            )}\n          </List>\n        </Box>\n\n        {/* Security Notice */}\n        <Box\n          sx={{\n            p: 3,\n            backgroundColor: 'rgba(255, 255, 255, 0.02)',\n            borderTop: '1px solid rgba(255, 255, 255, 0.1)',\n          }}\n        >\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', textAlign: 'center' }}>\n            🔒 Secured by 256-bit SSL encryption<br/>\n            💳 PCI DSS compliant payment processing<br/>\n            🔄 14-day money-back guarantee\n          </Typography>\n        </Box>\n      </Paper>\n    </motion.div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  Paper,\n  Typography,\n  Grid,\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Divider,\n  Card,\n  CardContent,\n  Chip,\n  Stack,\n  Alert,\n} from '@mui/material';\nimport {\n  ShoppingCart,\n  Payment,\n  CheckCircle,\n  ArrowBack,\n  ArrowForward,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '@/context/AuthContext';\nimport { useLoading } from '@/context/LoadingContext';\nimport { useSnackbar } from 'notistack';\nimport { paymentService, PricingTier } from '@/services/paymentService';\nimport { Navigation } from '@/components/layout/Navigation';\nimport { PlanSelectionStep } from '@/components/checkout/PlanSelectionStep';\nimport { BillingDetailsStep } from '@/components/checkout/BillingDetailsStep';\nimport { PaymentMethodStep } from '@/components/checkout/PaymentMethodStep';\nimport { OrderSummary } from '@/components/checkout/OrderSummary';\n\nconst steps = [\n  { label: 'Select Plan', icon: <ShoppingCart /> },\n  { label: 'Billing Details', icon: <Payment /> },\n  { label: 'Payment Method', icon: <Payment /> },\n  { label: 'Confirmation', icon: <CheckCircle /> },\n];\n\ninterface CheckoutData {\n  tier: string;\n  seats: number;\n  isYearly: boolean;\n  billingAddress: any;\n  taxInformation: any;\n  businessProfile: any;\n  acceptTerms: boolean;\n  acceptPrivacy: boolean;\n  paymentMethodId?: string;\n}\n\nconst CheckoutPage: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { user } = useAuth();\n  const { setLoading } = useLoading();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [pricingTiers, setPricingTiers] = useState<PricingTier[]>([]);\n  const [checkoutData, setCheckoutData] = useState<CheckoutData>({\n    tier: location.state?.tier || 'PRO',\n    seats: 1,\n    isYearly: location.state?.isYearly || false,\n    billingAddress: {},\n    taxInformation: {},\n    businessProfile: {},\n    acceptTerms: false,\n    acceptPrivacy: false,\n  });\n  const [error, setError] = useState<string | null>(null);\n  const [taxCalculation, setTaxCalculation] = useState<any>(null);\n\n  useEffect(() => {\n    loadPricingTiers();\n  }, []);\n\n  const loadPricingTiers = async () => {\n    try {\n      const tiers = await paymentService.getPricingTiers();\n      setPricingTiers(tiers);\n    } catch (error: any) {\n      enqueueSnackbar(error.message || 'Failed to load pricing', { variant: 'error' });\n    }\n  };\n\n  const updateCheckoutData = (updates: Partial<CheckoutData>) => {\n    setCheckoutData(prev => ({ ...prev, ...updates }));\n  };\n\n  const calculateTax = async () => {\n    if (!checkoutData.billingAddress.country) return;\n\n    try {\n      const selectedTier = pricingTiers.find(t => t.id === checkoutData.tier);\n      if (!selectedTier || !selectedTier.price) return;\n\n      const amount = selectedTier.price * checkoutData.seats;\n      \n      const calculation = await paymentService.calculateTax({\n        amount,\n        billingAddress: checkoutData.billingAddress,\n        userType: checkoutData.businessProfile.companyName ? 'business' : 'individual',\n      });\n\n      setTaxCalculation(calculation);\n    } catch (error: any) {\n      console.warn('Tax calculation failed:', error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (activeStep >= 1) {\n      calculateTax();\n    }\n  }, [checkoutData.billingAddress, checkoutData.tier, checkoutData.seats, activeStep]);\n\n  const handleNext = () => {\n    setError(null);\n    \n    // Validate current step\n    switch (activeStep) {\n      case 0:\n        if (!checkoutData.tier) {\n          setError('Please select a plan');\n          return;\n        }\n        break;\n      case 1:\n        const addressValidation = paymentService.validateBillingAddress(checkoutData.billingAddress);\n        if (!addressValidation.valid) {\n          setError(addressValidation.errors.join(', '));\n          return;\n        }\n        break;\n    }\n\n    setActiveStep(prev => prev + 1);\n  };\n\n  const handleBack = () => {\n    setError(null);\n    setActiveStep(prev => prev - 1);\n  };\n\n  const handleComplete = async (paymentMethodId: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const result = await paymentService.createSubscription({\n        tier: checkoutData.tier,\n        seats: checkoutData.seats,\n        paymentMethodId,\n        billingAddress: checkoutData.billingAddress,\n        taxInformation: checkoutData.taxInformation,\n        businessProfile: checkoutData.businessProfile,\n      });\n\n      enqueueSnackbar('Subscription created successfully!', { variant: 'success' });\n      navigate('/dashboard', { \n        state: { \n          subscriptionCreated: true,\n          subscription: result.subscription \n        } \n      });\n    } catch (error: any) {\n      setError(error.message || 'Payment failed. Please try again.');\n      enqueueSnackbar(error.message || 'Payment failed', { variant: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const selectedTier = pricingTiers.find(t => t.id === checkoutData.tier);\n\n  const renderStepContent = () => {\n    switch (activeStep) {\n      case 0:\n        return (\n          <PlanSelectionStep\n            pricingTiers={pricingTiers}\n            selectedTier={checkoutData.tier}\n            seats={checkoutData.seats}\n            isYearly={checkoutData.isYearly}\n            onUpdate={updateCheckoutData}\n          />\n        );\n      case 1:\n        return (\n          <BillingDetailsStep\n            billingAddress={checkoutData.billingAddress}\n            taxInformation={checkoutData.taxInformation}\n            businessProfile={checkoutData.businessProfile}\n            acceptTerms={checkoutData.acceptTerms}\n            acceptPrivacy={checkoutData.acceptPrivacy}\n            onUpdate={updateCheckoutData}\n          />\n        );\n      case 2:\n        return (\n          <PaymentMethodStep\n            checkoutData={checkoutData}\n            taxCalculation={taxCalculation}\n            onComplete={handleComplete}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  if (!user) {\n    return (\n      <Box sx={{ minHeight: '100vh', backgroundColor: 'background.default' }}>\n        <Navigation />\n        <Container maxWidth=\"md\" sx={{ pt: 12, pb: 8 }}>\n          <Alert severity=\"warning\">\n            Please sign in to continue with checkout.\n          </Alert>\n        </Container>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ minHeight: '100vh', backgroundColor: 'background.default' }}>\n      <Navigation />\n      \n      <Container maxWidth=\"lg\" sx={{ pt: { xs: 10, md: 12 }, pb: 8 }}>\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          {/* Back Button */}\n          <Box sx={{ mb: 4 }}>\n            <Button\n              startIcon={<ArrowBack />}\n              onClick={() => navigate('/pricing')}\n              sx={{\n                color: 'text.secondary',\n                '&:hover': {\n                  color: 'primary.main',\n                  backgroundColor: 'rgba(0, 212, 255, 0.1)',\n                },\n              }}\n            >\n              Back to Pricing\n            </Button>\n          </Box>\n\n          {/* Header */}\n          <Box sx={{ textAlign: 'center', mb: 6 }}>\n            <Typography\n              variant=\"h3\"\n              sx={{\n                fontWeight: 600,\n                mb: 2,\n                background: 'linear-gradient(135deg, #ffffff 0%, #00d4ff 100%)',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent',\n                backgroundClip: 'text',\n              }}\n            >\n              Complete Your Purchase\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"text.secondary\"\n              sx={{ mb: 4, maxWidth: 600, mx: 'auto' }}\n            >\n              Join thousands of professionals using BackboneLogic, Inc.\n            </Typography>\n          </Box>\n\n          <Grid container spacing={4}>\n            {/* Main Content */}\n            <Grid item xs={12} lg={8}>\n              <Paper\n                elevation={3}\n                sx={{\n                  p: 4,\n                  backgroundColor: 'background.paper',\n                  border: '1px solid rgba(255, 255, 255, 0.1)',\n                }}\n              >\n                {/* Stepper */}\n                <Stepper\n                  activeStep={activeStep}\n                  sx={{\n                    mb: 4,\n                    '& .MuiStepLabel-root': {\n                      color: 'text.secondary',\n                    },\n                    '& .MuiStepLabel-label.Mui-active': {\n                      color: 'primary.main',\n                    },\n                    '& .MuiStepLabel-label.Mui-completed': {\n                      color: 'success.main',\n                    },\n                  }}\n                >\n                  {steps.map((step, index) => (\n                    <Step key={step.label}>\n                      <StepLabel\n                        StepIconComponent={({ active, completed }) => (\n                          <Box\n                            sx={{\n                              width: 40,\n                              height: 40,\n                              borderRadius: '50%',\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              backgroundColor: completed\n                                ? 'success.main'\n                                : active\n                                ? 'primary.main'\n                                : 'rgba(255, 255, 255, 0.1)',\n                              color: completed || active ? '#000' : 'text.secondary',\n                            }}\n                          >\n                            {step.icon}\n                          </Box>\n                        )}\n                      >\n                        {step.label}\n                      </StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n\n                {/* Error Alert */}\n                {error && (\n                  <Alert severity=\"error\" sx={{ mb: 3 }}>\n                    {error}\n                  </Alert>\n                )}\n\n                {/* Step Content */}\n                <Box sx={{ mb: 4 }}>\n                  {renderStepContent()}\n                </Box>\n\n                {/* Navigation Buttons */}\n                {activeStep < 2 && (\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <Button\n                      onClick={handleBack}\n                      disabled={activeStep === 0}\n                      startIcon={<ArrowBack />}\n                    >\n                      Back\n                    </Button>\n                    \n                    <Button\n                      variant=\"contained\"\n                      onClick={handleNext}\n                      endIcon={<ArrowForward />}\n                      sx={{\n                        background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                        color: '#000',\n                      }}\n                    >\n                      {activeStep === steps.length - 1 ? 'Complete Order' : 'Continue'}\n                    </Button>\n                  </Box>\n                )}\n              </Paper>\n            </Grid>\n\n            {/* Order Summary */}\n            <Grid item xs={12} lg={4}>\n              <OrderSummary\n                selectedTier={selectedTier}\n                seats={checkoutData.seats}\n                isYearly={checkoutData.isYearly}\n                taxCalculation={taxCalculation}\n              />\n            </Grid>\n          </Grid>\n        </motion.div>\n      </Container>\n    </Box>\n  );\n};\n\nexport default CheckoutPage;\n"],"names":["PlanSelectionStep","pricingTiers","selectedTier","seats","isYearly","onUpdate","handleTierSelect","tierId","tier","t","newSeats","handleSeatsChange","getIcon","Person","Group","Business","formatPrice","Box","jsx","Typography","Paper","FormControlLabel","Switch","e","jsxs","Chip","Grid","motion","Card","Star","CardContent","List","feature","index","ListItem","ListItemIcon","Check","ListItemText","Button","TextField","countries","usStates","BillingDetailsStep","billingAddress","taxInformation","businessProfile","acceptTerms","acceptPrivacy","control","watch","errors","useForm","watchedValues","selectedCountry","_a","fieldErrors","React","Controller","field","_c","_b","Divider","country","MenuItem","state","Accordion","AccordionSummary","ExpandMore","AccordionDetails","value","onChange","Checkbox","Link","RouterLink","PaymentMethodStep","checkoutData","taxCalculation","onComplete","stripe","useStripe","elements","useElements","isProcessing","setIsProcessing","useState","error","setError","cardComplete","setCardComplete","calculateTotal","subtotal","taxAmount","formatCurrency","amount","handleSubmit","event","cardElement","CardNumberElement","stripeError","paymentMethod","err","isFormValid","cardElementOptions","CreditCard","Alert","prev","CardExpiryElement","CardCvcElement","Security","card","OrderSummary","pricing","monthlyPrice","discount","discountedSubtotal","total","Stack","steps","ShoppingCart","Payment","CheckCircle","CheckoutPage","navigate","useNavigate","location","useLocation","user","useAuth","setLoading","useLoading","enqueueSnackbar","useSnackbar","activeStep","setActiveStep","setPricingTiers","setCheckoutData","setTaxCalculation","useEffect","loadPricingTiers","tiers","paymentService","updateCheckoutData","updates","calculateTax","calculation","handleNext","addressValidation","handleBack","handleComplete","paymentMethodId","result","renderStepContent","Navigation","Container","ArrowBack","Stepper","step","Step","StepLabel","active","completed","ArrowForward"],"mappings":"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"}