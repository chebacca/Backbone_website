{"version":3,"file":"DashboardLayout-DZP5yIHw.js","sources":["../../src/components/layout/DashboardLayout.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Drawer,\n  AppBar,\n  Toolbar,\n  List,\n  Typography,\n  Divider,\n  IconButton,\n  Button,\n  Avatar,\n  Menu,\n  MenuItem,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Badge,\n  Chip,\n  useTheme,\n  useMediaQuery,\n} from '@mui/material';\nimport {\n  Menu as MenuIcon,\n  Dashboard,\n  CardMembership,\n  Analytics,\n  Payment,\n  Settings,\n  AccountCircle,\n  Logout,\n  Notifications,\n  Support,\n  Download,\n  Group,\n  Business,\n  Security,\n  Description,\n  Home,\n} from '@mui/icons-material';\nimport { Link as RouterLink, useLocation, Outlet, useNavigate } from 'react-router-dom';\nimport { useAuth } from '@/context/AuthContext';\nimport { motion } from 'framer-motion';\n\nconst drawerWidth = 280;\n\ninterface NavigationItem {\n  text: string;\n  icon: React.ReactNode;\n  path: string;\n  badge?: number;\n  chip?: string;\n}\n\nconst baseNavigationItems: NavigationItem[] = [\n  { text: 'Overview', icon: <Dashboard />, path: '/dashboard' },\n  { text: 'Licenses', icon: <CardMembership />, path: '/dashboard/licenses', badge: 3 },\n  { text: 'Usage Analytics', icon: <Analytics />, path: '/dashboard/analytics' },\n  { text: 'Billing & Payments', icon: <Payment />, path: '/dashboard/billing' },\n  { text: 'Team Management', icon: <Group />, path: '/dashboard/team' },\n  { text: 'Downloads', icon: <Download />, path: '/dashboard/downloads', chip: 'SDK' },\n  { text: 'Documentation', icon: <Description />, path: '/dashboard/documentation' },\n  { text: 'Support', icon: <Support />, path: '/dashboard/support' },\n  { text: 'Settings', icon: <Settings />, path: '/dashboard/settings' },\n];\n\nconst enterpriseItems: NavigationItem[] = [\n  { text: 'Organization', icon: <Business />, path: '/dashboard/organization' },\n  { text: 'Security Center', icon: <Security />, path: '/dashboard/security' },\n  { text: 'Compliance', icon: <Security />, path: '/dashboard/compliance' },\n];\n\nexport const DashboardLayout: React.FC = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const location = useLocation();\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleProfileMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    logout();\n    handleProfileMenuClose();\n  };\n\n  const isEnterprise = user?.subscription?.plan === 'enterprise';\n\n  // Compute navigation, hiding Billing for Master Admins\n  const navigationItems: NavigationItem[] = React.useMemo(() => {\n    const items = [...baseNavigationItems];\n    const roleUpper = String(user?.role || '').toUpperCase();\n    const isAdminLike = ['ADMIN', 'SUPERADMIN', 'ENTERPRISE_ADMIN'].includes(roleUpper);\n    if (isAdminLike) {\n      return items.filter((item) => item.path !== '/dashboard/billing');\n    }\n    return items;\n  }, [user?.role]);\n\n  const NavigationList = () => (\n    <Box sx={{ width: drawerWidth, height: '100%', backgroundColor: 'background.paper' }}>\n      {/* Logo and Brand */}\n      <Box sx={{ p: 3, borderBottom: '1px solid rgba(255, 255, 255, 0.1)' }}>\n        <Typography\n          variant=\"h6\"\n          sx={{\n            fontWeight: 600,\n            background: 'linear-gradient(135deg, #ffffff 0%, #00d4ff 100%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            backgroundClip: 'text',\n          }}\n        >\n          BackboneLogic, Inc.\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          License Management\n        </Typography>\n      </Box>\n\n      {/* User Info */}\n      <Box sx={{ p: 3, borderBottom: '1px solid rgba(255, 255, 255, 0.1)' }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Avatar sx={{ width: 48, height: 48, bgcolor: 'primary.main' }}>\n            {user?.name?.[0] || user?.email?.[0] || 'U'}\n          </Avatar>\n          <Box sx={{ flex: 1, minWidth: 0 }}>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: 600 }} noWrap>\n              {user?.name || user?.email || 'User'}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n              {user?.email}\n            </Typography>\n            {user?.subscription && (\n              <Chip\n                label={user.subscription.plan}\n                size=\"small\"\n                color={user.subscription.plan === 'enterprise' ? 'primary' : 'default'}\n                sx={{ mt: 0.5, fontSize: '0.7rem' }}\n              />\n            )}\n          </Box>\n        </Box>\n      </Box>\n\n      {/* Navigation Items */}\n      <List sx={{ px: 2, py: 1 }}>\n        {navigationItems.map((item) => {\n          const isActive = location.pathname === item.path;\n          return (\n            <motion.div\n              key={item.text}\n              whileHover={{ x: 4 }}\n              transition={{ type: 'spring', stiffness: 300, damping: 30 }}\n            >\n              <ListItem disablePadding sx={{ mb: 0.5 }}>\n                <ListItemButton\n                  component={RouterLink}\n                  to={item.path}\n                  sx={{\n                    borderRadius: 2,\n                    py: 1.5,\n                    backgroundColor: isActive ? 'rgba(0, 212, 255, 0.1)' : 'transparent',\n                    color: isActive ? 'primary.main' : 'text.primary',\n                    '&:hover': {\n                      backgroundColor: isActive \n                        ? 'rgba(0, 212, 255, 0.15)' \n                        : 'rgba(255, 255, 255, 0.05)',\n                    },\n                  }}\n                >\n                  <ListItemIcon sx={{ color: 'inherit', minWidth: 40 }}>\n                    {item.badge ? (\n                      <Badge badgeContent={item.badge} color=\"primary\">\n                        {item.icon}\n                      </Badge>\n                    ) : (\n                      item.icon\n                    )}\n                  </ListItemIcon>\n                  <ListItemText \n                    primary={item.text}\n                    sx={{ \n                      '& .MuiListItemText-primary': { \n                        fontWeight: isActive ? 600 : 400,\n                        fontSize: '0.95rem',\n                      } \n                    }}\n                  />\n                  {item.chip && (\n                    <Chip\n                      label={item.chip}\n                      size=\"small\"\n                      sx={{ \n                        fontSize: '0.7rem', \n                        height: 20,\n                        backgroundColor: 'rgba(0, 212, 255, 0.2)',\n                        color: 'primary.main',\n                      }}\n                    />\n                  )}\n                </ListItemButton>\n              </ListItem>\n            </motion.div>\n          );\n        })}\n\n        {/* Enterprise Section */}\n        {isEnterprise && (\n          <>\n            <Divider sx={{ my: 2, borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n            <Typography \n              variant=\"caption\" \n              sx={{ \n                px: 2, \n                py: 1, \n                display: 'block', \n                fontWeight: 600, \n                color: 'text.secondary',\n                textTransform: 'uppercase',\n                letterSpacing: 1,\n              }}\n            >\n              Enterprise\n            </Typography>\n            {enterpriseItems.map((item) => {\n              const isActive = location.pathname === item.path;\n              return (\n                <motion.div\n                  key={item.text}\n                  whileHover={{ x: 4 }}\n                  transition={{ type: 'spring', stiffness: 300, damping: 30 }}\n                >\n                  <ListItem disablePadding sx={{ mb: 0.5 }}>\n                    <ListItemButton\n                      component={RouterLink}\n                      to={item.path}\n                      sx={{\n                        borderRadius: 2,\n                        py: 1.5,\n                        backgroundColor: isActive ? 'rgba(0, 212, 255, 0.1)' : 'transparent',\n                        color: isActive ? 'primary.main' : 'text.primary',\n                        '&:hover': {\n                          backgroundColor: isActive \n                            ? 'rgba(0, 212, 255, 0.15)' \n                            : 'rgba(255, 255, 255, 0.05)',\n                        },\n                      }}\n                    >\n                      <ListItemIcon sx={{ color: 'inherit', minWidth: 40 }}>\n                        {item.icon}\n                      </ListItemIcon>\n                      <ListItemText \n                        primary={item.text}\n                        sx={{ \n                          '& .MuiListItemText-primary': { \n                            fontWeight: isActive ? 600 : 400,\n                            fontSize: '0.95rem',\n                          } \n                        }}\n                      />\n                    </ListItemButton>\n                  </ListItem>\n                </motion.div>\n              );\n            })}\n          </>\n        )}\n      </List>\n\n      {/* Support Section */}\n      <Box sx={{ mt: 'auto', p: 2 }}>\n        <Divider sx={{ mb: 2, borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n        <ListItem disablePadding>\n          <ListItemButton\n            component={RouterLink}\n            to=\"/dashboard/support\"\n            sx={{\n              borderRadius: 2,\n              py: 1.5,\n              '&:hover': {\n                backgroundColor: 'rgba(255, 255, 255, 0.05)',\n              },\n            }}\n          >\n            <ListItemIcon sx={{ color: 'text.secondary', minWidth: 40 }}>\n              <Support />\n            </ListItemIcon>\n            <ListItemText \n              primary=\"Help & Support\"\n              sx={{ \n                '& .MuiListItemText-primary': { \n                  fontSize: '0.95rem',\n                  color: 'text.secondary',\n                } \n              }}\n            />\n          </ListItemButton>\n        </ListItem>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <Box sx={{ display: 'flex', minHeight: '100vh' }}>\n      {/* App Bar */}\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          width: { lg: `calc(100% - ${drawerWidth}px)` },\n          ml: { lg: `${drawerWidth}px` },\n          backgroundColor: 'background.paper',\n          borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n          boxShadow: 'none',\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { lg: 'none' } }}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          {/* Back to Landing */}\n          {isMobile ? (\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Back to landing\"\n              onClick={() => navigate('/')}\n              sx={{ mr: 1 }}\n            >\n              <Home />\n            </IconButton>\n          ) : (\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              startIcon={<Home />}\n              onClick={() => navigate('/')}\n              sx={{\n                mr: 1,\n                borderColor: 'rgba(255, 255, 255, 0.2)',\n                color: 'text.primary',\n                textTransform: 'none',\n                '&:hover': {\n                  borderColor: 'primary.main',\n                  backgroundColor: 'rgba(0, 212, 255, 0.1)',\n                },\n              }}\n            >\n              Back to Landing\n            </Button>\n          )}\n\n          <Box sx={{ flexGrow: 1 }} />\n\n          {/* Notification Icon */}\n          <IconButton\n            size=\"large\"\n            color=\"inherit\"\n            sx={{ mr: 1 }}\n          >\n            <Badge badgeContent={2} color=\"primary\">\n              <Notifications />\n            </Badge>\n          </IconButton>\n\n          {/* Profile Menu */}\n          <IconButton\n            size=\"large\"\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls=\"profile-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleProfileMenuOpen}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n\n          <Menu\n            id=\"profile-menu\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={Boolean(anchorEl)}\n            onClose={handleProfileMenuClose}\n            PaperProps={{\n              sx: {\n                backgroundColor: 'background.paper',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n                mt: 1,\n              },\n            }}\n          >\n            <MenuItem component={RouterLink} to=\"/dashboard/settings\" onClick={handleProfileMenuClose}>\n              <ListItemIcon>\n                <Settings fontSize=\"small\" />\n              </ListItemIcon>\n              Settings\n            </MenuItem>\n            <MenuItem onClick={handleLogout}>\n              <ListItemIcon>\n                <Logout fontSize=\"small\" />\n              </ListItemIcon>\n              Logout\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n\n      {/* Navigation Drawer */}\n      <Box\n        component=\"nav\"\n        sx={{ width: { lg: drawerWidth }, flexShrink: { lg: 0 } }}\n      >\n        <Drawer\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: 'block', lg: 'none' },\n            '& .MuiDrawer-paper': {\n              boxSizing: 'border-box',\n              width: drawerWidth,\n              backgroundColor: 'background.paper',\n              border: 'none',\n              borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n            },\n          }}\n        >\n          <NavigationList />\n        </Drawer>\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            display: { xs: 'none', lg: 'block' },\n            '& .MuiDrawer-paper': {\n              boxSizing: 'border-box',\n              width: drawerWidth,\n              backgroundColor: 'background.paper',\n              border: 'none',\n              borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n            },\n          }}\n          open\n        >\n          <NavigationList />\n        </Drawer>\n      </Box>\n\n      {/* Main Content */}\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          width: { lg: `calc(100% - ${drawerWidth}px)` },\n          backgroundColor: 'background.default',\n          minHeight: '100vh',\n        }}\n      >\n        <Toolbar />\n        <Box sx={{ p: 3 }}>\n          <Outlet />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DashboardLayout;\n"],"names":["drawerWidth","baseNavigationItems","Dashboard","jsx","CardMembership","Analytics","Payment","Group","Download","Description","Support","Settings","enterpriseItems","Business","Security","DashboardLayout","theme","useTheme","isMobile","useMediaQuery","mobileOpen","setMobileOpen","useState","anchorEl","setAnchorEl","location","useLocation","user","logout","useAuth","navigate","useNavigate","handleDrawerToggle","handleProfileMenuOpen","event","handleProfileMenuClose","handleLogout","isEnterprise","_a","navigationItems","React","items","roleUpper","item","NavigationList","jsxs","Box","Typography","Avatar","_b","Chip","List","isActive","motion","ListItem","ListItemButton","RouterLink","ListItemIcon","Badge","ListItemText","Fragment","Divider","AppBar","Toolbar","IconButton","MenuIcon","Home","Button","Notifications","AccountCircle","Menu","MenuItem","Logout","Drawer","Outlet"],"mappings":"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"}