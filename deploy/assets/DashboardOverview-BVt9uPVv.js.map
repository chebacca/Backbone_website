{"version":3,"file":"DashboardOverview-BVt9uPVv.js","sources":["../../src/pages/dashboard/DashboardOverview.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Avatar,\n  LinearProgress,\n  Chip,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  Paper,\n} from '@mui/material';\nimport {\n  TrendingUp,\n  People,\n  Security,\n  Download,\n  CardMembership,\n  Payment,\n  CheckCircle,\n  Schedule,\n  Notifications,\n  Update,\n  Star,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '@/context/AuthContext';\nimport { Link as RouterLink } from 'react-router-dom';\nimport api, { endpoints } from '@/services/api';\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  icon: React.ReactNode;\n  trend?: {\n    value: number;\n    direction: 'up' | 'down';\n  };\n  color?: 'primary' | 'secondary' | 'success' | 'warning' | 'error';\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({ \n  title, \n  value, \n  icon, \n  trend, \n  color = 'primary' \n}) => (\n  <motion.div\n    initial={{ opacity: 0, y: 20 }}\n    animate={{ opacity: 1, y: 0 }}\n    transition={{ duration: 0.6 }}\n  >\n    <Card\n      sx={{\n        background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n        backdropFilter: 'blur(20px)',\n        border: '1px solid rgba(255,255,255,0.1)',\n        '&:hover': {\n          transform: 'translateY(-2px)',\n          boxShadow: '0 8px 32px rgba(0,0,0,0.3)',\n        },\n        transition: 'all 0.3s ease',\n      }}\n    >\n      <CardContent>\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>\n          <Avatar sx={{ bgcolor: `${color}.main`, width: 48, height: 48 }}>\n            {icon}\n          </Avatar>\n          {trend && (\n            <Chip\n              label={`${trend.direction === 'up' ? '+' : '-'}${trend.value}%`}\n              size=\"small\"\n              color={trend.direction === 'up' ? 'success' : 'error'}\n              sx={{ fontWeight: 600 }}\n            />\n          )}\n        </Box>\n        <Typography variant=\"h4\" sx={{ fontWeight: 700, mb: 1 }}>\n          {value}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {title}\n        </Typography>\n      </CardContent>\n    </Card>\n  </motion.div>\n);\n\ninterface ActivityItem {\n  type: 'license' | 'payment' | 'user' | 'security';\n  title: string;\n  description: string;\n  timestamp: string;\n  status?: 'success' | 'warning' | 'error';\n}\n\nconst recentActivity: ActivityItem[] = [\n  {\n    type: 'license',\n    title: 'License Activated',\n    description: 'Pro license activated for john.doe@company.com',\n    timestamp: '2 hours ago',\n    status: 'success',\n  },\n  {\n    type: 'payment',\n    title: 'Payment Successful',\n    description: 'Monthly subscription renewed for $297.00',\n    timestamp: '1 day ago',\n    status: 'success',\n  },\n  {\n    type: 'user',\n    title: 'Team Member Added',\n    description: 'Sarah Johnson added to development team',\n    timestamp: '2 days ago',\n    status: 'success',\n  },\n  {\n    type: 'security',\n    title: 'Security Alert',\n    description: 'New device login detected from New York',\n    timestamp: '3 days ago',\n    status: 'warning',\n  },\n];\n\nconst getActivityIcon = (type: string) => {\n  switch (type) {\n    case 'license': return <CardMembership />;\n    case 'payment': return <Payment />;\n    case 'user': return <People />;\n    case 'security': return <Security />;\n    default: return <Notifications />;\n  }\n};\n\nconst getStatusColor = (status?: string) => {\n  switch (status) {\n    case 'success': return 'success.main';\n    case 'warning': return 'warning.main';\n    case 'error': return 'error.main';\n    default: return 'text.secondary';\n  }\n};\n\nconst DashboardOverview: React.FC = () => {\n  const { user } = useAuth();\n\n  const [_, setLoading] = useState<boolean>(true);\n  const [activeLicenses, setActiveLicenses] = useState<number>(0);\n  const [totalLicenses, setTotalLicenses] = useState<number>(0);\n  const [monthlyUsage, setMonthlyUsage] = useState<number>(0);\n  const [totalDownloads, setTotalDownloads] = useState<number>(0);\n  const [currentPlan, setCurrentPlan] = useState<string>('');\n  const [daysUntilRenewal, setDaysUntilRenewal] = useState<string>('');\n  const [hasEnterpriseFeatures, setHasEnterpriseFeatures] = useState<boolean>(false);\n\n  useEffect(() => {\n    let isMounted = true;\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const [subsRes, analyticsRes] = await Promise.all([\n          api.get(endpoints.subscriptions.mySubscriptions()),\n          api.get(endpoints.licenses.analytics()),\n        ]);\n\n        // Subscriptions\n        const subscriptions = subsRes.data?.data?.subscriptions ?? [];\n        const totalLic = subscriptions.reduce((acc: number, s: any) => acc + (s._count?.licenses ?? s.licenses?.length ?? 0), 0);\n        const activeLic = subscriptions.reduce(\n          (acc: number, s: any) => acc + (s.licenses?.filter((l: any) => l.status === 'ACTIVE').length ?? 0),\n          0\n        );\n        if (!isMounted) return;\n        setTotalLicenses(totalLic);\n        setActiveLicenses(activeLic);\n\n        // Plan and renewal\n        const primary = subscriptions[0];\n        if (primary) {\n          setCurrentPlan(primary.tier?.toLowerCase?.() ?? String(primary.tier));\n          if (primary.currentPeriodEnd) {\n            const end = new Date(primary.currentPeriodEnd);\n            const days = Math.max(0, Math.ceil((end.getTime() - Date.now()) / (1000 * 60 * 60 * 24)));\n            setDaysUntilRenewal(`${days} day${days === 1 ? '' : 's'}`);\n          }\n          setHasEnterpriseFeatures(primary.tier === 'ENTERPRISE');\n        }\n\n        // Analytics summary\n        const summary = analyticsRes.data?.data?.summary;\n        if (summary) {\n          setMonthlyUsage(summary.totalEvents ?? 0);\n          const downloads = (summary.eventTypes && (summary.eventTypes.SDK_DOWNLOAD_REQUEST || summary.eventTypes['SDK_DOWNLOAD_REQUEST'])) || 0;\n          setTotalDownloads(downloads);\n        }\n      } catch (err) {\n        // Fallback to zeros on error\n        if (!isMounted) return;\n        setActiveLicenses(0);\n        setTotalLicenses(0);\n        setMonthlyUsage(0);\n        setTotalDownloads(0);\n        setCurrentPlan('');\n        setDaysUntilRenewal('');\n        setHasEnterpriseFeatures(false);\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    };\n    fetchData();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const licenseUtilization = useMemo(() => {\n    if (totalLicenses <= 0) return 0;\n    return Math.round((activeLicenses / totalLicenses) * 100);\n  }, [activeLicenses, totalLicenses]);\n\n  return (\n    <Box>\n      {/* Welcome Header */}\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h4\" sx={{ fontWeight: 700, mb: 1 }}>\n            Welcome back, {user?.name?.split(' ')[0] || 'User'}! ðŸ‘‹\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            color=\"text.secondary\"\n            sx={{ mb: 4 }}\n          >\n            Here's what's happening with your BackboneLogic, Inc. licenses\n          </Typography>\n        </Box>\n      </motion.div>\n\n      {/* Metrics Grid */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} sm={6} lg={3}>\n          <MetricCard\n            title=\"Active Licenses\"\n            value={activeLicenses}\n            icon={<CardMembership />}\n            trend={{ value: 12, direction: 'up' }}\n            color=\"primary\"\n          />\n        </Grid>\n        {hasEnterpriseFeatures && (\n          <Grid item xs={12} sm={6} lg={3}>\n            <MetricCard\n              title=\"Team Members\"\n              value={8}\n              icon={<People />}\n              trend={{ value: 8, direction: 'up' }}\n              color=\"secondary\"\n            />\n          </Grid>\n        )}\n        <Grid item xs={12} sm={6} lg={3}>\n          <MetricCard\n            title=\"Monthly Usage\"\n            value={monthlyUsage}\n            icon={<TrendingUp />}\n            trend={{ value: 5, direction: 'up' }}\n            color=\"success\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3}>\n          <MetricCard\n            title=\"Total Downloads\"\n            value={totalDownloads.toLocaleString()}\n            icon={<Download />}\n            trend={{ value: 23, direction: 'up' }}\n            color=\"warning\"\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        {/* License Status */}\n        <Grid item xs={12} lg={8}>\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <Card\n              sx={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                backdropFilter: 'blur(20px)',\n                border: '1px solid rgba(255,255,255,0.1)',\n                mb: 3,\n              }}\n            >\n              <CardContent>\n                <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n                  License Overview\n                </Typography>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={6}>\n                    <Box sx={{ mb: 3 }}>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          License Utilization\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\n                          {licenseUtilization}%\n                        </Typography>\n                      </Box>\n                      <LinearProgress\n                        variant=\"determinate\"\n                        value={licenseUtilization}\n                        sx={{\n                          height: 8,\n                          borderRadius: 4,\n                          backgroundColor: 'rgba(255,255,255,0.1)',\n                          '& .MuiLinearProgress-bar': {\n                            borderRadius: 4,\n                            background: licenseUtilization > 80 \n                              ? 'linear-gradient(90deg, #ff9800 0%, #f44336 100%)'\n                              : 'linear-gradient(90deg, #00d4ff 0%, #667eea 100%)',\n                          },\n                        }}\n                      />\n                      <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\n                        {activeLicenses} of {totalLicenses} licenses in use\n                      </Typography>\n                    </Box>\n\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                        Current Plan\n                      </Typography>\n                      <Chip\n                        label={(currentPlan && currentPlan.charAt(0).toUpperCase() + currentPlan.slice(1).toLowerCase()) || 'â€”'}\n                        color=\"primary\"\n                        sx={{ fontWeight: 600, mb: 2 }}\n                      />\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {daysUntilRenewal ? `Next renewal in ${daysUntilRenewal}` : 'â€”'}\n                      </Typography>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                      Quick Actions\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                      {hasEnterpriseFeatures && (\n                        <Button\n                          variant=\"outlined\"\n                          startIcon={<People />}\n                          component={RouterLink}\n                          to=\"/dashboard/team\"\n                          sx={{ justifyContent: 'flex-start' }}\n                        >\n                          Add Team Member\n                        </Button>\n                      )}\n                      <Button\n                        variant=\"outlined\"\n                        startIcon={<Download />}\n                        component={RouterLink}\n                        to=\"/dashboard/downloads\"\n                        sx={{ justifyContent: 'flex-start' }}\n                      >\n                        Download SDK\n                      </Button>\n                      <Button\n                        variant=\"outlined\"\n                        startIcon={<Star />}\n                        component={RouterLink}\n                        to=\"/dashboard/billing\"\n                        sx={{ justifyContent: 'flex-start' }}\n                      >\n                        Upgrade Plan\n                      </Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </Grid>\n\n        {/* Recent Activity */}\n        <Grid item xs={12} lg={4}>\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            <Card\n              sx={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                backdropFilter: 'blur(20px)',\n                border: '1px solid rgba(255,255,255,0.1)',\n                height: 'fit-content',\n              }}\n            >\n              <CardContent>\n                <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\n                  Recent Activity\n                </Typography>\n\n                <List dense>\n                  {recentActivity.map((activity, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem sx={{ px: 0 }}>\n                        <ListItemIcon sx={{ minWidth: 40 }}>\n                          <Avatar\n                            sx={{\n                              width: 32,\n                              height: 32,\n                              bgcolor: getStatusColor(activity.status),\n                              fontSize: '1rem',\n                            }}\n                          >\n                            {getActivityIcon(activity.type)}\n                          </Avatar>\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={activity.title}\n                          secondary={\n                            <React.Fragment>\n                              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\n                                {activity.description}\n                              </Typography>\n                              <Typography variant=\"caption\" color=\"text.secondary\">\n                                {activity.timestamp}\n                              </Typography>\n                            </React.Fragment>\n                          }\n                          primaryTypographyProps={{\n                            variant: 'body2',\n                            fontWeight: 500,\n                          }}\n                        />\n                      </ListItem>\n                      {index < recentActivity.length - 1 && (\n                        <Divider variant=\"inset\" component=\"li\" sx={{ borderColor: 'rgba(255,255,255,0.1)' }} />\n                      )}\n                    </React.Fragment>\n                  ))}\n                </List>\n\n                <Button\n                  variant=\"text\"\n                  size=\"small\"\n                  sx={{ mt: 2, color: 'primary.main' }}\n                  component={RouterLink}\n                  to=\"/dashboard/activity\"\n                >\n                  View All Activity\n                </Button>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </Grid>\n\n        {/* System Status */}\n        <Grid item xs={12}>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.6 }}\n          >\n            <Paper\n              sx={{\n                p: 3,\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                backdropFilter: 'blur(20px)',\n                border: '1px solid rgba(255,255,255,0.1)',\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\n                System Status\n              </Typography>\n\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6} md={3}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <CheckCircle sx={{ color: 'success.main', fontSize: 20 }} />\n                    <Box>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                        License Server\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"success.main\">\n                        Operational\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={3}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <CheckCircle sx={{ color: 'success.main', fontSize: 20 }} />\n                    <Box>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                        API Services\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"success.main\">\n                        Operational\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={3}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <Schedule sx={{ color: 'warning.main', fontSize: 20 }} />\n                    <Box>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                        Maintenance\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"warning.main\">\n                        Scheduled 2AM EST\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={3}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <Update sx={{ color: 'primary.main', fontSize: 20 }} />\n                    <Box>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                        SDK Version\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"primary.main\">\n                        v14.2.1 Available\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Paper>\n          </motion.div>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default DashboardOverview;\n"],"names":["MetricCard","title","value","icon","trend","color","jsx","motion","Card","CardContent","jsxs","Box","Avatar","Chip","Typography","recentActivity","getActivityIcon","type","CardMembership","Payment","People","Security","Notifications","getStatusColor","status","DashboardOverview","user","useAuth","_","setLoading","useState","activeLicenses","setActiveLicenses","totalLicenses","setTotalLicenses","monthlyUsage","setMonthlyUsage","totalDownloads","setTotalDownloads","currentPlan","setCurrentPlan","daysUntilRenewal","setDaysUntilRenewal","hasEnterpriseFeatures","setHasEnterpriseFeatures","useEffect","isMounted","subsRes","analyticsRes","api","endpoints","subscriptions","_b","_a","totalLic","acc","s","activeLic","l","primary","_d","_c","end","days","summary","_f","_e","downloads","licenseUtilization","useMemo","Grid","TrendingUp","Download","LinearProgress","Button","RouterLink","Star","List","activity","index","React","ListItem","ListItemIcon","ListItemText","Divider","Paper","CheckCircle","Schedule","Update"],"mappings":"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"}