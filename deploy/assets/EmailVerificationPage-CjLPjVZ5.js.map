{"version":3,"file":"EmailVerificationPage-CjLPjVZ5.js","sources":["../../src/pages/auth/EmailVerificationPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  Paper,\n  Typography,\n  Button,\n  Alert,\n  CircularProgress,\n  Stack,\n} from '@mui/material';\nimport {\n  Email,\n  CheckCircle,\n  Error,\n  Refresh,\n  ArrowForward,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useAuth } from '@/context/AuthContext';\nimport { useLoading } from '@/context/LoadingContext';\nimport { useSnackbar } from 'notistack';\nimport { authService } from '@/services/authService';\n\nconst EmailVerificationPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { token } = useParams();\n  const location = useLocation();\n  const { user, refreshUser } = useAuth();\n  const { setLoading } = useLoading();\n  const { enqueueSnackbar } = useSnackbar();\n  \n  const [verificationStatus, setVerificationStatus] = useState<'pending' | 'verifying' | 'success' | 'error'>('pending');\n  const [error, setError] = useState<string | null>(null);\n  const [isResending, setIsResending] = useState(false);\n\n  const selectedTier = location.state?.selectedTier;\n\n  useEffect(() => {\n    if (token) {\n      verifyEmailToken(token);\n    }\n  }, [token]);\n\n  const verifyEmailToken = async (verificationToken: string) => {\n    try {\n      setVerificationStatus('verifying');\n      setError(null);\n      \n      await authService.verifyEmail(verificationToken);\n      \n      // Refresh user data to get updated verification status\n      await refreshUser();\n      \n      setVerificationStatus('success');\n      enqueueSnackbar('Email verified successfully!', { variant: 'success' });\n      \n      // Auto-redirect after 3 seconds\n      setTimeout(() => {\n        if (selectedTier) {\n          navigate('/checkout', { state: { tier: selectedTier } });\n        } else {\n          navigate('/dashboard');\n        }\n      }, 3000);\n    } catch (err: any) {\n      setVerificationStatus('error');\n      setError(err.message || 'Email verification failed');\n      enqueueSnackbar(err.message || 'Email verification failed', { variant: 'error' });\n    }\n  };\n\n  const resendVerification = async () => {\n    try {\n      setIsResending(true);\n      setError(null);\n      \n      await authService.resendVerification();\n      \n      enqueueSnackbar('Verification email sent! Please check your inbox.', { variant: 'success' });\n    } catch (err: any) {\n      setError(err.message || 'Failed to resend verification email');\n      enqueueSnackbar(err.message || 'Failed to resend verification email', { variant: 'error' });\n    } finally {\n      setIsResending(false);\n    }\n  };\n\n  const handleContinue = () => {\n    if (selectedTier) {\n      navigate('/checkout', { state: { tier: selectedTier } });\n    } else {\n      navigate('/dashboard');\n    }\n  };\n\n  const renderContent = () => {\n    switch (verificationStatus) {\n      case 'verifying':\n        return (\n          <Box sx={{ textAlign: 'center' }}>\n            <CircularProgress size={60} sx={{ mb: 3, color: 'primary.main' }} />\n            <Typography variant=\"h5\" sx={{ fontWeight: 600, mb: 2 }}>\n              Verifying Your Email\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              Please wait while we verify your email address...\n            </Typography>\n          </Box>\n        );\n\n      case 'success':\n        return (\n          <Box sx={{ textAlign: 'center' }}>\n            <CheckCircle\n              sx={{\n                fontSize: 80,\n                color: 'success.main',\n                mb: 3,\n              }}\n            />\n            <Typography variant=\"h5\" sx={{ fontWeight: 600, mb: 2 }}>\n              Email Verified Successfully!\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              color=\"text.secondary\"\n              sx={{ mb: 4, textAlign: 'center' }}\n            >\n              Your email has been verified. You can now access all features of BackboneLogic, Inc.\n            </Typography>\n            \n            {selectedTier && (\n              <Alert severity=\"info\" sx={{ mb: 3 }}>\n                Redirecting to checkout for your selected {selectedTier} plan...\n              </Alert>\n            )}\n            \n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              endIcon={<ArrowForward />}\n              onClick={handleContinue}\n              sx={{\n                background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                color: '#000',\n              }}\n            >\n              {selectedTier ? 'Continue to Checkout' : 'Go to Dashboard'}\n            </Button>\n          </Box>\n        );\n\n      case 'error':\n        return (\n          <Box sx={{ textAlign: 'center' }}>\n            <Error\n              sx={{\n                fontSize: 80,\n                color: 'error.main',\n                mb: 3,\n              }}\n            />\n            <Typography variant=\"h5\" sx={{ fontWeight: 600, mb: 2 }}>\n              Verification Failed\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\n              {error || 'The verification link is invalid or has expired.'}\n            </Typography>\n            \n            <Stack spacing={2} direction={{ xs: 'column', sm: 'row' }} justifyContent=\"center\">\n              <Button\n                variant=\"contained\"\n                startIcon={<Refresh />}\n                onClick={resendVerification}\n                disabled={isResending}\n                sx={{\n                  background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                  color: '#000',\n                }}\n              >\n                {isResending ? 'Sending...' : 'Resend Verification'}\n              </Button>\n              \n              <Button\n                variant=\"outlined\"\n                onClick={() => navigate('/login')}\n              >\n                Back to Login\n              </Button>\n            </Stack>\n          </Box>\n        );\n\n      default:\n        return (\n          <Box sx={{ textAlign: 'center' }}>\n            <Email\n              sx={{\n                fontSize: 80,\n                color: 'primary.main',\n                mb: 3,\n              }}\n            />\n            <Typography variant=\"h5\" sx={{ fontWeight: 600, mb: 2 }}>\n              Check Your Email\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              We've sent a verification link to:\n            </Typography>\n            <Typography variant=\"body1\" sx={{ fontWeight: 600, mb: 4, color: 'primary.main' }}>\n              {user?.email}\n            </Typography>\n            \n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 4 }}>\n              Click the link in your email to verify your account. \n              The link will expire in 24 hours.\n            </Typography>\n\n            {selectedTier && (\n              <Alert severity=\"info\" sx={{ mb: 4 }}>\n                After verifying your email, you'll be redirected to checkout for your selected {selectedTier} plan.\n              </Alert>\n            )}\n            \n            <Stack spacing={2}>\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                startIcon={<Refresh />}\n                onClick={resendVerification}\n                disabled={isResending}\n                sx={{\n                  background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                  color: '#000',\n                }}\n              >\n                {isResending ? 'Sending...' : 'Resend Verification Email'}\n              </Button>\n              \n              <Button\n                variant=\"text\"\n                onClick={() => navigate('/login')}\n                sx={{ color: 'text.secondary' }}\n              >\n                Use a different email address\n              </Button>\n            </Stack>\n\n            <Box sx={{ mt: 4, p: 2, backgroundColor: 'rgba(255, 255, 255, 0.05)', borderRadius: 2 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                <strong>Didn't receive the email?</strong>\n              </Typography>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                • Check your spam/junk folder<br/>\n                • Make sure {user?.email} is correct<br/>\n                • Try resending the verification email\n              </Typography>\n            </Box>\n          </Box>\n        );\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%)',\n        display: 'flex',\n        alignItems: 'center',\n        py: { xs: 4, md: 0 },\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <Paper\n            elevation={10}\n            sx={{\n              p: { xs: 4, md: 6 },\n              backgroundColor: 'background.paper',\n              borderRadius: 3,\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n            }}\n          >\n            {/* Header */}\n            <Box sx={{ textAlign: 'center', mb: 4 }}>\n              <Box\n                sx={{\n                  width: 60,\n                  height: 60,\n                  borderRadius: 2,\n                  background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  mx: 'auto',\n                  mb: 3,\n                }}\n              >\n                <Typography\n                  variant=\"h4\"\n                  sx={{\n                    fontWeight: 700,\n                    color: '#000',\n                  }}\n                >\n                  D\n                </Typography>\n              </Box>\n\n              <Typography\n                variant=\"h4\"\n                sx={{\n                  fontWeight: 600,\n                  mb: 1,\n                  background: 'linear-gradient(135deg, #ffffff 0%, #00d4ff 100%)',\n                  WebkitBackgroundClip: 'text',\n                  WebkitTextFillColor: 'transparent',\n                  backgroundClip: 'text',\n                }}\n              >\n                Email Verification\n              </Typography>\n            </Box>\n\n            {/* Error Alert */}\n            {error && verificationStatus !== 'error' && (\n              <Alert severity=\"error\" sx={{ mb: 3 }}>\n                {error}\n              </Alert>\n            )}\n\n            {/* Content */}\n            {renderContent()}\n\n            {/* Footer */}\n            <Box sx={{ mt: 4, pt: 3, borderTop: '1px solid rgba(255, 255, 255, 0.1)', textAlign: 'center' }}>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                🔒 Your account security is our top priority\n              </Typography>\n            </Box>\n          </Paper>\n        </motion.div>\n      </Container>\n    </Box>\n  );\n};\n\nexport default EmailVerificationPage;\n"],"names":["EmailVerificationPage","navigate","useNavigate","token","useParams","location","useLocation","user","refreshUser","useAuth","setLoading","useLoading","enqueueSnackbar","useSnackbar","verificationStatus","setVerificationStatus","useState","error","setError","isResending","setIsResending","selectedTier","_a","useEffect","verifyEmailToken","verificationToken","authService","err","resendVerification","handleContinue","renderContent","Box","jsx","CircularProgress","Typography","CheckCircle","Alert","Button","ArrowForward","Error","jsxs","Stack","Refresh","Email","Container","motion","Paper"],"mappings":"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"}