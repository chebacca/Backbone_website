const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/firebase-BfdVtb0I.js","assets/index-CHgXrSvL.js","assets/mui-BN540ctE.js","assets/vendor-CjD1bmmO.js","assets/stripe-C-GNnApq.js","assets/index-CBai7h7s.css","assets/index.esm-D7ujsXeY.js","assets/index.esm-DonjM_pP.js","assets/index.esm-D2YDx4vs.js"])))=>i.map(i=>d[i]);
var D=Object.defineProperty;var T=(E,e,o)=>e in E?D(E,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):E[e]=o;var M=(E,e,o)=>T(E,typeof e!="symbol"?e+"":e,o);import{_ as I}from"./index-CHgXrSvL.js";import{collection as O,doc as _,query as i,limit as f,getDocs as p,Timestamp as g,addDoc as b,updateDoc as w,deleteDoc as F,getDoc as L,where as R,orderBy as y,writeBatch as v,onSnapshot as P}from"./index.esm-DonjM_pP.js";import{db as C}from"./firebase-BfdVtb0I.js";import"./mui-BN540ctE.js";import"./vendor-CjD1bmmO.js";import"./stripe-C-GNnApq.js";import"./index.esm-D7ujsXeY.js";import"./index.esm-D2YDx4vs.js";const d={USERS:"users",USER_PROFILES:"userProfiles",USER_SETTINGS:"user_settingss",USER_TIME_CARDS:"user_time_cards",ORGANIZATIONS:"organizations",ORG_MEMBERS:"org_members",TEAM_MEMBERS:"teamMembers",TEAM_MEMBERS_LEGACY:"team_members",PROJECTS:"projects",PROJECT_TEAM_MEMBERS:"projectTeamMembers",PROJECT_TEAM_MEMBERS_LEGACY:"project_team_members",PROJECT_PARTICIPANTS:"project_participants",DATASETS:"datasets",LICENSES:"licenses",SUBSCRIPTIONS:"subscriptions",PAYMENTS:"payments",INVOICES:"invoices",INVOICE_PAYMENTS:"invoice_payments",ACTIVITIES:"activities",AUDIT_LOG:"audit_log",AUDIT_LOGS:"auditLogs",SESSIONS:"sessions",USAGE_ANALYTICS:"usage_analytics",SYSTEM_SETTINGS:"systemSettings",SDK_VERSIONS:"sdkVersions",WEBHOOK_EVENTS:"webhookEvents",WEBHOOK_EVENTS_ALT:"webhook_events",NOTIFICATIONS:"notifications",PRIVACY_CONSENTS:"privacy_consents",LICENSE_DELIVERY_LOGS:"license_delivery_logs",WORKFLOW_DIAGRAMS:"workflow_diagrams"},u=class u{static getInstance(){return u.instance||(u.instance=new u),u.instance}isWebOnlyMode(){return!0}getCollection(e){return O(C,e)}getDocument(e,o){return _(C,e,o)}async initializeCollections(){console.log("üîß [FirestoreCollectionManager] Initializing Firestore collections...");try{const{auth:e}=await I(async()=>{const{auth:t}=await import("./firebase-BfdVtb0I.js");return{auth:t}},__vite__mapDeps([0,1,2,3,4,5,6,7,8]));if(!e.currentUser&&this.isWebOnlyMode()){console.warn("‚ö†Ô∏è [FirestoreCollectionManager] No authenticated user - some operations may fail");return}const o=[d.USERS,d.ORGANIZATIONS,d.ORG_MEMBERS,d.PROJECTS,d.LICENSES,d.TEAM_MEMBERS,d.PROJECT_TEAM_MEMBERS];for(const t of o)try{const r=this.getCollection(t),n=i(r,f(1));await p(n),console.log(`‚úÖ [FirestoreCollectionManager] Collection '${t}' is accessible`)}catch(r){console.warn(`‚ö†Ô∏è [FirestoreCollectionManager] Collection '${t}' may not be accessible:`,r)}console.log("‚úÖ [FirestoreCollectionManager] Collection initialization completed")}catch(e){console.error("‚ùå [FirestoreCollectionManager] Failed to initialize collections:",e)}}cleanDocumentData(e){if(typeof e!="object"||e===null)return e;if(Array.isArray(e))return e.map(t=>this.cleanDocumentData(t));const o={};for(const[t,r]of Object.entries(e))r!=null&&(o[t]=this.cleanDocumentData(r));return o}async createDocument(e,o){try{const t=this.getCollection(e),r=g.now(),n={...o,createdAt:o.createdAt||r,updatedAt:o.updatedAt||r},a=this.cleanDocumentData(n),c=await b(t,a);return console.log(`‚úÖ [FirestoreCollectionManager] Created document in '${e}':`,c.id),c.id}catch(t){throw console.error(`‚ùå [FirestoreCollectionManager] Failed to create document in '${e}':`,t),t}}async updateDocument(e,o,t){try{const r=this.getDocument(e,o),n={...t,updatedAt:t.updatedAt||g.now()},a=this.cleanDocumentData(n);await w(r,a),console.log(`‚úÖ [FirestoreCollectionManager] Updated document in '${e}':`,o)}catch(r){throw console.error(`‚ùå [FirestoreCollectionManager] Failed to update document in '${e}':`,r),r}}async deleteDocument(e,o){try{const t=this.getDocument(e,o);await F(t),console.log(`‚úÖ [FirestoreCollectionManager] Deleted document from '${e}':`,o)}catch(t){throw console.error(`‚ùå [FirestoreCollectionManager] Failed to delete document from '${e}':`,t),t}}async getDocumentById(e,o){try{const t=this.getDocument(e,o),r=await L(t);return r.exists()?{id:r.id,...r.data()}:null}catch(t){throw console.error(`‚ùå [FirestoreCollectionManager] Failed to get document from '${e}':`,t),t}}async queryDocuments(e,o=[],t,r="desc",n){try{const a=this.getCollection(e);let c=i(a);for(const s of o)c=i(c,R(s.field,s.operator,s.value));t&&(c=i(c,y(t,r))),n&&(c=i(c,f(n)));const l=await p(c),S=[];return l.forEach(s=>{S.push({id:s.id,...s.data()})}),S}catch(a){throw console.error(`‚ùå [FirestoreCollectionManager] Failed to query documents from '${e}':`,a),a}}async batchOperations(e){try{const o=v(C),t=g.now();for(const r of e)switch(r.type){case"create":if(r.data){const n=_(this.getCollection(r.collection));o.set(n,{...r.data,createdAt:r.data.createdAt||t,updatedAt:r.data.updatedAt||t})}break;case"update":if(r.docId&&r.data){const n=this.getDocument(r.collection,r.docId);o.update(n,{...r.data,updatedAt:r.data.updatedAt||t})}break;case"delete":if(r.docId){const n=this.getDocument(r.collection,r.docId);o.delete(n)}break}await o.commit(),console.log("‚úÖ [FirestoreCollectionManager] Completed batch operations:",e.length)}catch(o){throw console.error("‚ùå [FirestoreCollectionManager] Failed to execute batch operations:",o),o}}subscribeToCollection(e,o,t=[],r,n="desc",a){try{const c=this.getCollection(e);let l=i(c);for(const s of t)l=i(l,R(s.field,s.operator,s.value));r&&(l=i(l,y(r,n))),a&&(l=i(l,f(a)));const S=P(l,s=>{const h=[];s.forEach(A=>{h.push({id:A.id,...A.data()})}),o(h)},s=>{console.error(`‚ùå [FirestoreCollectionManager] Subscription error for '${e}':`,s)});return console.log(`‚úÖ [FirestoreCollectionManager] Set up subscription for '${e}'`),S}catch(c){return console.error(`‚ùå [FirestoreCollectionManager] Failed to set up subscription for '${e}':`,c),()=>{}}}async validateCollectionAccess(e){try{const o=this.getCollection(e),t=i(o,f(1));return await p(t),!0}catch(o){return console.warn(`‚ö†Ô∏è [FirestoreCollectionManager] No access to collection '${e}':`,o),!1}}async getCollectionStats(e){try{if(!await this.validateCollectionAccess(e))return{accessible:!1};const t=await this.queryDocuments(e,[],"updatedAt","desc",100);return{accessible:!0,documentCount:t.length,lastUpdated:t.length>0&&t[0].updatedAt?new Date(t[0].updatedAt.toDate?t[0].updatedAt.toDate():t[0].updatedAt):void 0}}catch(o){return console.error(`‚ùå [FirestoreCollectionManager] Failed to get stats for '${e}':`,o),{accessible:!1}}}};M(u,"instance");let m=u;const j=m.getInstance();export{d as COLLECTIONS,m as FirestoreCollectionManager,m as default,j as firestoreCollectionManager};
