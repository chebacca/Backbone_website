{"version":3,"file":"RegisterPage-xEDcq8HH.js","sources":["../../src/pages/auth/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Link,\n  Alert,\n  InputAdornment,\n  IconButton,\n  Divider,\n  Stack,\n  Checkbox,\n  FormControlLabel,\n  LinearProgress,\n} from '@mui/material';\nimport {\n  Visibility,\n  VisibilityOff,\n  Email,\n  Lock,\n  Person,\n  ArrowBack,\n  Check,\n} from '@mui/icons-material';\nimport { useForm, Controller } from 'react-hook-form';\nimport { motion } from 'framer-motion';\nimport { useNavigate, Link as RouterLink, useLocation } from 'react-router-dom';\nimport { useAuth } from '@/context/AuthContext';\nimport { useLoading } from '@/context/LoadingContext';\nimport { useSnackbar } from 'notistack';\n\ninterface RegisterFormData {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  acceptTerms: boolean;\n  acceptPrivacy: boolean;\n  marketingConsent: boolean;\n}\n\nconst RegisterPage: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { register } = useAuth();\n  const { setLoading } = useLoading();\n  const { enqueueSnackbar } = useSnackbar();\n  \n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Get selected tier from navigation state\n  const selectedTier = location.state?.selectedTier;\n\n  const {\n    control,\n    handleSubmit,\n    watch,\n    formState: { errors, isSubmitting },\n  } = useForm<RegisterFormData>({\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      acceptTerms: false,\n      acceptPrivacy: false,\n      marketingConsent: false,\n    },\n  });\n\n  const password = watch('password');\n\n  const getPasswordStrength = (password: string) => {\n    if (!password) return { score: 0, label: '', color: 'error' };\n    \n    let score = 0;\n    if (password.length >= 8) score += 25;\n    if (/[a-z]/.test(password)) score += 25;\n    if (/[A-Z]/.test(password)) score += 25;\n    if (/[0-9]/.test(password)) score += 25;\n    if (/[^A-Za-z0-9]/.test(password)) score += 25;\n    \n    if (score <= 25) return { score, label: 'Weak', color: 'error' };\n    if (score <= 50) return { score, label: 'Fair', color: 'warning' };\n    if (score <= 75) return { score, label: 'Good', color: 'info' };\n    return { score: Math.min(score, 100), label: 'Strong', color: 'success' };\n  };\n\n  const passwordStrength = getPasswordStrength(password);\n\n  const onSubmit = async (data: RegisterFormData) => {\n    try {\n      setError(null);\n      setLoading(true);\n      \n      await register({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        acceptTerms: data.acceptTerms,\n        acceptPrivacy: data.acceptPrivacy,\n        marketingConsent: data.marketingConsent,\n      });\n      \n      enqueueSnackbar('Account created successfully! Please check your email to verify your account.', { \n        variant: 'success',\n        autoHideDuration: 7000,\n      });\n      \n      // Navigate to verification page or checkout if tier selected\n      if (selectedTier) {\n        navigate('/verify-email', { state: { selectedTier } });\n      } else {\n        navigate('/verify-email');\n      }\n    } catch (err: any) {\n      const errorMessage = err.message || 'Registration failed. Please try again.';\n      setError(errorMessage);\n      enqueueSnackbar(errorMessage, { variant: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%)',\n        display: 'flex',\n        alignItems: 'center',\n        py: { xs: 4, md: 0 },\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          {/* Back Button */}\n          <Box sx={{ mb: 3 }}>\n            <Button\n              startIcon={<ArrowBack />}\n              onClick={() => navigate('/')}\n              sx={{\n                color: 'rgba(255, 255, 255, 0.7)',\n                '&:hover': {\n                  color: 'primary.main',\n                  backgroundColor: 'rgba(0, 212, 255, 0.1)',\n                },\n              }}\n            >\n              Back to Home\n            </Button>\n          </Box>\n\n          <Paper\n            elevation={10}\n            sx={{\n              p: { xs: 4, md: 6 },\n              backgroundColor: 'background.paper',\n              borderRadius: 3,\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n            }}\n          >\n            {/* Header */}\n            <Box sx={{ textAlign: 'center', mb: 4 }}>\n              <Box\n                sx={{\n                  width: 60,\n                  height: 60,\n                  borderRadius: 2,\n                  background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  mx: 'auto',\n                  mb: 3,\n                }}\n              >\n                <Typography\n                  variant=\"h4\"\n                  sx={{\n                    fontWeight: 700,\n                    color: '#000',\n                  }}\n                >\n                  D\n                </Typography>\n              </Box>\n\n              <Typography\n                variant=\"h4\"\n                sx={{\n                  fontWeight: 600,\n                  mb: 1,\n                  background: 'linear-gradient(135deg, #ffffff 0%, #00d4ff 100%)',\n                  WebkitBackgroundClip: 'text',\n                  WebkitTextFillColor: 'transparent',\n                  backgroundClip: 'text',\n                }}\n              >\n                Create Account\n              </Typography>\n              \n              <Typography\n                variant=\"h6\"\n                color=\"text.secondary\"\n                sx={{ mb: 4, maxWidth: 600, mx: 'auto' }}\n              >\n                Join thousands of professionals using BackboneLogic, Inc.\n              </Typography>\n\n              {selectedTier && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"body2\" color=\"primary.main\">\n                    Selected Plan: <strong>{selectedTier}</strong>\n                  </Typography>\n                </Box>\n              )}\n            </Box>\n\n            {/* Error Alert */}\n            {error && (\n              <Alert severity=\"error\" sx={{ mb: 3 }}>\n                {error}\n              </Alert>\n            )}\n\n            {/* Register Form */}\n            <Box component=\"form\" onSubmit={handleSubmit(onSubmit)}>\n              <Stack spacing={3}>\n                <Controller\n                  name=\"name\"\n                  control={control}\n                  rules={{\n                    required: 'Full name is required',\n                    minLength: {\n                      value: 2,\n                      message: 'Name must be at least 2 characters',\n                    },\n                    maxLength: {\n                      value: 50,\n                      message: 'Name must be less than 50 characters',\n                    },\n                  }}\n                  render={({ field }) => (\n                    <TextField\n                      {...field}\n                      fullWidth\n                      label=\"Full Name\"\n                      error={!!errors.name}\n                      helperText={errors.name?.message}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Person sx={{ color: 'text.secondary' }} />\n                          </InputAdornment>\n                        ),\n                      }}\n                      sx={{\n                        '& .MuiOutlinedInput-root': {\n                          backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                        },\n                      }}\n                    />\n                  )}\n                />\n\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  rules={{\n                    required: 'Email is required',\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: 'Please enter a valid email address',\n                    },\n                  }}\n                  render={({ field }) => (\n                    <TextField\n                      {...field}\n                      fullWidth\n                      label=\"Email Address\"\n                      type=\"email\"\n                      error={!!errors.email}\n                      helperText={errors.email?.message}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Email sx={{ color: 'text.secondary' }} />\n                          </InputAdornment>\n                        ),\n                      }}\n                      sx={{\n                        '& .MuiOutlinedInput-root': {\n                          backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                        },\n                      }}\n                    />\n                  )}\n                />\n\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  rules={{\n                    required: 'Password is required',\n                    minLength: {\n                      value: 8,\n                      message: 'Password must be at least 8 characters',\n                    },\n                    validate: {\n                      hasLowerCase: (value) =>\n                        /[a-z]/.test(value) || 'Password must contain a lowercase letter',\n                      hasUpperCase: (value) =>\n                        /[A-Z]/.test(value) || 'Password must contain an uppercase letter',\n                      hasNumber: (value) =>\n                        /\\d/.test(value) || 'Password must contain a number',\n                    },\n                  }}\n                  render={({ field }) => (\n                    <Box>\n                      <TextField\n                        {...field}\n                        fullWidth\n                        label=\"Password\"\n                        type={showPassword ? 'text' : 'password'}\n                        error={!!errors.password}\n                        helperText={errors.password?.message}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Lock sx={{ color: 'text.secondary' }} />\n                            </InputAdornment>\n                          ),\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                onClick={() => setShowPassword(!showPassword)}\n                                edge=\"end\"\n                                sx={{ color: 'text.secondary' }}\n                              >\n                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                              </IconButton>\n                            </InputAdornment>\n                          ),\n                        }}\n                        sx={{\n                          '& .MuiOutlinedInput-root': {\n                            backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                          },\n                        }}\n                      />\n                      \n                      {password && (\n                        <Box sx={{ mt: 1 }}>\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              Password strength:\n                            </Typography>\n                            <Typography\n                              variant=\"caption\"\n                              color={`${passwordStrength.color}.main`}\n                              sx={{ fontWeight: 600 }}\n                            >\n                              {passwordStrength.label}\n                            </Typography>\n                          </Box>\n                          <LinearProgress\n                            variant=\"determinate\"\n                            value={passwordStrength.score}\n                            color={passwordStrength.color as any}\n                            sx={{\n                              height: 4,\n                              borderRadius: 2,\n                              backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                            }}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                  )}\n                />\n\n                <Controller\n                  name=\"confirmPassword\"\n                  control={control}\n                  rules={{\n                    required: 'Please confirm your password',\n                    validate: (value) =>\n                      value === password || 'Passwords do not match',\n                  }}\n                  render={({ field }) => (\n                    <TextField\n                      {...field}\n                      fullWidth\n                      label=\"Confirm Password\"\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      error={!!errors.confirmPassword}\n                      helperText={errors.confirmPassword?.message}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Lock sx={{ color: 'text.secondary' }} />\n                          </InputAdornment>\n                        ),\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                              edge=\"end\"\n                              sx={{ color: 'text.secondary' }}\n                            >\n                              {showConfirmPassword ? <VisibilityOff /> : <Visibility />}\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                      sx={{\n                        '& .MuiOutlinedInput-root': {\n                          backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                        },\n                      }}\n                    />\n                  )}\n                />\n\n                {/* Terms and Privacy */}\n                <Box>\n                  <Controller\n                    name=\"acceptTerms\"\n                    control={control}\n                    rules={{\n                      required: 'You must accept the Terms of Service',\n                    }}\n                    render={({ field: { value, onChange } }) => (\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={value}\n                            onChange={onChange}\n                            color=\"primary\"\n                            icon={<Box sx={{ width: 20, height: 20, border: '2px solid', borderColor: 'rgba(255,255,255,0.3)', borderRadius: 0.5 }} />}\n                            checkedIcon={<Box sx={{ width: 20, height: 20, backgroundColor: 'primary.main', color: '#000', borderRadius: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Check sx={{ fontSize: 14 }} /></Box>}\n                          />\n                        }\n                        label={\n                          <Typography variant=\"body2\">\n                            I agree to the{' '}\n                            <Link\n                              component={RouterLink}\n                              to=\"/terms\"\n                              target=\"_blank\"\n                              sx={{ color: 'primary.main' }}\n                            >\n                              Terms of Service\n                            </Link>\n                          </Typography>\n                        }\n                        sx={{\n                          alignItems: 'flex-start',\n                          ...(errors.acceptTerms && {\n                            color: 'error.main',\n                          }),\n                        }}\n                      />\n                    )}\n                  />\n                  \n                  <Controller\n                    name=\"acceptPrivacy\"\n                    control={control}\n                    rules={{\n                      required: 'You must accept the Privacy Policy',\n                    }}\n                    render={({ field: { value, onChange } }) => (\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={value}\n                            onChange={onChange}\n                            color=\"primary\"\n                            icon={<Box sx={{ width: 20, height: 20, border: '2px solid', borderColor: 'rgba(255,255,255,0.3)', borderRadius: 0.5 }} />}\n                            checkedIcon={<Box sx={{ width: 20, height: 20, backgroundColor: 'primary.main', color: '#000', borderRadius: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Check sx={{ fontSize: 14 }} /></Box>}\n                          />\n                        }\n                        label={\n                          <Typography variant=\"body2\">\n                            I agree to the{' '}\n                            <Link\n                              component={RouterLink}\n                              to=\"/privacy\"\n                              target=\"_blank\"\n                              sx={{ color: 'primary.main' }}\n                            >\n                              Privacy Policy\n                            </Link>\n                          </Typography>\n                        }\n                        sx={{\n                          alignItems: 'flex-start',\n                          ...(errors.acceptPrivacy && {\n                            color: 'error.main',\n                          }),\n                        }}\n                      />\n                    )}\n                  />\n\n                  <Controller\n                    name=\"marketingConsent\"\n                    control={control}\n                    render={({ field: { value, onChange } }) => (\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={value}\n                            onChange={onChange}\n                            color=\"primary\"\n                            icon={<Box sx={{ width: 20, height: 20, border: '2px solid', borderColor: 'rgba(255,255,255,0.3)', borderRadius: 0.5 }} />}\n                            checkedIcon={<Box sx={{ width: 20, height: 20, backgroundColor: 'primary.main', color: '#000', borderRadius: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Check sx={{ fontSize: 14 }} /></Box>}\n                          />\n                        }\n                        label={\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            I would like to receive product updates and marketing communications (optional)\n                          </Typography>\n                        }\n                      />\n                    )}\n                  />\n\n                  {(errors.acceptTerms || errors.acceptPrivacy) && (\n                    <Typography variant=\"caption\" color=\"error.main\" sx={{ mt: 1, display: 'block' }}>\n                      {errors.acceptTerms?.message || errors.acceptPrivacy?.message}\n                    </Typography>\n                  )}\n                </Box>\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  disabled={isSubmitting}\n                  sx={{\n                    py: 1.5,\n                    fontSize: '1.1rem',\n                    fontWeight: 600,\n                    background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                    color: '#000',\n                    '&:hover': {\n                      background: 'linear-gradient(135deg, #33ddff 0%, #7b8eed 100%)',\n                    },\n                    '&:disabled': {\n                      background: 'rgba(255, 255, 255, 0.1)',\n                      color: 'rgba(255, 255, 255, 0.5)',\n                    },\n                  }}\n                >\n                  {isSubmitting ? 'Creating Account...' : 'Create Account'}\n                </Button>\n              </Stack>\n            </Box>\n\n            <Divider sx={{ my: 4 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                OR\n              </Typography>\n            </Divider>\n\n            {/* Login Link */}\n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Already have an account?{' '}\n                <Link\n                  component={RouterLink}\n                  to=\"/login\"\n                  sx={{\n                    color: 'primary.main',\n                    textDecoration: 'none',\n                    fontWeight: 600,\n                    '&:hover': {\n                      textDecoration: 'underline',\n                    },\n                  }}\n                >\n                  Sign in here\n                </Link>\n              </Typography>\n              \n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 2, display: 'block' }}>\n                🔒 Your data is secure and protected by industry-leading encryption\n              </Typography>\n            </Box>\n          </Paper>\n        </motion.div>\n      </Container>\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterPage","navigate","useNavigate","location","useLocation","register","useAuth","setLoading","useLoading","enqueueSnackbar","useSnackbar","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","error","setError","selectedTier","_a","control","handleSubmit","watch","errors","isSubmitting","useForm","password","passwordStrength","score","onSubmit","data","err","errorMessage","jsx","Box","Container","jsxs","motion","Button","ArrowBack","Paper","Typography","Alert","Stack","Controller","field","TextField","InputAdornment","Person","Email","value","Lock","IconButton","VisibilityOff","Visibility","LinearProgress","onChange","FormControlLabel","Checkbox","Check","Link","RouterLink","_c","Divider"],"mappings":"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"}