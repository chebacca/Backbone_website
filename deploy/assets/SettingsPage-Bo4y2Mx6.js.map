{"version":3,"file":"SettingsPage-Bo4y2Mx6.js","sources":["../../src/pages/dashboard/SettingsPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  Switch,\n  Divider,\n  Avatar,\n  IconButton,\n  Paper,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  Chip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@mui/material';\nimport {\n  Security,\n  Notifications,\n  Download,\n  Delete,\n  Visibility,\n  VisibilityOff,\n  PhotoCamera,\n  Warning,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useSnackbar } from 'notistack';\nimport { useAuth } from '@/context/AuthContext';\nimport { authService } from '@/services/authService';\n\ninterface SecuritySetting {\n  id: string;\n  title: string;\n  description: string;\n  enabled: boolean;\n  icon: React.ReactNode;\n  type: 'security' | 'privacy' | 'notifications';\n}\n\nconst securitySettings: SecuritySetting[] = [\n  {\n    id: 'two_factor',\n    title: 'Two-Factor Authentication',\n    description: 'Add an extra layer of security to your account',\n    enabled: false,\n    icon: <Security />,\n    type: 'security',\n  },\n  {\n    id: 'email_notifications',\n    title: 'Email Notifications',\n    description: 'Receive email alerts for important account activities',\n    enabled: true,\n    icon: <Notifications />,\n    type: 'notifications',\n  },\n  {\n    id: 'login_alerts',\n    title: 'Login Alerts',\n    description: 'Get notified when someone logs into your account',\n    enabled: true,\n    icon: <Security />,\n    type: 'security',\n  },\n  {\n    id: 'data_export',\n    title: 'Data Export Access',\n    description: 'Allow downloading of your account data',\n    enabled: true,\n    icon: <Download />,\n    type: 'privacy',\n  },\n];\n\nconst SettingsPage: React.FC = () => {\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n  \n  const [profile, setProfile] = useState({\n    firstName: (user as any)?.firstName || '',\n    lastName: (user as any)?.lastName || '',\n    email: user?.email || '',\n    company: '',\n    jobTitle: '',\n    phone: '',\n    timezone: 'UTC',\n    language: 'en',\n  });\n\n  const [security, setSecurity] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  });\n\n  const [settings, setSettings] = useState(securitySettings);\n  const [twoFA, setTwoFA] = useState<{ qr?: string; secret?: string; enabled?: boolean; backupCodes?: string[] }>({});\n  const [twoFADialog, setTwoFADialog] = useState(false);\n  const [twoFAToken, setTwoFAToken] = useState('');\n  const [showPasswords, setShowPasswords] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState('profile');\n\n  const handleProfileUpdate = () => {\n    enqueueSnackbar('Profile updated successfully', { variant: 'success' });\n  };\n\n  const handlePasswordChange = () => {\n    if (security.newPassword !== security.confirmPassword) {\n      enqueueSnackbar('Passwords do not match', { variant: 'error' });\n      return;\n    }\n    enqueueSnackbar('Password changed successfully', { variant: 'success' });\n    setSecurity({ currentPassword: '', newPassword: '', confirmPassword: '' });\n  };\n\n  const handleSettingToggle = (settingId: string) => {\n    setSettings(prev => \n      prev.map(setting => \n        setting.id === settingId \n          ? { ...setting, enabled: !setting.enabled }\n          : setting\n      )\n    );\n    enqueueSnackbar('Setting updated', { variant: 'success' });\n  };\n\n  const handleEnable2FA = async () => {\n    try {\n      const init = await authService.twoFASetupInitiate();\n      setTwoFA({ qr: init.qrCodeDataUrl, secret: init.secret, enabled: false });\n      setTwoFADialog(true);\n    } catch (e: any) {\n      enqueueSnackbar(e.message || 'Failed to start 2FA setup', { variant: 'error' });\n    }\n  };\n\n  const handleVerify2FA = async () => {\n    try {\n      const res = await authService.twoFASetupVerify(twoFAToken.trim());\n      setTwoFA(prev => ({ ...prev, enabled: true, backupCodes: res.backupCodes }));\n      enqueueSnackbar('Two-factor authentication enabled', { variant: 'success' });\n      setTwoFADialog(false);\n    } catch (e: any) {\n      enqueueSnackbar(e.message || 'Invalid code', { variant: 'error' });\n    }\n  };\n\n  const handleDisable2FA = async () => {\n    try {\n      await authService.twoFADisable();\n      setTwoFA({ enabled: false });\n      enqueueSnackbar('Two-factor authentication disabled', { variant: 'success' });\n    } catch (e: any) {\n      enqueueSnackbar(e.message || 'Failed to disable 2FA', { variant: 'error' });\n    }\n  };\n\n  const handleDeleteAccount = () => {\n    enqueueSnackbar('Account deletion initiated. Check your email for confirmation.', { \n      variant: 'warning' \n    });\n    setDeleteDialogOpen(false);\n  };\n\n  const TabButton = ({ id, label, isActive }: { id: string; label: string; isActive: boolean }) => (\n    <Button\n      variant={isActive ? 'contained' : 'outlined'}\n      onClick={() => setActiveTab(id)}\n      sx={{\n        mr: 1,\n        mb: 1,\n        ...(isActive && {\n          background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n          color: '#000',\n        }),\n      }}\n    >\n      {label}\n    </Button>\n  );\n\n  return (\n    <Box>\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h4\" sx={{ fontWeight: 700, mb: 1 }}>\n            Account Settings\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            Manage your account preferences and security settings\n          </Typography>\n        </Box>\n      </motion.div>\n\n      {/* Tab Navigation */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.1 }}\n      >\n        <Box sx={{ mb: 4 }}>\n          <TabButton id=\"profile\" label=\"Profile\" isActive={activeTab === 'profile'} />\n          <TabButton id=\"security\" label=\"Security\" isActive={activeTab === 'security'} />\n          <TabButton id=\"notifications\" label=\"Notifications\" isActive={activeTab === 'notifications'} />\n          <TabButton id=\"privacy\" label=\"Privacy\" isActive={activeTab === 'privacy'} />\n          <TabButton id=\"danger\" label=\"Danger Zone\" isActive={activeTab === 'danger'} />\n        </Box>\n      </motion.div>\n\n      {/* Profile Tab */}\n      {activeTab === 'profile' && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <Grid container spacing={4}>\n            <Grid item xs={12} md={4}>\n              <Paper\n                sx={{\n                  p: 3,\n                  textAlign: 'center',\n                  background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                  backdropFilter: 'blur(20px)',\n                  border: '1px solid rgba(255,255,255,0.1)',\n                }}\n              >\n                <Box sx={{ position: 'relative', display: 'inline-block', mb: 2 }}>\n                  <Avatar\n                    sx={{\n                      width: 120,\n                      height: 120,\n                      fontSize: '3rem',\n                      bgcolor: 'primary.main',\n                    }}\n                  >\n                    {(user as any)?.firstName?.[0]}{(user as any)?.lastName?.[0]}\n                  </Avatar>\n                  <IconButton\n                    sx={{\n                      position: 'absolute',\n                      bottom: 0,\n                      right: 0,\n                      bgcolor: 'primary.main',\n                      color: '#000',\n                      '&:hover': { bgcolor: 'primary.dark' },\n                    }}\n                  >\n                    <PhotoCamera />\n                  </IconButton>\n                </Box>\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                  {profile.firstName} {profile.lastName}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {profile.email}\n                </Typography>\n                <Chip\n                  label={(user as any)?.subscription?.tier || 'Pro'}\n                  color=\"primary\"\n                  sx={{ mt: 1 }}\n                />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={8}>\n              <Paper\n                sx={{\n                  p: 4,\n                  background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                  backdropFilter: 'blur(20px)',\n                  border: '1px solid rgba(255,255,255,0.1)',\n                }}\n              >\n                <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n                  Personal Information\n                </Typography>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"First Name\"\n                      value={profile.firstName}\n                      onChange={(e) => setProfile(prev => ({ ...prev, firstName: e.target.value }))}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Last Name\"\n                      value={profile.lastName}\n                      onChange={(e) => setProfile(prev => ({ ...prev, lastName: e.target.value }))}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email Address\"\n                      value={profile.email}\n                      onChange={(e) => setProfile(prev => ({ ...prev, email: e.target.value }))}\n                      disabled\n                      helperText=\"Contact support to change your email address\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Company\"\n                      value={profile.company}\n                      onChange={(e) => setProfile(prev => ({ ...prev, company: e.target.value }))}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Job Title\"\n                      value={profile.jobTitle}\n                      onChange={(e) => setProfile(prev => ({ ...prev, jobTitle: e.target.value }))}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Phone Number\"\n                      value={profile.phone}\n                      onChange={(e) => setProfile(prev => ({ ...prev, phone: e.target.value }))}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"timezone-select-label\">Timezone</InputLabel>\n                      <Select\n                        labelId=\"timezone-select-label\"\n                        id=\"timezone-select\"\n                        value={profile.timezone}\n                        label=\"Timezone\"\n                        onChange={(e) => setProfile(prev => ({ ...prev, timezone: e.target.value }))}\n                        inputProps={{\n                          'aria-label': 'Select timezone',\n                          title: 'Select your timezone',\n                          name: 'timezone'\n                        }}\n                        aria-labelledby=\"timezone-select-label\"\n                        title=\"Select your timezone\"\n                      >\n                        <MenuItem value=\"UTC\">UTC</MenuItem>\n                        <MenuItem value=\"America/New_York\">Eastern Time</MenuItem>\n                        <MenuItem value=\"America/Chicago\">Central Time</MenuItem>\n                        <MenuItem value=\"America/Denver\">Mountain Time</MenuItem>\n                        <MenuItem value=\"America/Los_Angeles\">Pacific Time</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Box sx={{ mt: 4, display: 'flex', gap: 2 }}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleProfileUpdate}\n                    sx={{\n                      background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                      color: '#000',\n                    }}\n                  >\n                    Save Changes\n                  </Button>\n                  <Button variant=\"outlined\">\n                    Cancel\n                  </Button>\n                </Box>\n              </Paper>\n            </Grid>\n          </Grid>\n        </motion.div>\n      )}\n\n      {/* Security Tab */}\n      {activeTab === 'security' && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <Grid container spacing={4}>\n            <Grid item xs={12} md={6}>\n              <Paper\n                sx={{\n                  p: 4,\n                  background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                  backdropFilter: 'blur(20px)',\n                  border: '1px solid rgba(255,255,255,0.1)',\n                }}\n              >\n                <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n                  Change Password\n                </Typography>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Current Password\"\n                      type={showPasswords ? 'text' : 'password'}\n                      value={security.currentPassword}\n                      onChange={(e) => setSecurity(prev => ({ ...prev, currentPassword: e.target.value }))}\n                      InputProps={{\n                        endAdornment: (\n                          <IconButton\n                            onClick={() => setShowPasswords(!showPasswords)}\n                            edge=\"end\"\n                          >\n                            {showPasswords ? <VisibilityOff /> : <Visibility />}\n                          </IconButton>\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"New Password\"\n                      type={showPasswords ? 'text' : 'password'}\n                      value={security.newPassword}\n                      onChange={(e) => setSecurity(prev => ({ ...prev, newPassword: e.target.value }))}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Confirm New Password\"\n                      type={showPasswords ? 'text' : 'password'}\n                      value={security.confirmPassword}\n                      onChange={(e) => setSecurity(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Button\n                  variant=\"contained\"\n                  onClick={handlePasswordChange}\n                  sx={{\n                    mt: 3,\n                    background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)',\n                    color: '#000',\n                  }}\n                >\n                  Update Password\n                </Button>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={6}>\n              <Paper\n                sx={{\n                  p: 4,\n                  background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n                  backdropFilter: 'blur(20px)',\n                  border: '1px solid rgba(255,255,255,0.1)',\n                }}\n              >\n                <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n                  Security Settings\n                </Typography>\n\n                <List>\n                  {settings.filter(s => s.type === 'security').map((setting) => (\n                    <ListItem key={setting.id} sx={{ px: 0 }}>\n                      <ListItemIcon>\n                        {setting.icon}\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={setting.title}\n                        secondary={setting.description}\n                      />\n                      <ListItemSecondaryAction>\n                        <Switch\n                          checked={setting.enabled}\n                          onChange={() => handleSettingToggle(setting.id)}\n                          color=\"primary\"\n                        />\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  ))}\n                  <Divider sx={{ my: 2 }} />\n                  <ListItem sx={{ px: 0 }}>\n                    <ListItemIcon>\n                      <Security />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Two-Factor Authentication (TOTP)\"\n                      secondary={twoFA.enabled ? 'Enabled' : 'Disabled'}\n                    />\n                    <ListItemSecondaryAction>\n                      {twoFA.enabled ? (\n                        <Button variant=\"outlined\" color=\"error\" onClick={handleDisable2FA}>Disable</Button>\n                      ) : (\n                        <Button variant=\"contained\" onClick={handleEnable2FA} sx={{ background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)', color: '#000' }}>Enable</Button>\n                      )}\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                </List>\n              </Paper>\n            </Grid>\n          </Grid>\n        </motion.div>\n      )}\n\n      {/* Notifications Tab */}\n      {activeTab === 'notifications' && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <Paper\n            sx={{\n              p: 4,\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n              backdropFilter: 'blur(20px)',\n              border: '1px solid rgba(255,255,255,0.1)',\n            }}\n          >\n            <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n              Notification Preferences\n            </Typography>\n\n            <List>\n              {settings.filter(s => s.type === 'notifications').map((setting) => (\n                <ListItem key={setting.id} sx={{ px: 0 }}>\n                  <ListItemIcon>\n                    {setting.icon}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={setting.title}\n                    secondary={setting.description}\n                  />\n                  <ListItemSecondaryAction>\n                    <Switch\n                      checked={setting.enabled}\n                      onChange={() => handleSettingToggle(setting.id)}\n                      color=\"primary\"\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </motion.div>\n      )}\n\n      {/* Privacy Tab */}\n      {activeTab === 'privacy' && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <Paper\n            sx={{\n              p: 4,\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\n              backdropFilter: 'blur(20px)',\n              border: '1px solid rgba(255,255,255,0.1)',\n            }}\n          >\n            <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3 }}>\n              Privacy & Data Controls\n            </Typography>\n\n            <List>\n              {settings.filter(s => s.type === 'privacy').map((setting) => (\n                <ListItem key={setting.id} sx={{ px: 0 }}>\n                  <ListItemIcon>\n                    {setting.icon}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={setting.title}\n                    secondary={setting.description}\n                  />\n                  <ListItemSecondaryAction>\n                    <Switch\n                      checked={setting.enabled}\n                      onChange={() => handleSettingToggle(setting.id)}\n                      color=\"primary\"\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n\n            <Divider sx={{ my: 3 }} />\n\n            <Alert severity=\"info\" sx={{ mb: 3 }}>\n              <Typography variant=\"body2\">\n                <strong>Data Export:</strong> You can download a copy of your data at any time. \n                This includes your profile information, license history, and usage analytics.\n              </Typography>\n            </Alert>\n\n            <Button\n              variant=\"outlined\"\n              startIcon={<Download />}\n              sx={{ mr: 2 }}\n            >\n              Export My Data\n            </Button>\n          </Paper>\n        </motion.div>\n      )}\n\n      {/* Danger Zone Tab */}\n      {activeTab === 'danger' && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <Paper\n            sx={{\n              p: 4,\n              background: 'linear-gradient(135deg, rgba(244, 67, 54, 0.1) 0%, rgba(244, 67, 54, 0.05) 100%)',\n              backdropFilter: 'blur(20px)',\n              border: '1px solid rgba(244, 67, 54, 0.2)',\n            }}\n          >\n            <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3, color: 'error.main' }}>\n              Danger Zone\n            </Typography>\n\n            <Alert severity=\"warning\" sx={{ mb: 3 }}>\n              <Typography variant=\"body2\">\n                <strong>Warning:</strong> These actions are irreversible. Please proceed with caution.\n              </Typography>\n            </Alert>\n\n            <Box sx={{ p: 3, border: '1px solid', borderColor: 'error.main', borderRadius: 2 }}>\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>\n                Delete Account\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                Permanently delete your account and all associated data. This action cannot be undone.\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                startIcon={<Delete />}\n                onClick={() => setDeleteDialogOpen(true)}\n              >\n                Delete My Account\n              </Button>\n            </Box>\n          </Paper>\n        </motion.div>\n      )}\n\n      {/* Delete Account Dialog */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={() => setDeleteDialogOpen(false)}\n        PaperProps={{\n          sx: {\n            backgroundColor: 'background.paper',\n            border: '1px solid rgba(244, 67, 54, 0.2)',\n          },\n        }}\n      >\n        <DialogTitle sx={{ color: 'error.main' }}>\n          Delete Account\n        </DialogTitle>\n        <DialogContent>\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            This action is permanent and cannot be undone.\n          </Alert>\n          <Typography variant=\"body1\" sx={{ mb: 2 }}>\n            Are you sure you want to delete your account? This will:\n          </Typography>\n          <List dense>\n            <ListItem>\n              <ListItemIcon>\n                <Warning color=\"error\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Permanently delete all your data\" />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Warning color=\"error\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Cancel all active subscriptions\" />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Warning color=\"error\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Revoke all license keys\" />\n            </ListItem>\n          </List>\n          <TextField\n            fullWidth\n            label=\"Type 'DELETE' to confirm\"\n            sx={{ mt: 2 }}\n            placeholder=\"DELETE\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            onClick={handleDeleteAccount}\n            color=\"error\"\n            variant=\"contained\"\n          >\n            Delete Account\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* 2FA Setup Dialog */}\n      <Dialog\n        open={twoFADialog}\n        onClose={() => setTwoFADialog(false)}\n        PaperProps={{\n          sx: { backgroundColor: 'background.paper', border: '1px solid rgba(255, 255, 255, 0.1)' },\n        }}\n      >\n        <DialogTitle>Set up Two-Factor Authentication</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\n            Scan the QR code with Google Authenticator, Authy, or another TOTP app. Then enter the 6-digit code to confirm.\n          </Typography>\n          {twoFA.qr && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\n              <img src={twoFA.qr} alt=\"2FA QR Code\" style={{ width: 200, height: 200 }} />\n            </Box>\n          )}\n          {twoFA.secret && (\n            <Alert severity=\"info\" sx={{ mb: 2 }}>\n              Secret: {twoFA.secret}\n            </Alert>\n          )}\n          <TextField\n            fullWidth\n            label=\"Authentication code\"\n            value={twoFAToken}\n            onChange={(e) => setTwoFAToken(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setTwoFADialog(false)}>Cancel</Button>\n          <Button variant=\"contained\" onClick={handleVerify2FA} sx={{ background: 'linear-gradient(135deg, #00d4ff 0%, #667eea 100%)', color: '#000' }}>Verify & Enable</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default SettingsPage;\n"],"names":["securitySettings","Security","Notifications","Download","SettingsPage","user","useAuth","enqueueSnackbar","useSnackbar","profile","setProfile","useState","security","setSecurity","settings","setSettings","twoFA","setTwoFA","twoFADialog","setTwoFADialog","twoFAToken","setTwoFAToken","showPasswords","setShowPasswords","deleteDialogOpen","setDeleteDialogOpen","activeTab","setActiveTab","handleProfileUpdate","handlePasswordChange","handleSettingToggle","settingId","prev","setting","handleEnable2FA","init","authService","e","handleVerify2FA","res","handleDisable2FA","handleDeleteAccount","TabButton","id","label","isActive","jsx","Button","Box","motion","Typography","jsxs","Grid","Paper","Avatar","_a","_b","IconButton","PhotoCamera","Chip","_c","TextField","FormControl","InputLabel","Select","MenuItem","VisibilityOff","Visibility","List","s","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Switch","Divider","Alert","Delete","Dialog","DialogTitle","DialogContent","Warning","DialogActions"],"mappings":"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"}