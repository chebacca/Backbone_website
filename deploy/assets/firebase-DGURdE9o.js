const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/FirestoreCollectionManager-CrvZR27s.js","assets/index-Dy3Oh4Su.js","assets/mui-D8UjIA2s.js","assets/vendor-CjD1bmmO.js","assets/stripe-CUttI3Gx.js","assets/index-CBai7h7s.css","assets/index.esm-ClhtutUx.js","assets/index.esm-COtph9ny.js","assets/index.esm-Bm1DnCIa.js"])))=>i.map(i=>d[i]);
import{_ as y}from"./index-Dy3Oh4Su.js";import{r as C,i as I,S as M,D as j,_ as z,a as R,b as U,c as O,d as x,e as k,f as V,g as L,h as B,F as G}from"./index.esm-COtph9ny.js";import{getFirestore as E,query as f,collection as b,where as c,getDocs as w,getDoc as N,doc as h,orderBy as q,addDoc as Q,deleteDoc as K}from"./index.esm-ClhtutUx.js";import{getAuth as _}from"./index.esm-Bm1DnCIa.js";import"./mui-D8UjIA2s.js";import"./vendor-CjD1bmmO.js";import"./stripe-CUttI3Gx.js";var W="firebase",Y="12.1.0";/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */C(W,Y,"app");const $=Object.freeze(Object.defineProperty({__proto__:null,FirebaseError:G,SDK_VERSION:M,_DEFAULT_ENTRY_NAME:j,_addComponent:z,_apps:R,_components:U,_getProvider:O,_isFirebaseServerApp:x,_registerComponent:k,_serverApps:V,getApp:L,getApps:B,initializeApp:I,registerVersion:C},Symbol.toStringTag,{value:"Module"})),A={},J=()=>typeof window<"u"&&window.FIREBASE_CONFIG?window.FIREBASE_CONFIG:{apiKey:(A==null?void 0:A.VITE_FIREBASE_API_KEY)||"AIzaSyDFnIzSYCdPsDDdvP1lympVxEeUn0AQhWs",authDomain:"backbone-logic.firebaseapp.com",projectId:"backbone-logic",storageBucket:"backbone-logic.firebasestorage.app",messagingSenderId:"749245129278",appId:"1:749245129278:web:dfa5647101ea160a3b276f",measurementId:"G-8SZRDQ4XVR"},T=J();let u;try{u=I(T),console.log("üî• [Firebase] App initialized successfully")}catch(e){console.log("‚ÑπÔ∏è [Firebase] App already initialized or error:",e)}async function X(){if(u)return u;try{const{getApps:e}=await y(async()=>{const{getApps:t}=await Promise.resolve().then(()=>$);return{getApps:t}},void 0),r=e();if(r.length>0)return u=r[0],console.log("‚úÖ [Firebase] Using existing app instance"),u}catch(e){console.warn("‚ö†Ô∏è [Firebase] Failed to get existing apps:",e)}try{return u=I(T,"fallback"),console.log("‚úÖ [Firebase] Created fallback app instance"),u}catch(e){throw console.error("‚ùå [Firebase] Failed to create fallback app:",e),new Error("Failed to initialize Firebase app")}}const g=u?E(u):E(),F=u?_(u):_();async function ce(){const e=await X();return{app:e,db:E(e),auth:_(e)}}function Z(){if(!(typeof window>"u"))try{console.log("‚ÑπÔ∏è [Firebase] Skipping client-side CSP override - relying on Firebase hosting CSP");const e=document.querySelector('meta[http-equiv="Content-Security-Policy"]');e&&(e.remove(),console.log("üßπ [Firebase] Removed conflicting client-side CSP meta tag"))}catch(e){console.warn("‚ö†Ô∏è [Firebase] Failed to clean up CSP:",e)}}Z();typeof window<"u"&&(window.FIREBASE_IGNORE_UNDEFINED_PROPERTIES=!0);const S=e=>{if(typeof e!="object"||e===null)return e;if(Array.isArray(e))return e.map(t=>S(t));const r={};for(const[t,s]of Object.entries(e))s!=null&&(r[t]=S(s));return r};console.log("üåê [Firebase] Licensing website mode: production (web-only) - no emulators");const le=()=>!0;let P=!1;const me=async()=>{if(!P)try{const{firestoreCollectionManager:e}=await y(async()=>{const{firestoreCollectionManager:r}=await import("./FirestoreCollectionManager-CrvZR27s.js");return{firestoreCollectionManager:r}},__vite__mapDeps([0,1,2,3,4,5,6,7,8]));await e.initializeCollections(),P=!0,console.log("‚úÖ [Firebase] Collection manager initialized")}catch(e){console.error("‚ùå [Firebase] Failed to initialize collection manager:",e)}},de=()=>F.currentUser!==null,pe=()=>F.currentUser,H=e=>{var r;return((r=F.currentUser)==null?void 0:r.email)===e},ge=async e=>{try{if(H(e))return!0;if(F.currentUser&&F.currentUser.email!==e){const{signOut:r}=await y(async()=>{const{signOut:t}=await import("./index.esm-Bm1DnCIa.js");return{signOut:t}},__vite__mapDeps([8,7]));await r(F)}try{const r=localStorage.getItem("auth_user"),t=localStorage.getItem("temp_credentials");if(r&&t){const s=JSON.parse(t);if(s.email===e&&s.password){console.log("üîë [Firebase] Attempting to restore Firebase Auth session with stored credentials");const{signInWithEmailAndPassword:a}=await y(async()=>{const{signInWithEmailAndPassword:m}=await import("./index.esm-Bm1DnCIa.js");return{signInWithEmailAndPassword:m}},__vite__mapDeps([8,7]));return await a(F,e,s.password),console.log("‚úÖ [Firebase] Firebase Auth session restored successfully"),!0}}}catch(r){console.warn("‚ö†Ô∏è [Firebase] Could not restore session with stored credentials:",r)}return console.log("‚ÑπÔ∏è [Firebase] No stored credentials available for session restoration"),!1}catch(r){return console.warn("‚ö†Ô∏è [Firebase] Error during session restoration:",r),!1}};class ue{static async getOrganizationsForUser(r){try{console.log("üîç [Firebase] Getting organizations for user:",r);const t=f(b(g,"organizations"),c("ownerUserId","==",r)),s=await w(t),a=f(b(g,"org_members"),c("userId","==",r),c("status","==","ACTIVE")),m=await w(a),o=new Set,n=[];s.forEach(d=>{const p={id:d.id,...d.data()};n.push(p),o.add(d.id)});for(const d of m.docs){const i=d.data().orgId;if(!o.has(i)){const l=await N(h(g,"organizations",i));if(l.exists()){const D={id:l.id,...l.data()};n.push(D),o.add(i)}}}return console.log("‚úÖ [Firebase] Found organizations:",n.length),n}catch(t){return console.error("‚ùå [Firebase] Error getting organizations:",t),[]}}static async getOrgMembers(r){try{console.log("üîç [Firebase] Getting org members for:",r);const t=f(b(g,"org_members"),c("orgId","==",r),c("status","==","ACTIVE"),q("createdAt","desc")),s=await w(t),a=[];return s.forEach(m=>{const o=m.data();let n=o.name;n||(o.firstName&&o.lastName?n=`${o.firstName} ${o.lastName}`:o.firstName?n=o.firstName:o.lastName?n=o.lastName:o.email?n=o.email.split("@")[0].replace(/[._-]/g," ").split(" ").map(l=>l.charAt(0).toUpperCase()+l.slice(1).toLowerCase()).join(" "):n="Unknown User");const d={id:m.id,...o,name:n};a.push(d)}),console.log("‚úÖ [Firebase] Found org members:",a.length),a}catch(t){return console.error("‚ùå [Firebase] Error getting org members:",t),[]}}static async getProjectTeamMembers(r){try{console.log("üîç [Firebase] Getting project team members for:",r);const t=f(b(g,"projectTeamMembers"),c("projectId","==",r),c("isActive","==",!0)),s=await w(t),a=[];for(const m of s.docs){const o=m.data();let n;try{const p=await N(h(g,"org_members",o.teamMemberId));if(p.exists()){const i=p.data();let l=i.name;l||(i.firstName&&i.lastName?l=`${i.firstName} ${i.lastName}`:i.firstName?l=i.firstName:i.lastName?l=i.lastName:i.email?l=i.email.split("@")[0].replace(/[._-]/g," ").split(" ").map(v=>v.charAt(0).toUpperCase()+v.slice(1).toLowerCase()).join(" "):l="Unknown User"),n={id:p.id,...i,name:l}}}catch(p){console.warn("Failed to get team member details:",p)}const d={id:m.id,...o,teamMember:n};a.push(d)}return console.log("‚úÖ [Firebase] Found project team members:",a.length),a}catch(t){return console.error("‚ùå [Firebase] Error getting project team members:",t),[]}}static async addTeamMemberToProject(r,t,s="DO_ER"){try{console.log("üîç [Firebase] Adding team member to project:",{projectId:r,teamMemberId:t,role:s});const a=f(b(g,"projectTeamMembers"),c("projectId","==",r),c("teamMemberId","==",t),c("isActive","==",!0));if(!(await w(a)).empty)throw new Error("Team member is already assigned to this project");if(s==="ADMIN"){const p=f(b(g,"projectTeamMembers"),c("projectId","==",r),c("role","==","ADMIN"),c("isActive","==",!0));if(!(await w(p)).empty)throw new Error("Only one Admin is allowed per project. Please remove the existing Admin first.")}const o={projectId:r,teamMemberId:t,role:s,assignedAt:new Date,assignedBy:"current_user",isActive:!0},n=S(o),d=await Q(b(g,"projectTeamMembers"),n);return console.log("‚úÖ [Firebase] Team member added successfully:",d.id),{id:d.id,...o}}catch(a){throw console.error("‚ùå [Firebase] Error adding team member:",a),a}}static async removeTeamMemberFromProject(r,t){try{console.log("üîç [Firebase] Removing team member from project:",{projectId:r,teamMemberId:t});const s=f(b(g,"projectTeamMembers"),c("projectId","==",r),c("teamMemberId","==",t),c("isActive","==",!0)),a=await w(s);for(const m of a.docs)await K(h(g,"projectTeamMembers",m.id));console.log("‚úÖ [Firebase] Team member removed successfully")}catch(s){throw console.error("‚ùå [Firebase] Error removing team member:",s),s}}}export{ue as FirebaseTeamMemberService,u as app,F as auth,g as db,ue as default,F as firebaseAuth,g as firestore,Z as fixCSPIssues,pe as getCurrentFirebaseUser,ce as getInitializedServices,me as initializeFirebaseCollections,H as isEmailAuthenticated,de as isUserAuthenticated,le as isWebOnlyMode,ge as tryRestoreFirebaseSession};
