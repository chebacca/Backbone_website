import{c as s,e as r}from"./index-DhX1RZFp.js";const m={async getPricingTiers(){const e=await s.get(r.payments.pricing());if(e.data.success)return e.data.data.pricingTiers;throw new Error(e.data.message||"Failed to get pricing")},async calculateTax(e){const t=await s.post(r.payments.calculateTax(),e);if(t.data.success)return t.data.data.taxCalculation;throw new Error(t.data.message||"Failed to calculate tax")},async createSubscription(e){const t=await s.post(r.payments.createSubscription(),e);if(t.data.success)return t.data.data;throw new Error(t.data.message||"Failed to create subscription")},async getPaymentHistory(e={}){const t=new URLSearchParams;e.page&&t.append("page",e.page.toString()),e.limit&&t.append("limit",e.limit.toString());const a=await s.get(`${r.payments.history()}?${t}`);if(a.data.success)return a.data.data;throw new Error(a.data.message||"Failed to get payment history")},async getUserInvoices(e={}){const t=new URLSearchParams;e.page&&t.append("page",e.page.toString()),e.limit&&t.append("limit",e.limit.toString());const a=await s.get(`${r.invoices.list()}?${t}`);if(a.data.success)return a.data.data;throw new Error(a.data.message||"Failed to get invoices")},async getPaymentDetails(e){const t=await s.get(r.payments.details(e));if(t.data.success)return t.data.data.payment;throw new Error(t.data.message||"Failed to get payment details")},async cancelSubscription(e,t={}){const a=await s.post(r.payments.cancelSubscription(e),t);if(a.data.success)return a.data.data;throw new Error(a.data.message||"Failed to cancel subscription")},async updatePaymentMethod(e,t){const a=await s.put(r.payments.updatePaymentMethod(e),{paymentMethodId:t});if(a.data.success)return a.data.data;throw new Error(a.data.message||"Failed to update payment method")},validateBillingAddress(e){var a,l,i,n,c,o,u,d;const t=[];return(a=e.firstName)!=null&&a.trim()||t.push("First name is required"),(l=e.lastName)!=null&&l.trim()||t.push("Last name is required"),(i=e.addressLine1)!=null&&i.trim()||t.push("Address is required"),(n=e.city)!=null&&n.trim()||t.push("City is required"),(c=e.postalCode)!=null&&c.trim()||t.push("Postal code is required"),(!((o=e.country)!=null&&o.trim())||e.country.length!==2)&&t.push("Valid country code is required"),e.country==="US"&&!((u=e.state)!=null&&u.trim())&&t.push("State is required for US addresses"),e.country==="CA"&&!((d=e.state)!=null&&d.trim())&&t.push("Province is required for Canadian addresses"),{valid:t.length===0,errors:t}},formatCurrency(e,t="USD"){return new Intl.NumberFormat("en-US",{style:"currency",currency:t}).format(e/100)},formatTaxRate(e){return`${(e*100).toFixed(2)}%`},getPaymentStatusInfo(e){switch(e.toLowerCase()){case"succeeded":return{color:"success",label:"Successful"};case"pending":return{color:"warning",label:"Pending"};case"failed":return{color:"error",label:"Failed"};case"canceled":return{color:"default",label:"Canceled"};case"requires_action":return{color:"info",label:"Action Required"};default:return{color:"default",label:e}}},calculateSubscriptionPricing(e,t,a=0,l=!1){let i=e*t;const n=l?Math.round(i*2/12):0,c=i-n,o=Math.round(c*a),u=c+o;return{subtotal:i,discount:n,taxAmount:o,total:u}},validatePaymentForm(e){const t={};e.tier||(t.tier="Please select a plan"),(!e.seats||e.seats<1)&&(t.seats="At least 1 seat is required"),e.tier==="BASIC"&&e.seats>1&&(t.seats="Basic plan is limited to 1 seat"),e.tier==="PRO"&&e.seats>50&&(t.seats="Pro plan is limited to 50 seats"),e.tier==="ENTERPRISE"&&e.seats<10&&(t.seats="Enterprise plan requires minimum 10 seats");const a=this.validateBillingAddress(e.billingAddress);return a.valid||(t.billingAddress=a.errors.join(", ")),e.acceptTerms||(t.acceptTerms="You must accept the Terms of Service"),e.acceptPrivacy||(t.acceptPrivacy="You must accept the Privacy Policy"),{valid:Object.keys(t).length===0,errors:t}}};export{m as p};
