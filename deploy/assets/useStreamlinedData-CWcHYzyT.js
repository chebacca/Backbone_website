const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/firebase-CzYWGC7y.js","assets/index-SPrD8gjn.js","assets/mui-BEXhTKQE.js","assets/vendor-CjD1bmmO.js","assets/stripe-BgsnbYLP.js","assets/index-CBai7h7s.css","assets/index.esm-D7ujsXeY.js","assets/index.esm-DonjM_pP.js","assets/index.esm-D2YDx4vs.js"])))=>i.map(i=>d[i]);
var O=Object.defineProperty;var x=(o,e,a)=>e in o?O(o,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[e]=a;var E=(o,e,a)=>x(o,typeof e!="symbol"?e+"":e,a);import{r as c}from"./vendor-CjD1bmmO.js";import{_ as k}from"./index-SPrD8gjn.js";import{getDoc as z,doc as m,query as T,collection as w,where as p,getDocs as P,updateDoc as f,addDoc as j,arrayUnion as M,arrayRemove as v,limit as I,orderBy as S}from"./index.esm-DonjM_pP.js";const D=class D{constructor(){E(this,"cache",new Map);E(this,"CACHE_TTL",5*60*1e3);E(this,"db",null);E(this,"auth",null);this.initializeFirebase()}async initializeFirebase(){try{console.log("🔧 [UnifiedDataService] Initializing Firebase...");const{db:e,auth:a}=await k(async()=>{const{db:t,auth:s}=await import("./firebase-CzYWGC7y.js");return{db:t,auth:s}},__vite__mapDeps([0,1,2,3,4,5,6,7,8]));this.db=e,this.auth=a,console.log("✅ [UnifiedDataService] Firebase initialized successfully")}catch(e){throw console.error("❌ [UnifiedDataService] Failed to initialize Firebase:",e),e}}async getCurrentUser(){var t,s,i,r;const e="current-user",a=this.getFromCache(e);if(a)return a;if((!this.auth||!this.db)&&await this.initializeFirebase(),!((t=this.auth)!=null&&t.currentUser))return console.log("🔍 [UnifiedDataService] No Firebase Auth user found"),null;try{const n=await z(m(this.db,"users",this.auth.currentUser.uid));if(!n.exists())return console.error("User document not found"),null;const u=n.data();let d=null;if(u.organizationId){const h=await z(m(this.db,"organizations",u.organizationId));h.exists()&&(d=h.data())}u.organization={id:u.organizationId||"default-org",name:(d==null?void 0:d.name)||u.organizationName||"Default Organization",tier:(d==null?void 0:d.tier)||u.tier||"BASIC",isOwner:u.userType==="ACCOUNT_OWNER"||u.role==="OWNER"};const l={...u,createdAt:((s=u.createdAt)==null?void 0:s.toDate())||new Date,updatedAt:((i=u.updatedAt)==null?void 0:i.toDate())||new Date,lastLoginAt:(r=u.lastLoginAt)==null?void 0:r.toDate()};return this.setCache(e,l),l}catch(n){return console.error("Error fetching current user:",n),null}}async getUsersByOrganization(e){const a=`org-users-${e}`,t=this.getFromCache(a);if(t)return t;try{const s=T(w(this.db,"users"),p("organization.id","==",e)),r=(await P(s)).docs.map(n=>{var d,l,h;const u=n.data();return{...u,id:n.id,createdAt:((d=u.createdAt)==null?void 0:d.toDate())||new Date,updatedAt:((l=u.updatedAt)==null?void 0:l.toDate())||new Date,lastLoginAt:(h=u.lastLoginAt)==null?void 0:h.toDate()}});return this.setCache(a,r),r}catch(s){return console.error("Error fetching organization users:",s),[]}}async updateUser(e,a){try{const t={...a,updatedAt:new Date};await f(m(this.db,"users",e),t),this.clearCacheByPattern("current-user"),this.clearCacheByPattern("org-users-"),this.clearCacheByPattern("org-context-")}catch(t){throw console.error("Error updating user:",t),t}}async getProjectsForUser(){const e=await this.getCurrentUser();if(!e)return[];const a=`user-projects-${e.id}`,t=this.getFromCache(a);if(t)return t;try{const s=T(w(this.db,"projects"),p("organization.id","==",e.organization.id)),r=(await P(s)).docs.map(n=>{var d,l,h;const u=n.data();return{...u,id:n.id,createdAt:((d=u.createdAt)==null?void 0:d.toDate())||new Date,updatedAt:((l=u.updatedAt)==null?void 0:l.toDate())||new Date,lastAccessedAt:((h=u.lastAccessedAt)==null?void 0:h.toDate())||new Date}});return this.setCache(a,r),r}catch(s){return console.error("Error fetching user projects:",s),[]}}async createProject(e){try{if(!await this.getCurrentUser())throw new Error("No authenticated user");const t={...e,createdAt:new Date,updatedAt:new Date,lastAccessedAt:new Date},s=await j(w(this.db,"projects"),t);return this.clearCacheByPattern("user-projects-"),this.clearCacheByPattern("org-projects-"),this.clearCacheByPattern("org-context-"),s.id}catch(a){throw console.error("Error creating project:",a),a}}async updateProject(e,a){try{const t={...a,updatedAt:new Date};await f(m(this.db,"projects",e),t),this.clearCacheByPattern("user-projects-"),this.clearCacheByPattern("project-")}catch(t){throw console.error("Error updating project:",t),t}}async addTeamMemberToProject(e,a,t){try{const s=await z(m(this.db,"users",a));if(!s.exists())throw new Error("User not found");const i=s.data(),r=await this.getCurrentUser(),n={userId:i.id,email:i.email,name:i.name,role:t,assignedAt:new Date,assignedBy:(r==null?void 0:r.email)||"system"};await f(m(this.db,"projects",e),{teamAssignments:M(n),updatedAt:new Date}),await f(m(this.db,"users",a),{"teamMemberData.assignedProjects":M(e),updatedAt:new Date}),this.clearCacheByPattern("user-projects-"),this.clearCacheByPattern("project-")}catch(s){throw console.error("Error adding team member to project:",s),s}}async removeTeamMemberFromProject(e,a){try{const t=await z(m(this.db,"projects",e));if(!t.exists())throw new Error("Project not found");const i=t.data().teamAssignments.find(r=>r.userId===a);i&&(await f(m(this.db,"projects",e),{teamAssignments:v(i),updatedAt:new Date}),await f(m(this.db,"users",a),{"teamMemberData.assignedProjects":v(e),updatedAt:new Date}),this.clearCacheByPattern("user-projects-"),this.clearCacheByPattern("project-"))}catch(t){throw console.error("Error removing team member from project:",t),t}}async getOrganizationContext(){var s,i,r,n,u,d;(!this.auth||!this.db)&&await this.initializeFirebase();const e=await this.getCurrentUser();if(!e)throw new Error("No authenticated user");const a=`org-context-${e.organization.id}`,t=this.getFromCache(a);if(t)return t;try{const l=await z(m(this.db,"organizations",e.organization.id));if(!l.exists())throw new Error(`Organization ${e.organization.id} not found`);const h=l.data(),b={...h,id:e.organization.id,createdAt:((s=h.createdAt)==null?void 0:s.toDate())||new Date,updatedAt:((i=h.updatedAt)==null?void 0:i.toDate())||new Date},A=T(w(this.db,"subscriptions"),p("organizationId","==",e.organization.id),p("status","==","ACTIVE"),I(1)),C=await P(A);let L=null;if(!C.empty){const y=C.docs[0].data();L={...y,id:C.docs[0].id,createdAt:((r=y.createdAt)==null?void 0:r.toDate())||new Date,updatedAt:((n=y.updatedAt)==null?void 0:n.toDate())||new Date,currentPeriodStart:((u=y.currentPeriodStart)==null?void 0:u.toDate())||new Date,currentPeriodEnd:((d=y.currentPeriodEnd)==null?void 0:d.toDate())||new Date}}let F=[];try{F=await this.getUsersByOrganization(e.organization.id)}catch(y){throw console.error("Failed to get organization members:",y),y}const B={organization:b,subscription:L,members:F};return this.setCache(a,B,10*60*1e3),B}catch(l){throw console.error("Error fetching organization context:",l),l}}async getLicensesForOrganization(){(!this.auth||!this.db)&&await this.initializeFirebase();const e=await this.getCurrentUser();if(!e)return console.log("🔍 [UnifiedDataService] No user found for license query"),[];const a=`org-licenses-${e.organization.id}`,t=this.getFromCache(a);if(t)return t;try{const s=T(w(this.db,"licenses"),p("organization.id","==",e.organization.id),S("createdAt","desc")),r=(await P(s)).docs.map(n=>{var d,l,h,b,A,C;const u=n.data();return{...u,id:n.id,createdAt:((d=u.createdAt)==null?void 0:d.toDate())||new Date,updatedAt:((l=u.updatedAt)==null?void 0:l.toDate())||new Date,expiresAt:((h=u.expiresAt)==null?void 0:h.toDate())||new Date,activatedAt:(b=u.activatedAt)==null?void 0:b.toDate(),lastUsed:(A=u.lastUsed)==null?void 0:A.toDate(),assignedTo:u.assignedTo?{...u.assignedTo,assignedAt:((C=u.assignedTo.assignedAt)==null?void 0:C.toDate())||new Date}:void 0}});return this.setCache(a,r),r}catch(s){return console.error("Error fetching organization licenses:",s),[]}}async createLicense(e){try{if(!await this.getCurrentUser())throw new Error("No authenticated user");const t={...e,createdAt:new Date,updatedAt:new Date},s=await j(w(this.db,"licenses"),t);return this.clearCacheByPattern("org-licenses-"),s.id}catch(a){throw console.error("Error creating license:",a),a}}async updateLicense(e,a){try{const t={...a,updatedAt:new Date};await f(m(this.db,"licenses",e),t),this.clearCacheByPattern("org-licenses-")}catch(t){throw console.error("Error updating license:",t),t}}async assignLicense(e,a){try{const t=await z(m(this.db,"users",a));if(!t.exists())throw new Error("User not found");const s=t.data();await f(m(this.db,"licenses",e),{assignedTo:{userId:a,name:s.name||s.email,email:s.email,assignedAt:new Date},status:"ACTIVE",updatedAt:new Date}),this.clearCacheByPattern("org-licenses-")}catch(t){throw console.error("Error assigning license:",t),t}}async unassignLicense(e){try{await f(m(this.db,"licenses",e),{assignedTo:null,updatedAt:new Date}),this.clearCacheByPattern("org-licenses-")}catch(a){throw console.error("Error unassigning license:",a),a}}async getTeamMembersForOrganization(){const e=await this.getCurrentUser();if(!e)return[];const a=`org-team-members-${e.organization.id}`,t=this.getFromCache(a);if(t)return t;try{const s=T(w(this.db,"team_members"),p("organization.id","==",e.organization.id),S("createdAt","desc")),r=(await P(s)).docs.map(n=>{var d,l,h,b,A;const u=n.data();return{...u,id:n.id,createdAt:((d=u.createdAt)==null?void 0:d.toDate())||new Date,updatedAt:((l=u.updatedAt)==null?void 0:l.toDate())||new Date,joinedAt:((h=u.joinedAt)==null?void 0:h.toDate())||new Date,lastActive:(b=u.lastActive)==null?void 0:b.toDate(),licenseAssignment:u.licenseAssignment?{...u.licenseAssignment,assignedAt:((A=u.licenseAssignment.assignedAt)==null?void 0:A.toDate())||new Date}:void 0}});return this.setCache(a,r),r}catch(s){return console.error("Error fetching team members:",s),[]}}async inviteTeamMember(e){try{const a=await this.getCurrentUser();if(!a)throw new Error("No authenticated user");const t={...e,status:"pending",invitedBy:a.email,joinedAt:new Date,createdAt:new Date,updatedAt:new Date},s=await j(w(this.db,"team_members"),t);return this.clearCacheByPattern("org-team-members-"),this.clearCacheByPattern("org-users-"),s.id}catch(a){throw console.error("Error inviting team member:",a),a}}async updateTeamMember(e,a){try{const t={...a,updatedAt:new Date};await f(m(this.db,"team_members",e),t),this.clearCacheByPattern("org-team-members-"),this.clearCacheByPattern("org-users-")}catch(t){throw console.error("Error updating team member:",t),t}}async removeTeamMember(e){try{await f(m(this.db,"team_members",e),{status:"removed",updatedAt:new Date}),this.clearCacheByPattern("org-team-members-"),this.clearCacheByPattern("org-users-")}catch(a){throw console.error("Error removing team member:",a),a}}async assignLicenseToTeamMember(e,a,t,s){try{await f(m(this.db,"team_members",e),{licenseAssignment:{licenseId:a,licenseKey:t,licenseType:s,assignedAt:new Date},updatedAt:new Date}),this.clearCacheByPattern("org-team-members-"),this.clearCacheByPattern("org-licenses-")}catch(i){throw console.error("Error assigning license to team member:",i),i}}async getDatasetsForUser(){const e=await this.getCurrentUser();if(!e)return[];const a=`user-datasets-${e.id}`,t=this.getFromCache(a);if(t)return t;try{const s=T(w(this.db,"datasets"),p("owner.organizationId","==",e.organization.id),p("status","==","ACTIVE"),S("updatedAt","desc")),r=(await P(s)).docs.map(n=>{var d,l;const u=n.data();return{...u,id:n.id,createdAt:((d=u.createdAt)==null?void 0:d.toDate())||new Date,updatedAt:((l=u.updatedAt)==null?void 0:l.toDate())||new Date}});return this.setCache(a,r),r}catch(s){return console.error("Error fetching user datasets:",s),[]}}getFromCache(e){const a=this.cache.get(e);return a?Date.now()>a.timestamp+a.ttl?(this.cache.delete(e),null):a.data:null}setCache(e,a,t=this.CACHE_TTL){this.cache.set(e,{data:a,timestamp:Date.now(),ttl:t})}clearCacheByPattern(e){for(const a of this.cache.keys())a.includes(e)&&this.cache.delete(a)}clearAllCache(){this.cache.clear()}static getInstance(){return D.instance||(D.instance=new D),D.instance}};E(D,"instance");let U=D;const g=U.getInstance();function N(){const[o,e]=c.useState(null),[a,t]=c.useState(!0),[s,i]=c.useState(null),r=c.useCallback(async()=>{try{t(!0),i(null);const n=await g.getCurrentUser();e(n)}catch(n){i(n instanceof Error?n.message:"Failed to fetch user")}finally{t(!1)}},[]);return c.useEffect(()=>{r()},[r]),{data:o,loading:a,error:s,refetch:r}}function Q(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async({userId:i,updates:r})=>{try{e(!0),t(null),await g.updateUser(i,r)}catch(n){throw t(n instanceof Error?n.message:"Failed to update user"),n}finally{e(!1)}},[]),loading:o,error:a}}function V(){const[o,e]=c.useState([]),[a,t]=c.useState(!0),[s,i]=c.useState(null),r=c.useCallback(async()=>{try{t(!0),i(null);const n=await g.getProjectsForUser();e(n)}catch(n){i(n instanceof Error?n.message:"Failed to fetch projects")}finally{t(!1)}},[]);return c.useEffect(()=>{r()},[r]),{data:o,loading:a,error:s,refetch:r}}function W(){const[o,e]=c.useState(null),[a,t]=c.useState(!0),[s,i]=c.useState(null),r=c.useCallback(async()=>{try{t(!0),i(null);const n=await g.getOrganizationContext();e(n)}catch(n){i(n instanceof Error?n.message:"Failed to fetch organization context")}finally{t(!1)}},[]);return c.useEffect(()=>{r()},[r]),{data:o,loading:a,error:s,refetch:r}}function q(){const[o,e]=c.useState([]),[a,t]=c.useState(!0),[s,i]=c.useState(null),r=c.useCallback(async()=>{try{t(!0),i(null);const n=await g.getLicensesForOrganization();e(n)}catch(n){i(n instanceof Error?n.message:"Failed to fetch licenses")}finally{t(!1)}},[]);return c.useEffect(()=>{r()},[r]),{data:o,loading:a,error:s,refetch:r}}function H(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async i=>{try{return e(!0),t(null),await g.createLicense(i)}catch(r){throw t(r instanceof Error?r.message:"Failed to create license"),r}finally{e(!1)}},[]),loading:o,error:a}}function G(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async({licenseId:i,updates:r})=>{try{e(!0),t(null),await g.updateLicense(i,r)}catch(n){throw t(n instanceof Error?n.message:"Failed to update license"),n}finally{e(!1)}},[]),loading:o,error:a}}function J(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async({licenseId:i,userId:r})=>{try{e(!0),t(null),await g.assignLicense(i,r)}catch(n){throw t(n instanceof Error?n.message:"Failed to assign license"),n}finally{e(!1)}},[]),loading:o,error:a}}function X(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async({licenseId:i})=>{try{e(!0),t(null),await g.unassignLicense(i)}catch(r){throw t(r instanceof Error?r.message:"Failed to unassign license"),r}finally{e(!1)}},[]),loading:o,error:a}}function Y(){const[o,e]=c.useState([]),[a,t]=c.useState(!0),[s,i]=c.useState(null),r=c.useCallback(async()=>{try{t(!0),i(null);const n=await g.getTeamMembersForOrganization();e(n)}catch(n){i(n instanceof Error?n.message:"Failed to fetch team members")}finally{t(!1)}},[]);return c.useEffect(()=>{r()},[r]),{data:o,loading:a,error:s,refetch:r}}function Z(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async i=>{try{return e(!0),t(null),await g.inviteTeamMember(i)}catch(r){throw t(r instanceof Error?r.message:"Failed to invite team member"),r}finally{e(!1)}},[]),loading:o,error:a}}function ee(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async({memberId:i,updates:r})=>{try{e(!0),t(null),await g.updateTeamMember(i,r)}catch(n){throw t(n instanceof Error?n.message:"Failed to update team member"),n}finally{e(!1)}},[]),loading:o,error:a}}function te(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async({memberId:i})=>{try{e(!0),t(null),await g.removeTeamMember(i)}catch(r){throw t(r instanceof Error?r.message:"Failed to remove team member"),r}finally{e(!1)}},[]),loading:o,error:a}}function ae(){const[o,e]=c.useState(!1),[a,t]=c.useState(null);return{mutate:c.useCallback(async({memberId:i,licenseId:r,licenseKey:n,licenseType:u})=>{try{e(!0),t(null),await g.assignLicenseToTeamMember(i,r,n,u)}catch(d){throw t(d instanceof Error?d.message:"Failed to assign license to team member"),d}finally{e(!1)}},[]),loading:o,error:a}}function re(){var e,a,t;const{data:o}=N();return{canCreateProjects:((e=o==null?void 0:o.license)==null?void 0:e.canCreateProjects)||!1,canManageTeam:((a=o==null?void 0:o.license)==null?void 0:a.canManageTeam)||!1,isAccountOwner:(o==null?void 0:o.userType)==="ACCOUNT_OWNER",isTeamMember:(o==null?void 0:o.userType)==="TEAM_MEMBER",isAdmin:(o==null?void 0:o.userType)==="ADMIN",organizationTier:((t=o==null?void 0:o.organization)==null?void 0:t.tier)||"BASIC"}}function se(o,e){return c.useCallback((t,s)=>{const i=[...o];return e(t(o)),()=>{e(s?s(i):i)}},[o,e])}export{W as a,q as b,H as c,G as d,J as e,X as f,V as g,re as h,Y as i,Z as j,ee as k,te as l,ae as m,Q as n,se as o,N as u};
